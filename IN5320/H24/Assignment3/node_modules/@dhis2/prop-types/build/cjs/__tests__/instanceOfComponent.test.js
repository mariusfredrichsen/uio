"use strict";

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _instanceOfComponent = require("../instanceOfComponent.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// eslint-disable-next-line no-unused-vars
const toWarning = message => `Warning: Failed prop type: ${message}`;

const Foo = () => /*#__PURE__*/_react.default.createElement("span", null);

const Bar = () => /*#__PURE__*/_react.default.createElement("span", null);

Bar.displayName = 'Bar';
describe('instanceOfComponent', () => {
  jest.spyOn(console, 'error').mockImplementation(() => null);
  afterEach(() => console.error.mockClear());
  const validator = (0, _instanceOfComponent.instanceOfComponent)(Foo);
  describe('Not inside arrayOf - Valid', () => {
    it('does not return an error with valid props when exactly max length', () => {
      const props = {
        foo: /*#__PURE__*/_react.default.createElement(Foo, null)
      };

      _propTypes.default.checkPropTypes({
        foo: validator
      }, props, 'prop', 'TestComponent');

      expect(console.error).toBeCalledTimes(0);
    });
  });
  describe('Not inside arrayOf - Invalid', () => {
    it('does not return an error with valid props when exactly max length', () => {
      const props = {
        foo: /*#__PURE__*/_react.default.createElement(Bar, null)
      };
      const errorMessage = toWarning('Invalid prop `foo` supplied to `TestComponent`, expected an instance of `Foo` but found an instance of `Bar`.');

      _propTypes.default.checkPropTypes({
        foo: validator
      }, props, 'prop', 'TestComponent');

      expect(console.error).toBeCalledTimes(1);
      expect(console.error).toBeCalledWith(errorMessage);
    });
  });
  describe('Inside arrayOf - Valid', () => {
    it('does not return an error with valid props when exactly max length', () => {
      const props = {
        foo: [/*#__PURE__*/_react.default.createElement(Foo, null), /*#__PURE__*/_react.default.createElement(Foo, null), /*#__PURE__*/_react.default.createElement(Foo, null)]
      };

      _propTypes.default.checkPropTypes({
        foo: _propTypes.default.arrayOf(validator)
      }, props, 'prop', 'TestComponent');

      expect(console.error).toBeCalledTimes(0);
    });
  });
  describe('Inside arrayOf - Invalid', () => {
    it('does not return an error with valid props when exactly max length', () => {
      const props = {
        foo: [/*#__PURE__*/_react.default.createElement(Foo, null), /*#__PURE__*/_react.default.createElement(Bar, null), /*#__PURE__*/_react.default.createElement(Foo, null)]
      };
      const errorMessage = toWarning('Invalid prop `foo[1]` supplied to `TestComponent`, expected an instance of `Foo` but found an instance of `Bar`.');

      _propTypes.default.checkPropTypes({
        foo: _propTypes.default.arrayOf(validator)
      }, props, 'prop', 'TestComponent');

      expect(console.error).toBeCalledTimes(1);
      expect(console.error).toBeCalledWith(errorMessage);
    });
  });
});