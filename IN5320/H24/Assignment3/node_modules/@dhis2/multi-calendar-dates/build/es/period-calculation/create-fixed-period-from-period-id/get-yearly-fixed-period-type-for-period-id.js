import i18n from '@dhis2/d2-i18n';
import monthNumbers from '../month-numbers';
import { regexYearlyStandardPeriodId, regexYearlyFinancialPeriodId } from '../period-id/index';
const getYearlyFixedPeriodTypeForPeriodId = periodId => {
  if (regexYearlyStandardPeriodId.test(periodId)) {
    return 'YEARLY';
  }
  const financialYearFixedPeriodMatch = periodId.match(regexYearlyFinancialPeriodId);
  if (financialYearFixedPeriodMatch) {
    const monthName = financialYearFixedPeriodMatch[2].slice(0, 3);
    const result = Object.entries(monthNumbers).find(_ref => {
      let [, {
        name
      }] = _ref;
      return name.startsWith(monthName);
    });
    if (!result) {
      throw new Error('@TODO');
    }
    const [month] = result;
    return `FY${month}`;
  }
  throw new Error(i18n.t(`Could not find a period type for period id "{{periodId}}"`, {
    periodId
  }));
};
export default getYearlyFixedPeriodTypeForPeriodId;