import { Temporal } from '@js-temporal/polyfill';
import { fromAnyDate } from '../../utils/index';
import { buildDailyFixedPeriod } from '../daily-periods/index';
const generateFixedPeriodsDaily = _ref => {
  let {
    year,
    calendar,
    endsBefore: _endsBefore,
    locale
  } = _ref;
  const endsBefore = _endsBefore ? fromAnyDate({
    calendar,
    date: _endsBefore
  }) : null;
  const day = Temporal.PlainDate.from({
    year,
    month: 1,
    day: 1,
    calendar
  });
  const days = [];
  for (let i = 0; i < day.daysInYear; i++) {
    const nextDay = day.add({
      days: i
    });
    if (endsBefore && Temporal.PlainDate.compare(nextDay, endsBefore) > -1) {
      break;
    }
    const period = buildDailyFixedPeriod({
      date: nextDay,
      calendar,
      locale: locale
    });
    days.push(period);
  }
  return days;
};
export default generateFixedPeriodsDaily;