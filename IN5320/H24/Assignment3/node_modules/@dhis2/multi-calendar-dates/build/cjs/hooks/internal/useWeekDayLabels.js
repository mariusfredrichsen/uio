"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useWeekDayLabels = void 0;
var _polyfill = require("@js-temporal/polyfill");
var _react = require("react");
var _localisationHelpers = _interopRequireDefault(require("../../utils/localisationHelpers"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const useWeekDayLabels = localeOptions => (0, _react.useMemo)(() => {
  if (!localeOptions.calendar) {
    throw new Error('a calendar must be provided to useWeekDayLabels');
  }
  const today = _polyfill.Temporal.Now.zonedDateTime(localeOptions.calendar).startOfDay();
  const startOfWeek = today.subtract({
    days: today.dayOfWeek - 1
  }); // dayOfWeek is 1-based, where 1 is Monday

  const labels = [];
  for (let i = 0; i < today.daysInWeek; i++) {
    const currentDate = startOfWeek.add({
      days: i
    });
    const weekDayString = getWeekDayString(currentDate, localeOptions);
    labels.push(weekDayString);
  }
  return labels;
}, [localeOptions]);
exports.useWeekDayLabels = useWeekDayLabels;
const getWeekDayString = (date, localeOptions) => {
  return _localisationHelpers.default.localiseWeekDayLabel(date, localeOptions);
};