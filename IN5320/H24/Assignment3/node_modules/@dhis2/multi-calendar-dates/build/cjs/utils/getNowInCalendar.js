"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _polyfill = require("@js-temporal/polyfill");
var _dhis2CalendarsMap2 = require("../constants/dhis2CalendarsMap");
var _helpers = require("../utils/helpers");
/**
 * Gets the Now DateTime in the specified calendar and timeZone
 *
 * @param calendarToUse the calendar to use
 * @param timeZone the timeZone to use
 * @returns Temporal.ZoneDateTime which can be destructured to .year, .month, .day, .hour etc... (returning the values in the specified calendar) or can .getISOFields() to return the underlying iso8601 date
 */
const getNowInCalendar = function () {
  var _Intl, _Intl$DateTimeFormat, _Intl$DateTimeFormat$, _Intl$DateTimeFormat$2, _Intl$DateTimeFormat$3, _dhis2CalendarsMap;
  let calendarToUse = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'gregory';
  let timeZone = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ((_Intl = Intl) === null || _Intl === void 0 ? void 0 : (_Intl$DateTimeFormat = _Intl.DateTimeFormat) === null || _Intl$DateTimeFormat === void 0 ? void 0 : (_Intl$DateTimeFormat$ = (_Intl$DateTimeFormat$2 = _Intl$DateTimeFormat.call(_Intl)).resolvedOptions) === null || _Intl$DateTimeFormat$ === void 0 ? void 0 : (_Intl$DateTimeFormat$3 = _Intl$DateTimeFormat$.call(_Intl$DateTimeFormat$2)) === null || _Intl$DateTimeFormat$3 === void 0 ? void 0 : _Intl$DateTimeFormat$3.timeZone) || 'UTC';
  const gregorianDate = _polyfill.Temporal.Now.zonedDateTime('gregory', timeZone);
  let calendar = (_dhis2CalendarsMap = _dhis2CalendarsMap2.dhis2CalendarsMap[calendarToUse]) !== null && _dhis2CalendarsMap !== void 0 ? _dhis2CalendarsMap : calendarToUse;
  if ((0, _helpers.isCustomCalendar)(calendar)) {
    calendar = (0, _helpers.getCustomCalendarIfExists)(calendar);
  }
  const result = _polyfill.Temporal.ZonedDateTime.from(gregorianDate).withCalendar(calendar);
  return result;
};
var _default = getNowInCalendar;
exports.default = _default;