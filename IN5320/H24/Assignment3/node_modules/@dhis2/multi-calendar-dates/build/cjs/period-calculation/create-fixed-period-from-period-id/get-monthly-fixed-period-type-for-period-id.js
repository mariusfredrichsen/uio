"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _d2I18n = _interopRequireDefault(require("@dhis2/d2-i18n"));
var _monthNumbers = _interopRequireDefault(require("../month-numbers"));
var _index = require("../period-id/index");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const getMonthlyFixedPeriodTypeForPeriodId = periodId => {
  if (_index.regexMonthlyStandardPeriodId.test(periodId)) {
    return 'MONTHLY';
  }
  if (_index.regexBiMonthlyPeriodId.test(periodId)) {
    return 'BIMONTHLY';
  }
  if (_index.regexQuarterlyStandardPeriodId.test(periodId)) {
    return 'QUARTERLY';
  }
  const quarterlyFixedPeriodMatch = periodId.match(_index.regexQuarterlyOffsetPeriodId);
  if (quarterlyFixedPeriodMatch) {
    const monthName = quarterlyFixedPeriodMatch[2];
    const result = Object.entries(_monthNumbers.default).find(_ref => {
      let [, {
        name
      }] = _ref;
      return name === monthName;
    });
    if (!result) {
      throw new Error('@TODO');
    }
    const [month] = result;
    return `QUARTERLY${month}`;
  }
  if (_index.regexSixmonthlyStandardPeriodId.test(periodId)) {
    return 'SIXMONTHLY';
  }
  const sixmonthlyFixedPeriodMatch = periodId.match(_index.regexSixmonthlyOffsetPeriodId);
  if (sixmonthlyFixedPeriodMatch) {
    const monthName = sixmonthlyFixedPeriodMatch[2];
    const result = Object.entries(_monthNumbers.default).find(_ref2 => {
      let [, {
        name
      }] = _ref2;
      return name === monthName;
    });
    if (!result) {
      throw new Error('@TODO');
    }
    const [month] = result;
    return `SIXMONTHLY${month}`;
  }
  throw new Error(_d2I18n.default.t(`Could not find a period type for period id "{{periodId}}"`, {
    periodId
  }));
};
var _default = getMonthlyFixedPeriodTypeForPeriodId;
exports.default = _default;