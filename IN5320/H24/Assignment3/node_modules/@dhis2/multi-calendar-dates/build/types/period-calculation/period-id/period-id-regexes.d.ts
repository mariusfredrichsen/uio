/**
 * Will match any daily period id,
 * e.g. 2023W1
 */
export declare const regexDailyPeriodId: RegExp;
/**
 * Will match any standard weekly period id,
 * e.g. 2023W1
 */
export declare const regexWeeklyStandardPeriodId: RegExp;
/**
 * Will match any bi-weekly period id,
 * e.g. 2023BiW1
 */
export declare const regexBiWeeklyPeriodId: RegExp;
/**
 * Will match any weekly period that does not start on Monday,
 * e.g. 2023TueW1
 */
export declare const regexWeeklyOffsetPeriodId: RegExp;
/**
 * Will match any standard monthly period id,
 * e.g. 202301
 */
export declare const regexMonthlyStandardPeriodId: RegExp;
/**
 * Will match any bi-monthly period id,
 * e.g. 202301B
 */
export declare const regexBiMonthlyPeriodId: RegExp;
/**
 * Will match any standard quarterly period id,
 * e.g. 2023Q1
 */
export declare const regexQuarterlyStandardPeriodId: RegExp;
/**
 * Will match any offset quarterly period id,
 * e.g. 2023NovemberQ1
 */
export declare const regexQuarterlyOffsetPeriodId: RegExp;
/**
 * Will match any standard sixmonthly period id,
 * e.g. 2023S1
 */
export declare const regexSixmonthlyStandardPeriodId: RegExp;
/**
 * Will match any offset sixmonthly period id,
 * e.g. 2023NovemberS1
 */
export declare const regexSixmonthlyOffsetPeriodId: RegExp;
/**
 * Will match any standard yearly period id,
 * e.g. 2023
 */
export declare const regexYearlyStandardPeriodId: RegExp;
/**
 * Will match any financial yearly period id,
 * e.g. 2023Nov
 */
export declare const regexYearlyFinancialPeriodId: RegExp;
