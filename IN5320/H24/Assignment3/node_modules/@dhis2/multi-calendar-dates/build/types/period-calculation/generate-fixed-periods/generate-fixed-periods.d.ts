import { SupportedCalendar } from '../../types';
import { FixedPeriod, PeriodType } from '../types';
declare type GenerateFixedPeriods = (options: {
    year: number;
    periodType: PeriodType;
    calendar: SupportedCalendar;
    locale?: string;
    startingDay?: number; /** 1 is Monday */
    yearsCount?: number | null;
    endsBefore?: string;
}) => Array<FixedPeriod>;
/**
 * @param {Object} options
 * @param {string} [options.endsBefore] - Excludes all periods that end on or
 * after the provided date. This will help generating periods up to a certain
 * point (e.g. "now" or "in two weeks" when two open future periods are
 * allowed, like in the aggregate data entry app)
 */
declare const generateFixedPeriods: GenerateFixedPeriods;
export default generateFixedPeriods;
