import { Temporal } from '@js-temporal/polyfill';
import { PickerOptions } from '../types';
import { UseNavigationReturnType } from './internal/useNavigation';
declare type DatePickerOptions = {
    date: string;
    options: PickerOptions;
    onDateSelect: ({ calendarDate, calendarDateString, }: {
        calendarDate: Temporal.ZonedDateTime;
        calendarDateString: string;
    }) => void;
    minDate?: string;
    maxDate?: string;
    format?: 'YYYY-MM-DD' | 'DD-MM-YYYY';
    strictValidation?: boolean;
};
export declare type UseDatePickerReturn = UseNavigationReturnType & {
    weekDayLabels: string[];
    calendarWeekDays: {
        zdt: Temporal.ZonedDateTime;
        label: string | number;
        calendarDate: string;
        onClick: () => void;
        isSelected: boolean | undefined;
        isToday: boolean;
        isInCurrentMonth: boolean;
    }[][];
    isValid: boolean;
    warningMessage: string;
    errorMessage: string;
};
declare type UseDatePickerHookType = (options: DatePickerOptions) => UseDatePickerReturn;
export declare const useDatePicker: UseDatePickerHookType;
export {};
