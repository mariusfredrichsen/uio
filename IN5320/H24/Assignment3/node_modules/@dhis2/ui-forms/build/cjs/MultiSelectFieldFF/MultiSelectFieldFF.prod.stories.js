"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.InitialValue = exports.Default = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactFinalForm = require("react-final-form");
var _formDecorator = require("../formDecorator.js");
var _propTypes = require("../shared/propTypes.js");
var _MultiSelectFieldFF = require("./MultiSelectFieldFF.js");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
const description = `
The \`MultiSelectFieldFF\` is a wrapper around a \`MultiSelectField\` that enables it to work with Final Form, the preferred library for form validation and utilities in DHIS 2 apps.

#### Final Form

See how to use Final Form at [Final Form - Getting Started](https://final-form.org/docs/react-final-form/getting-started).

Inside a Final Form \`<Form>\` component, these 'FF' UI components are intended to be used in the \`component\` prop of the [Final Form \`<Field>\` components](https://final-form.org/docs/react-final-form/api/Field) where they will receive some props from the Field, e.g. \`<Field component={MultiSelectFieldFF} />\`.  See the code samples below for examples.

#### Props

The props shown in the table below are generally provided to the \`MultiSelectFieldFF\` wrapper by the Final Form \`Field\`.

Note that any props beyond the API of the \`Field\` component will be spread to the \`MultiSelectFieldFF\`, which passes any extra props to the underlying \`MultiSelectField\` using \`{...rest}\`.

Therefore, to add any props to the \`MultiSelectFieldFF\` or \`MultiSelectField\`, add those props to the parent Final Form \`Field\` component.

Also see \`MultiSelect\` and \`MultiSelectField\` for notes about props and implementation.

\`\`\`js
import { MultiSelectFieldFF } from '@dhis2/ui'
\`\`\`

Press **Submit** to see the form values logged to the console.

_**Note:** Dropdowns may not appear correctly on this page. See the affected demos in the 'Canvas' tab for propper dropdown placement._
`;
const options = [{
  value: '1',
  label: 'one'
}, {
  value: '2',
  label: 'two'
}, {
  value: '3',
  label: 'three'
}, {
  value: '4',
  label: 'four'
}, {
  value: '5',
  label: 'five'
}, {
  value: '6',
  label: 'six'
}, {
  value: '7',
  label: 'seven'
}, {
  value: '8',
  label: 'eight'
}, {
  value: '9',
  label: 'nine'
}, {
  value: '10',
  label: 'ten'
}];
const initialValue = ['3', '4', '9', '10'];
var _default = exports.default = {
  title: 'Multi Select Field (Final Form)',
  component: _MultiSelectFieldFF.MultiSelectFieldFF,
  decorators: [_formDecorator.formDecorator],
  parameters: {
    docs: {
      description: {
        component: description
      }
    }
  },
  argTypes: {
    input: {
      ..._propTypes.inputArgType
    },
    meta: {
      ..._propTypes.metaArgType
    }
  }
};
const Default = () => /*#__PURE__*/_react.default.createElement(_reactFinalForm.Field, {
  component: _MultiSelectFieldFF.MultiSelectFieldFF,
  name: "agree",
  label: "Do you agree?",
  options: options
});
exports.Default = Default;
const InitialValue = () => /*#__PURE__*/_react.default.createElement(_reactFinalForm.Field, {
  component: _MultiSelectFieldFF.MultiSelectFieldFF,
  name: "agree",
  label: "Do you agree?",
  options: options,
  initialValue: initialValue
});
exports.InitialValue = InitialValue;
InitialValue.storyName = 'InitialValue';