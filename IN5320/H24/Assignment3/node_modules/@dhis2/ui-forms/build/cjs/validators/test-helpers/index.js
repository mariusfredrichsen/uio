"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.testValidatorValues = exports.allowsEmptyValues = void 0;
const testValidatorValues = (validator, returnValue, values) => {
  const returnValueStr = returnValue === undefined ? 'undefined' : 'an error string';
  for (const value of values) {
    const type = typeof value;
    const valueStr = type === 'object' ? JSON.stringify(value) : value;
    it(`should return ${returnValueStr} for value \`${valueStr}\` of type ${type}`, () => {
      expect(validator(value)).toBe(returnValue);
    });
  }
};
exports.testValidatorValues = testValidatorValues;
const allowsEmptyValues = validator => {
  describe('allows empty values', () => {
    testValidatorValues(validator, undefined, ['', null, undefined]);
  });
};
exports.allowsEmptyValues = allowsEmptyValues;