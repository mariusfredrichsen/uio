import { FieldGroup } from '@dhis2-ui/field';
import PropTypes from 'prop-types';
import React from 'react';
import { useField } from 'react-final-form';
export const FieldGroupFF = _ref => {
  let {
    name,
    label,
    children,
    required
  } = _ref;
  const {
    meta: {
      error,
      touched
    }
  } = useField(name, {
    subscription: {
      error: true,
      touched: true
    }
  });
  const isError = !!error && !!touched;
  let errorText;
  if (isError) {
    if (typeof error === 'string') {
      errorText = error;
    } else if (typeof error === 'object' && error[name]) {
      errorText = error[name];
    } else {
      errorText = null;
    }
  }
  return /*#__PURE__*/React.createElement(FieldGroup, {
    label: label,
    required: required,
    error: isError,
    name: name,
    validationText: errorText
  }, children);
};
FieldGroupFF.propTypes = {
  children: PropTypes.node,
  label: PropTypes.string,
  name: PropTypes.string,
  required: PropTypes.bool
};