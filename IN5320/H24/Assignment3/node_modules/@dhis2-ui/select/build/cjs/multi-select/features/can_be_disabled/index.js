"use strict";

var _cypressCucumberPreprocessor = require("@badeball/cypress-cucumber-preprocessor");
(0, _cypressCucumberPreprocessor.Given)('a disabled MultiSelect with options is rendered', () => {
  cy.visitStory('MultiSelect', 'With options and disabled');
});
(0, _cypressCucumberPreprocessor.Given)('a disabled MultiSelect with options and a selection is rendered', () => {
  cy.visitStory('MultiSelect', 'With options, a selection and disabled');
});
(0, _cypressCucumberPreprocessor.Given)('the MultiSelect is closed', () => {
  cy.contains('option one').should('not.exist');
  cy.contains('option two').should('not.exist');
  cy.contains('option three').should('not.exist');
});
(0, _cypressCucumberPreprocessor.Given)('the MultiSelect is focused', () => {
  cy.get('[data-test="dhis2-uicore-select-input"]').focus();
  cy.focused().should('have.attr', 'data-test', 'dhis2-uicore-select-input');
});
(0, _cypressCucumberPreprocessor.When)('the down arrowkey is pressed on the focused element', () => {
  cy.focused().type('{downarrow}');
});
(0, _cypressCucumberPreprocessor.When)('the spacebar is pressed on the focused element', () => {
  cy.focused().type(' ');
});
(0, _cypressCucumberPreprocessor.When)('the up arrowkey is pressed on the focused element', () => {
  cy.focused().type('{uparrow}');
});
(0, _cypressCucumberPreprocessor.Then)('the selection is displayed', () => {
  cy.contains('option one').should('be.visible');
});