"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.WithPrefixAndSelection = exports.WithPrefix = exports.WithPlaceholderAndSelection = exports.WithPlaceholder = exports.WithOptionsLoadingAndLoadingText = exports.WithOptionsAndOnChange = exports.WithOptionsAndMultipleSelections = exports.WithOptionsAndLoading = exports.WithOptionsAndDisabled = exports.WithOptionsAndASelection = exports.WithOptionsASelectionAndDisabled = exports.WithOnFocus = exports.WithOnBlur = exports.WithMultipleSelectionsWrapped = exports.WithMoreThanThreeOptionsAndA100PxMaxHeight = exports.WithMoreThanTenOptions = exports.WithInvalidOptions = exports.WithInvalidFilterableOptions = exports.WithInitialFocus = exports.WithFilterField = exports.WithDisabledOptionAndOnChange = exports.WithCustomOptionsAndOnChange = exports.WithClearButtonSelectionAndOnChange = exports.ShiftedIntoView = exports.RTL = exports.FlippedPosition = exports.EmptyWithEmptyText = exports.EmptyWithEmptyComponent = exports.Empty = exports.DenseWithSelections = exports.Dense = exports.DefaultPosition = void 0;
var _style = _interopRequireDefault(require("styled-jsx/style"));
var _uiConstants = require("@dhis2/ui-constants");
var _propTypes = _interopRequireDefault(require("prop-types"));
var _react = _interopRequireWildcard(require("react"));
var _index = require("../index.js");
var _index2 = require("./index.js");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
const description = `
Multiple selection allows the user to select more than one option from the list. Checkboxes are used to highlight the possibility of making more than one selection. Selected options are displayed as chips inside the input. Make sure to communicate clearly to the user if there is a limit to the number of selectable elements.

Use multiple selection wherever the user needs to make more than one selection. If the multiple selection is complex, requires a defined order or needs to made from different groups, consider using a transfer component instead.

Read more about using \`Select\` components at [Design System: Select](https://github.com/dhis2/design-system/blob/master/molecules/select.md).

\`\`\`js
import { MultiSelect, MultiSelectOption } from '@dhis2/ui'
\`\`\`

_**Note:** Due to demo limitations on this page, only one representative example is rendered here. For more (props-interactive) examples, see individual stories in the 'Canvas' tab._
`;
const eventHandler = handlerName => (payload, event) => {
  console.log(`${handlerName} payload`, payload);
  console.log(`${handlerName} event`, event);
};
const onChange = eventHandler('onChange');
const onFocus = eventHandler('onFocus');
const onBlur = eventHandler('onBlur');
const CustomMultiSelectOption = _ref => {
  let {
    label,
    onClick
  } = _ref;
  return /*#__PURE__*/_react.default.createElement("div", {
    onClick: e => onClick({}, e)
  }, label);
};
CustomMultiSelectOption.propTypes = {
  label: _propTypes.default.string,
  onClick: _propTypes.default.func
};
const requiredIfArgType = {
  table: {
    type: {
      summary: 'string'
    },
    control: {
      type: 'string'
    }
  }
};
var _default = exports.default = {
  title: 'Multi Select',
  component: _index2.MultiSelect,
  parameters: {
    docs: {
      description: {
        component: description
      },
      // Disable stories in docs page by default, then use one representative example
      disable: true,
      // Use iframe to keep dropdown menu inside story for docs page
      inlineStories: false,
      iframeHeight: '300px'
    }
  },
  // Use 'onChange' as a default arg, otherwise components throw an error when interacted with
  // (Maybe this could be handled in the component - as a required prop)
  args: {
    className: 'select',
    onChange
  },
  argTypes: {
    valid: {
      ..._uiConstants.sharedPropTypes.statusArgType
    },
    warning: {
      ..._uiConstants.sharedPropTypes.statusArgType
    },
    error: {
      ..._uiConstants.sharedPropTypes.statusArgType
    },
    clearText: {
      ...requiredIfArgType
    },
    noMatchText: {
      ...requiredIfArgType
    }
  }
};
const WithOptionsTemplate = args => /*#__PURE__*/_react.default.createElement(_index2.MultiSelect, args, /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "1",
  label: "option one"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "2",
  label: "option two"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "3",
  label: "option three"
}));
const EmptyTemplate = args => /*#__PURE__*/_react.default.createElement(_index2.MultiSelect, args);
const WithOptionsAndOnChange = exports.WithOptionsAndOnChange = WithOptionsTemplate.bind({});
WithOptionsAndOnChange.storyName = 'With options and onChange';
const WithOptionsAndASelection = exports.WithOptionsAndASelection = WithOptionsTemplate.bind({});
WithOptionsAndASelection.args = {
  selected: ['1']
};
// Enable this story as the primary for the docs page
WithOptionsAndASelection.parameters = {
  docs: {
    disable: false
  }
};
WithOptionsAndASelection.storyName = 'With options and a selection';
const WithOnFocus = exports.WithOnFocus = WithOptionsTemplate.bind({});
WithOnFocus.args = {
  onFocus
};
WithOnFocus.storyName = 'With on focus';
const WithOnBlur = exports.WithOnBlur = WithOptionsTemplate.bind({});
WithOnBlur.args = {
  onBlur
};
WithOnBlur.storyName = 'With onBlur';
const WithCustomOptionsAndOnChange = args => /*#__PURE__*/_react.default.createElement(_index2.MultiSelect, args, /*#__PURE__*/_react.default.createElement(CustomMultiSelectOption, {
  value: "1",
  label: "option one"
}), /*#__PURE__*/_react.default.createElement(CustomMultiSelectOption, {
  value: "2",
  label: "option two"
}), /*#__PURE__*/_react.default.createElement(CustomMultiSelectOption, {
  value: "3",
  label: "option three"
}));
exports.WithCustomOptionsAndOnChange = WithCustomOptionsAndOnChange;
WithCustomOptionsAndOnChange.storyName = 'With custom options and onChange';
const WithInvalidOptions = args => /*#__PURE__*/_react.default.createElement(_index2.MultiSelect, args, /*#__PURE__*/_react.default.createElement("div", null, "invalid one"), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "1",
  label: "option one"
}), /*#__PURE__*/_react.default.createElement("div", null, "invalid two"), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "2",
  label: "option two"
}), /*#__PURE__*/_react.default.createElement("div", null, "invalid three"), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "3",
  label: "option three"
}), null, undefined, false);
exports.WithInvalidOptions = WithInvalidOptions;
const WithInvalidFilterableOptions = args => /*#__PURE__*/_react.default.createElement(_index2.MultiSelect, args, /*#__PURE__*/_react.default.createElement("div", null, "invalid one"), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "1",
  label: "option one"
}), /*#__PURE__*/_react.default.createElement("div", null, "invalid two"), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "2",
  label: "option two"
}), /*#__PURE__*/_react.default.createElement("div", null, "invalid three"), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "3",
  label: "option three"
}));
exports.WithInvalidFilterableOptions = WithInvalidFilterableOptions;
WithInvalidFilterableOptions.args = {
  filterable: true,
  noMatchText: 'No match found'
};
const WithInitialFocus = exports.WithInitialFocus = EmptyTemplate.bind({});
WithInitialFocus.args = {
  initialFocus: true
};
WithInitialFocus.parameters = {
  docs: {
    disable: true
  }
};
WithInitialFocus.storyName = 'With initial focus';
const Dense = exports.Dense = WithOptionsTemplate.bind({});
Dense.args = {
  dense: true,
  placeholder: 'Dense sized multi select'
};
Dense.storyName = 'Dense';
const DenseWithSelections = exports.DenseWithSelections = WithOptionsTemplate.bind({});
DenseWithSelections.args = {
  dense: true,
  selected: ['1', '2']
};
DenseWithSelections.storyName = 'Dense with selections';
const Empty = exports.Empty = EmptyTemplate.bind({});
const EmptyWithEmptyText = exports.EmptyWithEmptyText = EmptyTemplate.bind({});
EmptyWithEmptyText.args = {
  empty: 'Custom empty text'
};
const EmptyWithEmptyComponent = exports.EmptyWithEmptyComponent = EmptyTemplate.bind({});
EmptyWithEmptyComponent.args = {
  empty: /*#__PURE__*/_react.default.createElement("div", {
    className: "custom-empty"
  }, "Custom empty component")
};
const WithOptionsAndLoading = exports.WithOptionsAndLoading = WithOptionsTemplate.bind({});
WithOptionsAndLoading.args = {
  loading: true
};
const WithOptionsLoadingAndLoadingText = exports.WithOptionsLoadingAndLoadingText = WithOptionsTemplate.bind({});
WithOptionsLoadingAndLoadingText.args = {
  ...WithOptionsAndLoading.args,
  loadingText: 'Loading options'
};
WithOptionsLoadingAndLoadingText.storyName = 'With options, loading and loading text';
const WithMoreThanTenOptions = args => /*#__PURE__*/_react.default.createElement(_index2.MultiSelect, args, /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "1",
  label: "option one"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "2",
  label: "option two"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "3",
  label: "option three"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "4",
  label: "option four"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "5",
  label: "option five"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "6",
  label: "option six"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "7",
  label: "option seven"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "8",
  label: "option eight"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "9",
  label: "option nine"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "10",
  label: "option ten"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "11",
  label: "option eleven"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "12",
  label: "option twelve"
}));
exports.WithMoreThanTenOptions = WithMoreThanTenOptions;
const WithMoreThanThreeOptionsAndA100PxMaxHeight = args => /*#__PURE__*/_react.default.createElement(_index2.MultiSelect, args, /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "1",
  label: "option one"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "2",
  label: "option two"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "3",
  label: "option three"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "4",
  label: "option four"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "5",
  label: "option five"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "6",
  label: "option six"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "7",
  label: "option seven"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "8",
  label: "option eight"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "9",
  label: "option nine"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "10",
  label: "option ten"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "11",
  label: "option eleven"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "12",
  label: "option twelve"
}));
exports.WithMoreThanThreeOptionsAndA100PxMaxHeight = WithMoreThanThreeOptionsAndA100PxMaxHeight;
WithMoreThanThreeOptionsAndA100PxMaxHeight.args = {
  maxHeight: '100px'
};
WithMoreThanThreeOptionsAndA100PxMaxHeight.storyName = 'With more than three options and a 100px max-height';
const WithOptionsAndDisabled = exports.WithOptionsAndDisabled = WithOptionsTemplate.bind({});
WithOptionsAndDisabled.args = {
  disabled: true
};
WithOptionsAndDisabled.storyName = 'With options and disabled';
const WithOptionsASelectionAndDisabled = exports.WithOptionsASelectionAndDisabled = WithOptionsTemplate.bind({});
WithOptionsASelectionAndDisabled.args = {
  ...WithOptionsAndDisabled.args,
  ...WithOptionsAndASelection.args
};
WithOptionsASelectionAndDisabled.storyName = 'With options, a selection and disabled';
const WithPrefix = exports.WithPrefix = WithOptionsTemplate.bind({});
WithPrefix.args = {
  prefix: 'Prefix text'
};
const WithPrefixAndSelection = exports.WithPrefixAndSelection = WithOptionsTemplate.bind({});
WithPrefixAndSelection.args = {
  ...WithPrefix.args,
  ...WithOptionsAndASelection.args
};
const WithPlaceholder = exports.WithPlaceholder = WithOptionsTemplate.bind({});
WithPlaceholder.args = {
  placeholder: 'Placeholder text'
};
const WithPlaceholderAndSelection = exports.WithPlaceholderAndSelection = WithOptionsTemplate.bind({});
WithPlaceholderAndSelection.args = {
  ...WithPlaceholder.args,
  ...WithOptionsAndASelection.args
};
const WithDisabledOptionAndOnChange = args => /*#__PURE__*/_react.default.createElement(_index2.MultiSelect, args, /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "1",
  label: "option one"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "2",
  label: "option two"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "3",
  label: "option three"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "4",
  label: "disabled option",
  disabled: true
}));
exports.WithDisabledOptionAndOnChange = WithDisabledOptionAndOnChange;
WithDisabledOptionAndOnChange.storyName = 'With disabled option and onChange';
const WithOptionsAndMultipleSelections = exports.WithOptionsAndMultipleSelections = WithOptionsTemplate.bind({});
WithOptionsAndMultipleSelections.args = {
  selected: ['1', '2']
};
const WithMultipleSelectionsWrapped = () => {
  const [selected, setSelected] = _react.default.useState(['1', '2', '4', '6']);
  return /*#__PURE__*/_react.default.createElement("div", {
    style: {
      maxWidth: 300
    }
  }, /*#__PURE__*/_react.default.createElement(_index2.MultiSelect, {
    className: "select",
    selected: selected,
    onChange: _ref2 => {
      let {
        selected
      } = _ref2;
      console.log({
        selected
      });
      setSelected(selected);
    },
    inputMaxHeight: 'auto'
  }, /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
    value: "1",
    label: "option one"
  }), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
    value: "2",
    label: "option two"
  }), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
    value: "3",
    label: "option three"
  }), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
    value: "4",
    label: "option four"
  }), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
    value: "5",
    label: "option five"
  }), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
    value: "6",
    label: "option six"
  }), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
    value: "7",
    label: "option seven"
  })));
};
exports.WithMultipleSelectionsWrapped = WithMultipleSelectionsWrapped;
const WithClearButtonSelectionAndOnChange = exports.WithClearButtonSelectionAndOnChange = WithOptionsTemplate.bind({});
WithClearButtonSelectionAndOnChange.args = {
  ...WithOptionsAndASelection.args,
  clearable: true,
  clearText: 'Clear'
};
WithClearButtonSelectionAndOnChange.storyName = 'With clear button, selection and onChange';
const WithFilterField = exports.WithFilterField = WithOptionsTemplate.bind({});
WithFilterField.args = {
  ...WithInvalidFilterableOptions.args
};
const DefaultPosition = args => /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_index2.MultiSelect, args, /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "1",
  label: "option one"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "2",
  label: "option two"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "3",
  label: "option three"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "4",
  label: "option four"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "5",
  label: "option five"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "6",
  label: "option six"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "7",
  label: "option seven"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "8",
  label: "option eight"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "9",
  label: "option nine"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "10",
  label: "option ten"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "11",
  label: "option eleven"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "12",
  label: "option twelve"
})), /*#__PURE__*/_react.default.createElement(_style.default, {
  id: "2006483503"
}, ["#root{margin-bottom:2000px;}"]));
exports.DefaultPosition = DefaultPosition;
const FlippedPosition = args => /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_index2.MultiSelect, args, /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "1",
  label: "option one"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "2",
  label: "option two"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "3",
  label: "option three"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "4",
  label: "option four"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "5",
  label: "option five"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "6",
  label: "option six"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "7",
  label: "option seven"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "8",
  label: "option eight"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "9",
  label: "option nine"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "10",
  label: "option ten"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "11",
  label: "option eleven"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "12",
  label: "option twelve"
})), /*#__PURE__*/_react.default.createElement(_style.default, {
  id: "1520050670"
}, ["html,body,#root{position:relative;height:500px;max-height:500px;}", "#root{padding-top:400px !important;}"]));
exports.FlippedPosition = FlippedPosition;
const ShiftedIntoView = args => /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_index2.MultiSelect, args, /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "1",
  label: "option one"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "2",
  label: "option two"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "3",
  label: "option three"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "4",
  label: "option four"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "5",
  label: "option five"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "6",
  label: "option six"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "7",
  label: "option seven"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "8",
  label: "option eight"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "9",
  label: "option nine"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "10",
  label: "option ten"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "11",
  label: "option eleven"
}), /*#__PURE__*/_react.default.createElement(_index.MultiSelectOption, {
  value: "12",
  label: "option twelve"
})), /*#__PURE__*/_react.default.createElement(_style.default, {
  id: "1828862170"
}, ["html,body,#root{position:relative;height:300px !important;max-height:300px;}", "#root{padding-top:130px !important;}"]));
exports.ShiftedIntoView = ShiftedIntoView;
const RTL = args => {
  (0, _react.useEffect)(() => {
    document.body.dir = 'rtl';
    return () => {
      document.body.dir = 'ltr';
    };
  }, []);
  return /*#__PURE__*/_react.default.createElement("div", {
    dir: "rtl"
  }, /*#__PURE__*/_react.default.createElement(WithOptionsTemplate, args));
};
exports.RTL = RTL;
RTL.args = {
  selected: ['1', '2'],
  prefix: 'RTL text'
};