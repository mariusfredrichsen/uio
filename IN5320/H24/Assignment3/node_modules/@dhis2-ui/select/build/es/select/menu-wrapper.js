import _JSXStyle from "styled-jsx/style";
import { colors, elevations } from '@dhis2/ui-constants';
import { Layer } from '@dhis2-ui/layer';
import { Popper } from '@dhis2-ui/popper';
import PropTypes from 'prop-types';
import React from 'react';
const MenuWrapper = _ref => {
  let {
    children,
    dataTest,
    maxHeight = '280px',
    menuWidth,
    onClick,
    selectRef
  } = _ref;
  return /*#__PURE__*/React.createElement(Layer, {
    onBackdropClick: onClick,
    transparent: true,
    disablePortal: true
  }, /*#__PURE__*/React.createElement(Popper, {
    reference: selectRef,
    placement: "bottom-start",
    observeReferenceResize: true
  }, /*#__PURE__*/React.createElement("div", {
    "data-test": `${dataTest}-menuwrapper`,
    className: _JSXStyle.dynamic([["1363246346", [menuWidth, maxHeight, colors.white, colors.grey200, elevations.e300]]])
  }, children, /*#__PURE__*/React.createElement(_JSXStyle, {
    id: "1363246346",
    dynamic: [menuWidth, maxHeight, colors.white, colors.grey200, elevations.e300]
  }, [`div.__jsx-style-dynamic-selector{width:${menuWidth};height:auto;max-height:${maxHeight};overflow:auto;background:${colors.white};border:1px solid ${colors.grey200};border-radius:3px;box-shadow:${elevations.e300};}`]))));
};
MenuWrapper.propTypes = {
  dataTest: PropTypes.string.isRequired,
  menuWidth: PropTypes.string.isRequired,
  selectRef: PropTypes.object.isRequired,
  children: PropTypes.node,
  maxHeight: PropTypes.string,
  onClick: PropTypes.func
};
export { MenuWrapper };