import _JSXStyle from "styled-jsx/style";
import { requiredIf } from '@dhis2/prop-types';
import { colors } from '@dhis2/ui-constants';
import cx from 'classnames';
import PropTypes from 'prop-types';
import React from 'react';
import { InputClearButton, InputPlaceholder, InputPrefix } from '../select/index.js';
import { Selection } from './selection.js';
const Input = _ref => {
  let {
    selected,
    onChange,
    clearable,
    clearText,
    placeholder,
    dataTest,
    prefix,
    options,
    className,
    disabled,
    inputMaxHeight = '100px'
  } = _ref;
  const hasSelection = selected && typeof selected === 'string';
  const onClear = e => {
    const data = {
      selected: ''
    };
    e.stopPropagation();
    onChange(data, e);
  };
  return /*#__PURE__*/React.createElement("div", {
    className: _JSXStyle.dynamic([["2186325794", [colors.grey900]], ["1331770409", [inputMaxHeight]]]) + " " + (cx('root', className) || "")
  }, /*#__PURE__*/React.createElement(InputPrefix, {
    prefix: prefix,
    dataTest: `${dataTest}-prefix`
  }), !hasSelection && !prefix && /*#__PURE__*/React.createElement(InputPlaceholder, {
    placeholder: placeholder,
    dataTest: `${dataTest}-placeholder`
  }), hasSelection && /*#__PURE__*/React.createElement("div", {
    className: _JSXStyle.dynamic([["2186325794", [colors.grey900]], ["1331770409", [inputMaxHeight]]]) + " " + "root-input"
  }, /*#__PURE__*/React.createElement(Selection, {
    selected: selected,
    options: options
  })), hasSelection && clearable && !disabled && /*#__PURE__*/React.createElement("div", {
    className: _JSXStyle.dynamic([["2186325794", [colors.grey900]], ["1331770409", [inputMaxHeight]]]) + " " + "root-right"
  }, /*#__PURE__*/React.createElement(InputClearButton, {
    onClear: onClear,
    clearText: clearText,
    dataTest: `${dataTest}-clear`
  })), /*#__PURE__*/React.createElement(_JSXStyle, {
    id: "2186325794",
    dynamic: [colors.grey900]
  }, [`.root.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;color:${colors.grey900};font-size:14px;line-height:16px;}`, ".root-input.__jsx-style-dynamic-selector{overflow-y:auto;-webkit-flex:1;-ms-flex:1;flex:1;}", ".root-right.__jsx-style-dynamic-selector{margin-inline-start:auto;}"]), /*#__PURE__*/React.createElement(_JSXStyle, {
    id: "1331770409",
    dynamic: [inputMaxHeight]
  }, [`.root-input.__jsx-style-dynamic-selector{max-height:${inputMaxHeight};}`]));
};
Input.propTypes = {
  dataTest: PropTypes.string.isRequired,
  className: PropTypes.string,
  clearText: requiredIf(props => props.clearable, PropTypes.string),
  clearable: PropTypes.bool,
  disabled: PropTypes.bool,
  inputMaxHeight: PropTypes.string,
  options: PropTypes.node,
  placeholder: PropTypes.string,
  prefix: PropTypes.string,
  selected: PropTypes.string,
  onChange: PropTypes.func
};
export { Input };