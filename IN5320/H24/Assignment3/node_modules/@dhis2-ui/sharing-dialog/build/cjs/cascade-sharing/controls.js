"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Controls = void 0;
var _appRuntime = require("@dhis2/app-runtime");
var _uiConstants = require("@dhis2/ui-constants");
var _box = require("@dhis2-ui/box");
var _button = require("@dhis2-ui/button");
var _noticeBox = require("@dhis2-ui/notice-box");
var _propTypes = _interopRequireDefault(require("prop-types"));
var _react = _interopRequireWildcard(require("react"));
var _index = _interopRequireDefault(require("../locales/index.js"));
var _resultInfo = require("./result-info.js");
var _updateInfo = require("./update-info.js");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
const query = {
  dashboard: {
    resource: 'dashboards',
    id: _ref => {
      let {
        id
      } = _ref;
      return id;
    },
    params: {
      fields: 'dashboardItems[type]'
    }
  }
};
const Controls = _ref2 => {
  var _mutationResult$error;
  let {
    id,
    entityAmount
  } = _ref2;
  const {
    isDisconnected: offline
  } = (0, _appRuntime.useDhis2ConnectionStatus)();
  const {
    data,
    refetch
  } = (0, _appRuntime.useDataQuery)(query, {
    variables: {
      id
    }
  });
  (0, _react.useEffect)(() => {
    refetch({
      id
    });
  }, [refetch, id]);

  /**
   * The useDataMutation hook does not allow for a variable id,
   * so we're using the engine directly as a workaround.
   */

  const engine = (0, _appRuntime.useDataEngine)();
  const [called, setCalled] = (0, _react.useState)(false);
  const [mutating, setMutating] = (0, _react.useState)(false);
  const [error, setError] = (0, _react.useState)(null);
  const [mutationResult, setMutationResult] = (0, _react.useState)(null);
  const mutation = {
    resource: `dashboards/cascadeSharing/${id}`,
    type: 'create'
  };
  const mutate = () => {
    setCalled(true);
    setMutating(true);
    setMutationResult(null);
    setError(null);
    engine.mutate(mutation).then(data => {
      setMutationResult(data);
    }).catch(e => {
      setError(e.message || _index.default.t('Something went wrong'));
    }).finally(() => {
      setMutating(false);
    });
  };
  const hasErrors = (mutationResult === null || mutationResult === void 0 ? void 0 : (_mutationResult$error = mutationResult.errorReports) === null || _mutationResult$error === void 0 ? void 0 : _mutationResult$error.length) > 0;
  const updatedItems = mutationResult === null || mutationResult === void 0 ? void 0 : mutationResult.countUpdatedDashboardItems;
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, !called && /*#__PURE__*/_react.default.createElement(_updateInfo.UpdateInfo, {
    id: id,
    entityAmount: entityAmount
  }), error && /*#__PURE__*/_react.default.createElement(_box.Box, {
    marginTop: _uiConstants.spacers.dp12
  }, /*#__PURE__*/_react.default.createElement(_noticeBox.NoticeBox, {
    error: true
  }, error)), data && mutationResult && /*#__PURE__*/_react.default.createElement(_box.Box, {
    marginTop: _uiConstants.spacers.dp12
  }, /*#__PURE__*/_react.default.createElement(_resultInfo.ResultInfo, {
    hasErrors: hasErrors,
    updatedItems: updatedItems,
    dashboardItems: data.dashboard.dashboardItems,
    itemsCount: data.dashboard.itemsCount
  })), /*#__PURE__*/_react.default.createElement(_box.Box, {
    marginTop: _uiConstants.spacers.dp12
  }, /*#__PURE__*/_react.default.createElement(_button.Button, {
    type: "button",
    disabled: offline || mutating || !entityAmount,
    loading: mutating,
    secondary: true,
    onClick: mutate
  }, _index.default.t('Apply sharing to dashboard visualizations'))));
};
exports.Controls = Controls;
Controls.propTypes = {
  entityAmount: _propTypes.default.number.isRequired,
  id: _propTypes.default.string.isRequired
};