"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TabbedContent = void 0;
var _tab = require("@dhis2-ui/tab");
var _propTypes = _interopRequireDefault(require("prop-types"));
var _react = _interopRequireWildcard(require("react"));
var _index = require("../access-add/index.js");
var _index2 = require("../access-list/index.js");
var _index3 = require("../cascade-sharing/index.js");
var _constants = require("../constants.js");
var _index4 = _interopRequireDefault(require("../locales/index.js"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
const TabbedContent = _ref => {
  let {
    type,
    users,
    groups,
    publicAccess,
    allowPublicAccess,
    id,
    onAdd,
    onChange,
    onRemove
  } = _ref;
  const [activeTabIndex, setActiveTabIndex] = (0, _react.useState)(0);
  if (type === _constants.DIALOG_TYPES.DASHBOARD) {
    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_tab.TabBar, null, /*#__PURE__*/_react.default.createElement(_tab.Tab, {
      onClick: () => setActiveTabIndex(0),
      selected: activeTabIndex === 0
    }, _index4.default.t('Dashboard sharing')), /*#__PURE__*/_react.default.createElement(_tab.Tab, {
      onClick: () => setActiveTabIndex(1),
      selected: activeTabIndex === 1
    }, _index4.default.t('Apply sharing to dashboard visualizations'))), /*#__PURE__*/_react.default.createElement("div", null, activeTabIndex === 0 && /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_index.AccessAdd, {
      onAdd: onAdd
    }), /*#__PURE__*/_react.default.createElement(_index2.AccessList, {
      users: users,
      groups: groups,
      publicAccess: publicAccess,
      allowPublicAccess: allowPublicAccess,
      onChange: onChange,
      onRemove: onRemove
    })), activeTabIndex === 1 && /*#__PURE__*/_react.default.createElement(_index3.CascadeSharing, {
      id: id,
      entityAmount: users.length + groups.length
    })));
  }
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_index.AccessAdd, {
    onAdd: onAdd
  }), /*#__PURE__*/_react.default.createElement(_index2.AccessList, {
    users: users,
    groups: groups,
    publicAccess: publicAccess,
    allowPublicAccess: allowPublicAccess,
    onChange: onChange,
    onRemove: onRemove
  }));
};
exports.TabbedContent = TabbedContent;
TabbedContent.propTypes = {
  allowPublicAccess: _propTypes.default.bool.isRequired,
  groups: _propTypes.default.arrayOf(_propTypes.default.shape({
    access: _propTypes.default.oneOf([_constants.ACCESS_NONE, _constants.ACCESS_VIEW_ONLY, _constants.ACCESS_VIEW_AND_EDIT]).isRequired,
    id: _propTypes.default.string.isRequired,
    name: _propTypes.default.string.isRequired
  })).isRequired,
  id: _propTypes.default.string.isRequired,
  publicAccess: _propTypes.default.oneOf([_constants.ACCESS_NONE, _constants.ACCESS_VIEW_ONLY, _constants.ACCESS_VIEW_AND_EDIT]).isRequired,
  type: _propTypes.default.oneOf(_constants.DIALOG_TYPES_LIST).isRequired,
  users: _propTypes.default.arrayOf(_propTypes.default.shape({
    access: _propTypes.default.oneOf([_constants.ACCESS_NONE, _constants.ACCESS_VIEW_ONLY, _constants.ACCESS_VIEW_AND_EDIT]).isRequired,
    id: _propTypes.default.string.isRequired,
    name: _propTypes.default.string.isRequired
  })).isRequired,
  onAdd: _propTypes.default.func.isRequired,
  onChange: _propTypes.default.func.isRequired,
  onRemove: _propTypes.default.func.isRequired
};