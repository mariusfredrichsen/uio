"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.WithLabel = exports.Statuses = exports.Sizes = exports.Required = exports.PlaceholderText = exports.Multiple = exports.HelpText = exports.FileList = exports.Disabled = exports.DesignSystemStackingOrderEmptyFileList = exports.DesignSystemStackingOrder = exports.DefaultButtonLabelAndPlaceholder = exports.Default = void 0;
var _uiConstants = require("@dhis2/ui-constants");
var _react = _interopRequireDefault(require("react"));
var _index = require("../index.js");
var _fileInputField = require("./file-input-field.js");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
const description = `
The \`FileInputField\` component wraps the \`FileInput\` component in a \`Field\` wrapper to add labels, help text, and validation text.

\`\`\`js
import { FileInputField, FileListItem } from '@dhis2/ui'
\`\`\`
`;
const onChange = obj => console.log('onChange', obj);
const onRemove = () => console.log('onRemove');
const onCancel = () => console.log('onCancel');
var _default = exports.default = {
  title: 'File Input Field',
  component: _fileInputField.FileInputField,
  parameters: {
    docs: {
      description: {
        component: description
      }
    }
  },
  // Default args:
  args: {
    // Handle default values (see comment in Transfer.js)
    accept: '*',
    dataTest: 'dhis2-uiwidgets-fileinputfield',
    placeholder: 'No file uploaded yet',
    onChange: onChange,
    name: 'uploadName',
    label: 'Upload something',
    buttonLabel: 'Upload a file'
  },
  argTypes: {
    small: {
      ..._uiConstants.sharedPropTypes.sizeArgType
    },
    large: {
      ..._uiConstants.sharedPropTypes.sizeArgType
    },
    valid: {
      ..._uiConstants.sharedPropTypes.statusArgType
    },
    warning: {
      ..._uiConstants.sharedPropTypes.statusArgType
    },
    error: {
      ..._uiConstants.sharedPropTypes.statusArgType
    }
  }
};
const Template = args => /*#__PURE__*/_react.default.createElement(_fileInputField.FileInputField, args);
const Default = exports.Default = Template.bind({});
Default.args = {
  label: null
};
const WithLabel = exports.WithLabel = Template.bind({});
const Required = exports.Required = Template.bind({});
Required.args = {
  required: true
};
const Multiple = exports.Multiple = Template.bind({});
Multiple.args = {
  multiple: true,
  label: 'Upload multiple things',
  buttonLabel: 'Upload files'
};
const Disabled = exports.Disabled = Template.bind({});
Disabled.args = {
  disabled: true
};
const Sizes = args => /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_fileInputField.FileInputField, _extends({}, args, {
  buttonLabel: "Default size",
  name: "defaultName"
})), /*#__PURE__*/_react.default.createElement(_fileInputField.FileInputField, _extends({}, args, {
  buttonLabel: "Small",
  small: true,
  name: "smallName"
})), /*#__PURE__*/_react.default.createElement(_fileInputField.FileInputField, _extends({}, args, {
  buttonLabel: "Large",
  large: true,
  name: "largeName"
})));
exports.Sizes = Sizes;
const Statuses = args => /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_fileInputField.FileInputField, _extends({}, args, {
  buttonLabel: "Default",
  name: "defaultName"
})), /*#__PURE__*/_react.default.createElement(_fileInputField.FileInputField, _extends({}, args, {
  buttonLabel: "Valid",
  name: "validName",
  valid: true
})), /*#__PURE__*/_react.default.createElement(_fileInputField.FileInputField, _extends({}, args, {
  buttonLabel: "Warning",
  name: "warningName",
  warning: true
})), /*#__PURE__*/_react.default.createElement(_fileInputField.FileInputField, _extends({}, args, {
  buttonLabel: "Error",
  name: "errorName",
  error: true,
  validationText: "Something went wrong"
})));
exports.Statuses = Statuses;
const FileList = args => /*#__PURE__*/_react.default.createElement("div", {
  style: {
    width: 250
  }
}, /*#__PURE__*/_react.default.createElement(_fileInputField.FileInputField, args, /*#__PURE__*/_react.default.createElement(_index.FileListItem, {
  label: "picture1.jpg",
  onRemove: onRemove,
  onCancel: onCancel,
  cancelText: "Cancel",
  removeText: "Remove"
}), /*#__PURE__*/_react.default.createElement(_index.FileListItem, {
  label: "image_that_is_uploading.jpg",
  onRemove: onRemove,
  onCancel: onCancel,
  cancelText: "Cancel",
  removeText: "Remove",
  loading: true
}), /*#__PURE__*/_react.default.createElement(_index.FileListItem, {
  label: "image_file_name_is_to_long_to_display_on_one_line.jpg",
  onRemove: onRemove,
  onCancel: onCancel,
  cancelText: "Cancel",
  removeText: "Remove"
})), /*#__PURE__*/_react.default.createElement("br", null), /*#__PURE__*/_react.default.createElement("p", {
  style: {
    color: 'grey'
  }
}, /*#__PURE__*/_react.default.createElement("em", null, "Bounding box is 250px wide")));
exports.FileList = FileList;
const PlaceholderText = exports.PlaceholderText = Template.bind({});
PlaceholderText.args = {
  placeholder: 'No file(s) selected yet'
};
const HelpText = exports.HelpText = Template.bind({});
HelpText.args = {
  helpText: 'Please select any file type'
};
const DesignSystemStackingOrder = args => /*#__PURE__*/_react.default.createElement(_fileInputField.FileInputField, args, /*#__PURE__*/_react.default.createElement(_index.FileListItem, {
  label: "TestFile.txt",
  onRemove: onRemove,
  removeText: "remove"
}), /*#__PURE__*/_react.default.createElement(_index.FileListItem, {
  label: "BusyFile.txt",
  onRemove: onRemove,
  onCancel: onCancel,
  cancelText: "cancel",
  removeText: "remove",
  loading: true
}));
exports.DesignSystemStackingOrder = DesignSystemStackingOrder;
DesignSystemStackingOrder.args = {
  error: true,
  validationText: 'Oops!',
  placeholder: 'Select a file',
  helpText: 'Please upload something'
};
const DesignSystemStackingOrderEmptyFileList = exports.DesignSystemStackingOrderEmptyFileList = Template.bind({});
DesignSystemStackingOrderEmptyFileList.args = {
  ...DesignSystemStackingOrder.args
};
DesignSystemStackingOrderEmptyFileList.storyName = 'Design system stacking order - empty file list';
const DefaultButtonLabelAndPlaceholder = exports.DefaultButtonLabelAndPlaceholder = Template.bind({});
DefaultButtonLabelAndPlaceholder.args = {
  label: null
};
DefaultButtonLabelAndPlaceholder.storyName = 'Default: buttonLabel and placeholder';