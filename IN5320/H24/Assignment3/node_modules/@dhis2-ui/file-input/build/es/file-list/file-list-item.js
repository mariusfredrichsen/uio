import _JSXStyle from "styled-jsx/style";
import { theme, colors, spacers } from '@dhis2/ui-constants';
import { IconAttachment16 } from '@dhis2/ui-icons';
import { CircularLoader } from '@dhis2-ui/loader';
import cx from 'classnames';
import PropTypes from 'prop-types';
import React from 'react';
const FileListItem = _ref => {
  let {
    className,
    label,
    onRemove,
    removeText,
    loading,
    onCancel,
    cancelText,
    dataTest = 'dhis2-uicore-filelistitem'
  } = _ref;
  const handleKeyDown = event => {
    if (!onRemove) {
      return;
    }
    if (event.key === 'Enter' || event.key === 'Backspace' || event.key === 'Delete') {
      onRemove({}, event);
    }
  };
  return /*#__PURE__*/React.createElement("p", {
    "data-test": dataTest,
    className: _JSXStyle.dynamic([["513536609", [spacers.dp4, colors.grey900, colors.grey700, colors.red700, colors.red800, theme.focus]]]) + " " + (cx('selected-file', className) || "")
  }, /*#__PURE__*/React.createElement("span", {
    className: _JSXStyle.dynamic([["513536609", [spacers.dp4, colors.grey900, colors.grey700, colors.red700, colors.red800, theme.focus]]]) + " " + "icon"
  }, loading ? /*#__PURE__*/React.createElement(CircularLoader, {
    extrasmall: true
  }) : /*#__PURE__*/React.createElement(IconAttachment16, {
    color: colors.grey700
  })), /*#__PURE__*/React.createElement("span", {
    className: _JSXStyle.dynamic([["513536609", [spacers.dp4, colors.grey900, colors.grey700, colors.red700, colors.red800, theme.focus]]]) + " " + "text"
  }, /*#__PURE__*/React.createElement("span", {
    className: _JSXStyle.dynamic([["513536609", [spacers.dp4, colors.grey900, colors.grey700, colors.red700, colors.red800, theme.focus]]]) + " " + "label"
  }, label), loading && onCancel && cancelText && /*#__PURE__*/React.createElement("span", {
    onClick: event => onCancel({}, event),
    "data-test": `${dataTest}-cancel`,
    className: _JSXStyle.dynamic([["513536609", [spacers.dp4, colors.grey900, colors.grey700, colors.red700, colors.red800, theme.focus]]]) + " " + "action"
  }, cancelText), !loading && /*#__PURE__*/React.createElement("span", {
    onClick: event => onRemove({}, event),
    "data-test": `${dataTest}-remove`,
    tabIndex: 0,
    onKeyDown: handleKeyDown,
    className: _JSXStyle.dynamic([["513536609", [spacers.dp4, colors.grey900, colors.grey700, colors.red700, colors.red800, theme.focus]]]) + " " + "action"
  }, removeText)), /*#__PURE__*/React.createElement(_JSXStyle, {
    id: "513536609",
    dynamic: [spacers.dp4, colors.grey900, colors.grey700, colors.red700, colors.red800, theme.focus]
  }, [`p.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;margin:0;padding-top:${spacers.dp4};}`, "span.__jsx-style-dynamic-selector{display:inline-block;}", ".icon.__jsx-style-dynamic-selector{margin-inline-end:4px;-webkit-box-flex:0;-webkit-flex-grow:0;-ms-flex-positive:0;flex-grow:0;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;padding-top:1px;}", ".text.__jsx-style-dynamic-selector{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;-webkit-flex-shrink:1;-ms-flex-negative:1;flex-shrink:1;}", `.label.__jsx-style-dynamic-selector{font-size:14px;color:${colors.grey900};word-break:break-all;}`, ".label.__jsx-style-dynamic-selector::after{content:' ';display:inline-block;width:12px;}", `.action.__jsx-style-dynamic-selector{font-size:12px;line-height:12px;margin-top:0;-webkit-text-decoration:underline;text-decoration:underline;cursor:pointer;color:${colors.grey700};}`, `.action.__jsx-style-dynamic-selector:hover{color:${colors.red700};}`, `.action.__jsx-style-dynamic-selector:active{color:${colors.red800};}`, `.action.__jsx-style-dynamic-selector:focus{outline:3px solid ${theme.focus};outline-offset:2px;}`]));
};
FileListItem.propTypes = {
  onRemove: PropTypes.func.isRequired,
  cancelText: PropTypes.string,
  className: PropTypes.string,
  dataTest: PropTypes.string,
  label: PropTypes.string,
  loading: PropTypes.bool,
  removeText: PropTypes.string,
  onCancel: PropTypes.func
};
export { FileListItem };