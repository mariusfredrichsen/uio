"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Notifications = void 0;
var _style = _interopRequireDefault(require("styled-jsx/style"));
var _appRuntime = require("@dhis2/app-runtime");
var _propTypes = _interopRequireDefault(require("prop-types"));
var _react = _interopRequireDefault(require("react"));
var _joinPath = require("./join-path.js");
var _index = _interopRequireDefault(require("./locales/index.js"));
var _notificationIcon = require("./notification-icon.js");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
const hasAuthority = (userAuthorities, authId) => Array.isArray(userAuthorities) && userAuthorities.some(userAuthId => userAuthId === 'ALL' || userAuthId === authId);
const Notifications = _ref => {
  let {
    interpretations,
    messages,
    userAuthorities
  } = _ref;
  const {
    baseUrl
  } = (0, _appRuntime.useConfig)();
  return /*#__PURE__*/_react.default.createElement("div", {
    "data-test": "headerbar-notifications",
    className: "jsx-55705730"
  }, hasAuthority(userAuthorities, 'M_dhis-web-interpretation') && /*#__PURE__*/_react.default.createElement(_notificationIcon.NotificationIcon, {
    count: interpretations,
    href: (0, _joinPath.joinPath)(baseUrl, 'dhis-web-interpretation'),
    kind: "message",
    dataTestId: "headerbar-interpretations",
    title: _index.default.t('Interpretations'),
    "aria-label": _index.default.t('Interpretations')
  }), hasAuthority(userAuthorities, 'M_dhis-web-messaging') && /*#__PURE__*/_react.default.createElement(_notificationIcon.NotificationIcon, {
    message: "email",
    count: messages,
    href: (0, _joinPath.joinPath)(baseUrl, 'dhis-web-messaging'),
    kind: "interpretation",
    dataTestId: "headerbar-messages",
    title: _index.default.t('Messages'),
    "aria-label": _index.default.t('Messages')
  }), /*#__PURE__*/_react.default.createElement(_style.default, {
    id: "55705730"
  }, ["div.jsx-55705730{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;height:100%;}"]));
};
exports.Notifications = Notifications;
Notifications.propTypes = {
  interpretations: _propTypes.default.number,
  messages: _propTypes.default.number,
  userAuthorities: _propTypes.default.arrayOf(_propTypes.default.string)
};