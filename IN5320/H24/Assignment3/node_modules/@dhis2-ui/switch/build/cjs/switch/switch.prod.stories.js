"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.WarningDense = exports.Warning = exports.ValidDense = exports.Valid = exports.RTL = exports.ImageLabelDense = exports.ImageLabel = exports.FocusedUncheckedDense = exports.FocusedUnchecked = exports.FocusedCheckedDense = exports.FocusedChecked = exports.ErrorDense = exports.Error = exports.DisabledDense = exports.Disabled = exports.DefaultDense = exports.Default = exports.CheckedDense = exports.Checked = void 0;
var _uiConstants = require("@dhis2/ui-constants");
var _react = _interopRequireWildcard(require("react"));
var _index = require("./index.js");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
const subtitle = 'An input control that allows an on and an off state';
const description = `
**Switches are used sparingly in DHIS2, as they are not yet an accepted input control on the web. Users are not always used to the concept of a switch, but understanding is growing with wide adoption on mobile platforms.**

Use switches only when the user can toggle between on/off. Never use a switch for yes/no or any other states, use a checkbox instead. It is often safer to use a checkbox for things like turning options on/off, as users understand this pattern. Switches can be useful for ongoing or active processes, where turning them on/off makes more sense conceptually. An example of this may be toggling on/off 'Logging' or 'Update automatically', both processes that are ongoing.

\`\`\`js
import { Switch } from '@dhis2/ui'
\`\`\`
`;
window.onChange = (payload, event) => {
  console.log('onClick payload', payload);
  console.log('onClick event', event);
};
window.onFocus = (payload, event) => {
  console.log('onFocus payload', payload);
  console.log('onFocus event', event);
};
window.onBlur = (payload, event) => {
  console.log('onBlur payload', payload);
  console.log('onBlur event', event);
};
const onChange = function () {
  return window.onChange(...arguments);
};
const onFocus = function () {
  return window.onFocus(...arguments);
};
const onBlur = function () {
  return window.onBlur(...arguments);
};
var _default = exports.default = {
  title: 'Switch',
  component: _index.Switch,
  parameters: {
    componentSubtitle: subtitle,
    docs: {
      description: {
        component: description
      }
    }
  },
  // Default args for all stories
  args: {
    name: 'exampleName',
    label: 'Switch',
    value: 'defaultValue',
    onChange,
    onFocus,
    onBlur
  },
  argTypes: {
    valid: {
      ..._uiConstants.sharedPropTypes.statusArgType
    },
    error: {
      ..._uiConstants.sharedPropTypes.statusArgType
    },
    warning: {
      ..._uiConstants.sharedPropTypes.statusArgType
    }
  }
};
const Template = args => /*#__PURE__*/_react.default.createElement(_index.Switch, args);
const CheckedUncheckedTemplate = args => /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_index.Switch, args), /*#__PURE__*/_react.default.createElement(_index.Switch, _extends({}, args, {
  checked: true
})));
const Default = exports.Default = Template.bind({});
const FocusedUnchecked = args => /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_index.Switch, _extends({}, args, {
  initialFocus: true,
  className: "initially-focused"
})), /*#__PURE__*/_react.default.createElement(_index.Switch, _extends({}, args, {
  className: "initially-unfocused"
})));
// Stories with initial focus are distracting on docs page
exports.FocusedUnchecked = FocusedUnchecked;
FocusedUnchecked.parameters = {
  docs: {
    disable: true
  }
};
const FocusedChecked = exports.FocusedChecked = FocusedUnchecked.bind({});
FocusedChecked.args = {
  checked: true
};
FocusedChecked.parameters = {
  docs: {
    disable: true
  }
};
const Checked = exports.Checked = Template.bind({});
Checked.args = {
  checked: true,
  value: 'checked'
};
const Disabled = exports.Disabled = CheckedUncheckedTemplate.bind({});
Disabled.args = {
  disabled: true,
  value: 'disabled'
};
const Valid = exports.Valid = CheckedUncheckedTemplate.bind({});
Valid.args = {
  valid: true,
  value: 'valid'
};
const Warning = exports.Warning = CheckedUncheckedTemplate.bind({});
Warning.args = {
  warning: true,
  value: 'warning'
};
const Error = exports.Error = CheckedUncheckedTemplate.bind({});
Error.args = {
  error: true,
  value: 'error'
};
const ImageLabel = exports.ImageLabel = Template.bind({});
ImageLabel.args = {
  label: /*#__PURE__*/_react.default.createElement("img", {
    src: "https://picsum.photos/id/82/200/100"
  }),
  value: 'with-help'
};
const DefaultDense = exports.DefaultDense = Template.bind({});
DefaultDense.args = {
  dense: true
};
DefaultDense.storyName = 'Default - Dense';
const FocusedUncheckedDense = exports.FocusedUncheckedDense = FocusedUnchecked.bind({});
FocusedUncheckedDense.args = {
  ...DefaultDense.args
};
FocusedUncheckedDense.storyName = 'Focused unchecked - Dense';
FocusedUncheckedDense.parameters = {
  docs: {
    disable: true
  }
};
const FocusedCheckedDense = exports.FocusedCheckedDense = FocusedUnchecked.bind({});
FocusedCheckedDense.args = {
  ...DefaultDense.args,
  checked: true
};
FocusedCheckedDense.storyName = 'Focused checked - Dense';
FocusedCheckedDense.parameters = {
  docs: {
    disable: true
  }
};
const CheckedDense = exports.CheckedDense = Template.bind({});
CheckedDense.args = {
  ...Checked.args,
  ...DefaultDense.args
};
CheckedDense.storyName = 'Checked - Dense';
const DisabledDense = exports.DisabledDense = CheckedUncheckedTemplate.bind({});
DisabledDense.args = {
  ...Disabled.args,
  ...DefaultDense.args
};
DisabledDense.storyName = 'Disabled - Dense';
const ValidDense = exports.ValidDense = CheckedUncheckedTemplate.bind({});
ValidDense.args = {
  ...Valid.args,
  ...DefaultDense.args
};
ValidDense.storyName = 'Valid - Dense';
const WarningDense = exports.WarningDense = CheckedUncheckedTemplate.bind({});
WarningDense.args = {
  ...Warning.args,
  ...DefaultDense.args
};
WarningDense.storyName = 'Warning - Dense';
const ErrorDense = exports.ErrorDense = CheckedUncheckedTemplate.bind({});
ErrorDense.args = {
  ...Error.args,
  ...DefaultDense.args
};
ErrorDense.storyName = 'Error - Dense';
const ImageLabelDense = exports.ImageLabelDense = Template.bind({});
ImageLabelDense.args = {
  ...ImageLabel.args,
  ...DefaultDense.args
};
ImageLabelDense.storyName = 'Image label - Dense';
const RTL = args => {
  (0, _react.useEffect)(() => {
    document.documentElement.setAttribute('dir', 'rtl');
    return () => {
      document.documentElement.setAttribute('dir', 'ltr');
    };
  }, []);
  return /*#__PURE__*/_react.default.createElement("div", {
    dir: "rtl"
  }, /*#__PURE__*/_react.default.createElement(Template, args), /*#__PURE__*/_react.default.createElement(Template, {
    checked: true,
    value: "checked"
  }), /*#__PURE__*/_react.default.createElement(Template, {
    error: true,
    checked: true,
    value: "error"
  }));
};
exports.RTL = RTL;