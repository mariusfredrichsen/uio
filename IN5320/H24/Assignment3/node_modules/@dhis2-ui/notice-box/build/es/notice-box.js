import _JSXStyle from "styled-jsx/style";
import { mutuallyExclusive } from '@dhis2/prop-types';
import { spacers, colors } from '@dhis2/ui-constants';
import cx from 'classnames';
import PropTypes from 'prop-types';
import React from 'react';
import { NoticeBoxContent } from './notice-box-content.js';
import { NoticeBoxIcon } from './notice-box-icon.js';
export const NoticeBox = _ref => {
  let {
    className,
    children,
    dataTest = 'dhis2-uicore-noticebox',
    title,
    warning,
    error,
    valid
  } = _ref;
  const classnames = cx(className, 'root', {
    warning,
    error,
    valid
  });
  return /*#__PURE__*/React.createElement("div", {
    "data-test": dataTest,
    className: _JSXStyle.dynamic([["243875418", [colors.blue050, colors.blue200, spacers.dp12, spacers.dp16, colors.yellow050, colors.yellow200, colors.red050, colors.red500, colors.green050, colors.green200]]]) + " " + (classnames || "")
  }, /*#__PURE__*/React.createElement(NoticeBoxIcon, {
    error: error,
    warning: warning,
    valid: valid,
    dataTest: `${dataTest}-icon`
  }), /*#__PURE__*/React.createElement("div", {
    className: _JSXStyle.dynamic([["243875418", [colors.blue050, colors.blue200, spacers.dp12, spacers.dp16, colors.yellow050, colors.yellow200, colors.red050, colors.red500, colors.green050, colors.green200]]])
  }, /*#__PURE__*/React.createElement(NoticeBoxContent, {
    title: title,
    dataTest: `${dataTest}-content`
  }, children)), /*#__PURE__*/React.createElement(_JSXStyle, {
    id: "243875418",
    dynamic: [colors.blue050, colors.blue200, spacers.dp12, spacers.dp16, colors.yellow050, colors.yellow200, colors.red050, colors.red500, colors.green050, colors.green200]
  }, [`.root.__jsx-style-dynamic-selector{background:${colors.blue050};border:1px solid ${colors.blue200};border-radius:3px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;padding-block:${spacers.dp12};padding-inline:${spacers.dp16};}`, `.root.warning.__jsx-style-dynamic-selector{background:${colors.yellow050};border:1px solid ${colors.yellow200};}`, `.root.error.__jsx-style-dynamic-selector{background:${colors.red050};border:2px solid ${colors.red500};}`, `.root.valid.__jsx-style-dynamic-selector{background:${colors.green050};border:1px solid ${colors.green200};}`]));
};
NoticeBox.propTypes = {
  children: PropTypes.node,
  className: PropTypes.string,
  dataTest: PropTypes.string,
  /** Applies 'error' message styles. Mutually exclusive with the `valid` and `warning` props */
  error: mutuallyExclusive(['error', 'valid', 'warning'], PropTypes.bool),
  title: PropTypes.string,
  /** Applies 'valid' message styles. Mutually exclusive with the `error` and `warning` props */
  valid: mutuallyExclusive(['error', 'valid', 'warning'], PropTypes.bool),
  /** Applies 'warning' message styles. Mutually exclusive with the `error` and `valid` props */
  warning: mutuallyExclusive(['error', 'valid', 'warning'], PropTypes.bool)
};