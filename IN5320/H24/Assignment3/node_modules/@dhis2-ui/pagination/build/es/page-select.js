import _JSXStyle from "styled-jsx/style";
import { spacers } from '@dhis2/ui-constants';
import { SingleSelect, SingleSelectOption } from '@dhis2-ui/select';
import PropTypes from 'prop-types';
import React from 'react';

// TODO: i18n translate
const translate = (prop, interpolationObject) => {
  if (typeof prop === 'function') {
    return prop(interpolationObject);
  }
  return prop;
};
const createAvailablePages = length => Array.from({
  length
}, (_x, i) => (i + 1).toString());
const PageSelect = _ref => {
  let {
    dataTest,
    disabled,
    pageSelectText,
    onChange,
    page,
    pageCount
  } = _ref;
  return /*#__PURE__*/React.createElement("div", {
    "data-test": `${dataTest}-gotopage`,
    className: _JSXStyle.dynamic([["599400768", [spacers.dp12]]])
  }, /*#__PURE__*/React.createElement(SingleSelect, {
    dense: true,
    disabled: disabled,
    selected: page.toString(),
    onChange: _ref2 => {
      let {
        selected
      } = _ref2;
      return onChange(parseInt(selected, 10));
    },
    className: "select",
    dataTest: `${dataTest}-page-select`,
    prefix: translate(pageSelectText)
  }, createAvailablePages(pageCount).map(availablePage => /*#__PURE__*/React.createElement(SingleSelectOption, {
    key: availablePage,
    value: availablePage,
    label: availablePage
  }))), /*#__PURE__*/React.createElement(_JSXStyle, {
    id: "599400768",
    dynamic: [spacers.dp12]
  }, [`div.__jsx-style-dynamic-selector{margin-inline-end:${spacers.dp12};}`]));
};
PageSelect.propTypes = {
  dataTest: PropTypes.string.isRequired,
  page: PropTypes.number.isRequired,
  pageCount: PropTypes.number.isRequired,
  pageSelectText: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,
  onChange: PropTypes.func.isRequired,
  disabled: PropTypes.bool
};
export { PageSelect, createAvailablePages };