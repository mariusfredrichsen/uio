import _JSXStyle from "styled-jsx/style";
import { colors, theme } from '@dhis2/ui-constants';
import cx from 'classnames';
import PropTypes from 'prop-types';
import React from 'react';
import { Content } from './content.js';
import { Icon } from './icon.js';
import { Remove } from './remove.js';
const DEFAULT_INLINE_MARGIN = '4';
const Chip = _ref => {
  var _ref2, _ref3, _ref4, _ref5;
  let {
    selected,
    dense,
    disabled,
    dragging,
    overflow,
    className,
    children,
    onRemove,
    onClick,
    icon,
    dataTest = 'dhis2-uicore-chip',
    marginBottom = 4,
    marginLeft,
    marginRight,
    marginTop = 4,
    marginInlineStart,
    marginInlineEnd
  } = _ref;
  return /*#__PURE__*/React.createElement("span", {
    onClick: e => {
      if (!disabled && onClick) {
        onClick({}, e);
      }
    },
    "data-test": dataTest,
    className: _JSXStyle.dynamic([["3780556490", [colors.grey200, colors.grey900, colors.grey300, theme.secondary600, colors.white]], ["1687525377", [marginBottom && `margin-bottom: ${marginBottom}px;`, (_ref2 = marginInlineStart !== null && marginInlineStart !== void 0 ? marginInlineStart : marginLeft) !== null && _ref2 !== void 0 ? _ref2 : DEFAULT_INLINE_MARGIN, (_ref3 = marginInlineEnd !== null && marginInlineEnd !== void 0 ? marginInlineEnd : marginRight) !== null && _ref3 !== void 0 ? _ref3 : DEFAULT_INLINE_MARGIN, marginTop && `margin-top: ${marginTop}px`]]]) + " " + (cx(className, {
      selected,
      dense,
      disabled,
      dragging
    }) || "")
  }, /*#__PURE__*/React.createElement(Icon, {
    icon: icon,
    dataTest: `${dataTest}-icon`
  }), /*#__PURE__*/React.createElement(Content, {
    overflow: overflow
  }, children), /*#__PURE__*/React.createElement(Remove, {
    onRemove: onRemove,
    dataTest: `${dataTest}-remove`
  }), /*#__PURE__*/React.createElement(_JSXStyle, {
    id: "3780556490",
    dynamic: [colors.grey200, colors.grey900, colors.grey300, theme.secondary600, colors.white]
  }, [`span.__jsx-style-dynamic-selector{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;height:32px;border-radius:16px;background-color:${colors.grey200};font-size:14px;line-height:16px;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:${colors.grey900};}`, ".dense.__jsx-style-dynamic-selector{height:24px;font-size:13px;line-height:15px;}", `span.__jsx-style-dynamic-selector:hover{background-color:${colors.grey300};}`, `.selected.__jsx-style-dynamic-selector{background-color:${theme.secondary600};font-weight:500;}`, ".selected.__jsx-style-dynamic-selector:hover{background-color:#00695c;}", `.selected.__jsx-style-dynamic-selector,.selected.__jsx-style-dynamic-selector .icon.__jsx-style-dynamic-selector,.selected.__jsx-style-dynamic-selector .remove-icon.__jsx-style-dynamic-selector{color:${colors.white};}`, ".disabled.__jsx-style-dynamic-selector{cursor:not-allowed;opacity:0.3;}", ".disabled.__jsx-style-dynamic-selector .remove-icon.__jsx-style-dynamic-selector{pointer-events:none;}", ".dragging.__jsx-style-dynamic-selector{box-shadow:0 3px 1px -2px rgba(0,0,0,0.2), 0 2px 2px 0 rgba(0,0,0,0.14), 0 1px 5px 0 rgba(0,0,0,0.12);}"]), /*#__PURE__*/React.createElement(_JSXStyle, {
    id: "1687525377",
    dynamic: [marginBottom && `margin-bottom: ${marginBottom}px;`, (_ref2 = marginInlineStart !== null && marginInlineStart !== void 0 ? marginInlineStart : marginLeft) !== null && _ref2 !== void 0 ? _ref2 : DEFAULT_INLINE_MARGIN, (_ref3 = marginInlineEnd !== null && marginInlineEnd !== void 0 ? marginInlineEnd : marginRight) !== null && _ref3 !== void 0 ? _ref3 : DEFAULT_INLINE_MARGIN, marginTop && `margin-top: ${marginTop}px`]
  }, [`span.__jsx-style-dynamic-selector{${marginBottom && `margin-bottom: ${marginBottom}px;`} margin-inline-start:${(_ref4 = marginInlineStart !== null && marginInlineStart !== void 0 ? marginInlineStart : marginLeft) !== null && _ref4 !== void 0 ? _ref4 : DEFAULT_INLINE_MARGIN}px;margin-inline-end:${(_ref5 = marginInlineEnd !== null && marginInlineEnd !== void 0 ? marginInlineEnd : marginRight) !== null && _ref5 !== void 0 ? _ref5 : DEFAULT_INLINE_MARGIN}px;${marginTop && `margin-top: ${marginTop}px`};}`]));
};
Chip.propTypes = {
  children: PropTypes.any,
  className: PropTypes.string,
  dataTest: PropTypes.string,
  dense: PropTypes.bool,
  disabled: PropTypes.bool,
  dragging: PropTypes.bool,
  icon: PropTypes.element,
  /** `margin-bottom` value, applied in `px`  */
  marginBottom: PropTypes.number,
  /** `margin-inline-end` value, applied in `px`  */
  marginInlineEnd: PropTypes.number,
  /** `margin-inline-start` value, applied in `px`  */
  marginInlineStart: PropTypes.number,
  /** `margin-inline-start` value, applied in `px`  */
  marginLeft: PropTypes.number,
  /** `margin-inline-end` value, applied in `px`  */
  marginRight: PropTypes.number,
  /** `margin-top` value, applied in `px`  */
  marginTop: PropTypes.number,
  overflow: PropTypes.bool,
  selected: PropTypes.bool,
  onClick: PropTypes.func,
  onRemove: PropTypes.func
};
export { Chip };