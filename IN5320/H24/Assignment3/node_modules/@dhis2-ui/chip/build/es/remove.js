import _JSXStyle from "styled-jsx/style";
import { colors } from '@dhis2/ui-constants';
import PropTypes from 'prop-types';
import React from 'react';
function CancelOutline(_ref) {
  let {
    className
  } = _ref;
  return /*#__PURE__*/React.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    className: "jsx-2898942518" + " " + (className || "")
  }, /*#__PURE__*/React.createElement("path", {
    d: "M11.2928932,3.29289322 L12.7071068,4.70710678 L9.41389322,7.99989322 L12.7071068,11.2928932 L11.2928932,12.7071068 L7.99989322,9.41389322 L4.70710678,12.7071068 L3.29289322,11.2928932 L6.58589322,7.99989322 L3.29289322,4.70710678 L4.70710678,3.29289322 L7.99989322,6.58589322 L11.2928932,3.29289322 Z",
    className: "jsx-2898942518"
  }), /*#__PURE__*/React.createElement(_JSXStyle, {
    id: "2898942518"
  }, ["svg.jsx-2898942518{fill:inherit;height:16px;width:16px;vertical-align:middle;pointer-events:none;}"]));
}
CancelOutline.propTypes = {
  className: PropTypes.string
};
const containerStyle = ["span.jsx-2824632002{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;height:20px;width:20px;margin-inline-end:4px;border-radius:12px;margin-inline-start:-8px;}", `span.jsx-2824632002:hover{background:${colors.grey400};}`];
containerStyle.__hash = "2824632002";
const removeIcon = {
  styles: /*#__PURE__*/React.createElement(_JSXStyle, {
    id: "2658726446"
  }, [`svg.jsx-2658726446{fill:${colors.grey600};height:16px;width:16px;cursor:pointer;opacity:1;pointer-events:all;}`]),
  className: "jsx-2658726446"
};
export const Remove = _ref2 => {
  let {
    onRemove,
    dataTest
  } = _ref2;
  if (!onRemove) {
    return null;
  }
  return /*#__PURE__*/React.createElement("span", {
    onClick: e => {
      e.stopPropagation(); // stop onRemove from triggering onClick on container
      onRemove({}, e);
    },
    "data-test": dataTest,
    className: `jsx-${containerStyle.__hash}`
  }, /*#__PURE__*/React.createElement(CancelOutline, {
    className: removeIcon.className
  }), removeIcon.styles, /*#__PURE__*/React.createElement(_JSXStyle, {
    id: containerStyle.__hash
  }, containerStyle));
};
Remove.propTypes = {
  dataTest: PropTypes.string.isRequired,
  onRemove: PropTypes.func
};