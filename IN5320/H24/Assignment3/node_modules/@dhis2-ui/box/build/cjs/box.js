"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Box = void 0;
var _style = _interopRequireDefault(require("styled-jsx/style"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _react = _interopRequireDefault(require("react"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
const Box = _ref => {
  let {
    overflow,
    height,
    minHeight,
    maxHeight,
    width,
    minWidth,
    maxWidth,
    marginTop,
    children,
    dataTest = 'dhis2-uicore-box',
    className
  } = _ref;
  return /*#__PURE__*/_react.default.createElement("div", {
    "data-test": dataTest,
    className: _style.default.dynamic([["3369228338", [marginTop ? `margin-top: ${marginTop};` : '', height ? `height: ${height};` : '', minHeight ? `min-height: ${minHeight};` : '', maxHeight ? `max-height: ${maxHeight};` : '', width ? `width: ${width};` : '', minWidth ? `min-width: ${minWidth};` : '', maxWidth ? `max-width: ${maxWidth};` : '', overflow ? `overflow: ${overflow};` : '']]]) + " " + (className || "")
  }, children, /*#__PURE__*/_react.default.createElement(_style.default, {
    id: "3369228338",
    dynamic: [marginTop ? `margin-top: ${marginTop};` : '', height ? `height: ${height};` : '', minHeight ? `min-height: ${minHeight};` : '', maxHeight ? `max-height: ${maxHeight};` : '', width ? `width: ${width};` : '', minWidth ? `min-width: ${minWidth};` : '', maxWidth ? `max-width: ${maxWidth};` : '', overflow ? `overflow: ${overflow};` : '']
  }, [`div.__jsx-style-dynamic-selector{${marginTop ? `margin-top: ${marginTop};` : ''} ${height ? `height: ${height};` : ''} ${minHeight ? `min-height: ${minHeight};` : ''} ${maxHeight ? `max-height: ${maxHeight};` : ''} ${width ? `width: ${width};` : ''} ${minWidth ? `min-width: ${minWidth};` : ''} ${maxWidth ? `max-width: ${maxWidth};` : ''} ${overflow ? `overflow: ${overflow};` : ''};}`]));
};
exports.Box = Box;
Box.propTypes = {
  children: _propTypes.default.node,
  className: _propTypes.default.string,
  dataTest: _propTypes.default.string,
  height: _propTypes.default.string,
  marginTop: _propTypes.default.string,
  maxHeight: _propTypes.default.string,
  maxWidth: _propTypes.default.string,
  minHeight: _propTypes.default.string,
  minWidth: _propTypes.default.string,
  overflow: _propTypes.default.string,
  width: _propTypes.default.string
};