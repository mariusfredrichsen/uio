import '@testing-library/jest-dom';
import { render, screen } from '@testing-library/react';
import React from 'react';
import { SelectorBarItem } from '../selector-bar-item/index.js';
import { SelectorBar } from './selector-bar.js';
const noop = () => null;
describe('SelectorBar', () => {
  it('should render the selection bar items', () => {
    render( /*#__PURE__*/React.createElement(SelectorBar, null, /*#__PURE__*/React.createElement(SelectorBarItem, {
      label: "Selection bar item 1",
      noValueMessage: "No value message 1",
      open: false,
      setOpen: noop
    }, "Content"), /*#__PURE__*/React.createElement(SelectorBarItem, {
      label: "Selection bar item 2",
      noValueMessage: "No value message 2",
      open: false,
      setOpen: noop
    }, "Content")));
    expect(screen.getByText('Selection bar item 1')).not.toBeNull();
    expect(screen.getByText('Selection bar item 2')).not.toBeNull();
  });
  it('should not disable the clear selection button by default', () => {
    render( /*#__PURE__*/React.createElement(SelectorBar, {
      onClearSelectionClick: noop
    }, /*#__PURE__*/React.createElement(SelectorBarItem, {
      label: "label",
      noValueMessage: "msg",
      open: false,
      setOpen: noop
    }, "Content")));
    const clearBtn = screen.getByText('Clear selections');
    expect(clearBtn).not.toBeNull();
    expect(clearBtn).not.toBeDisabled();
  });
  it('should disable the clear selection button', () => {
    render( /*#__PURE__*/React.createElement(SelectorBar, {
      disableClearSelections: true,
      onClearSelectionClick: noop
    }, /*#__PURE__*/React.createElement(SelectorBarItem, {
      label: "label",
      noValueMessage: "msg",
      open: false,
      setOpen: noop
    }, "Content")));
    const clearBtn = screen.getByText('Clear selections');
    expect(clearBtn).not.toBeNull();
    expect(clearBtn).toBeDisabled();
  });
  it('should render the optional content', () => {
    render( /*#__PURE__*/React.createElement(SelectorBar, {
      additionalContent: /*#__PURE__*/React.createElement("div", null, "Foobar")
    }, /*#__PURE__*/React.createElement(SelectorBarItem, {
      label: "label",
      noValueMessage: "msg",
      open: false,
      setOpen: noop
    }, "Content")));
    const extraContent = screen.getByText('Foobar');
    expect(extraContent).not.toBeNull();
  });
  it('should render the displayOnly value', () => {
    render( /*#__PURE__*/React.createElement(SelectorBar, null, /*#__PURE__*/React.createElement(SelectorBarItem, {
      displayOnly: true,
      label: "Person",
      value: "John doe"
    })));
    const value = screen.getByText('John doe');
    expect(value).not.toBeNull();
  });
  it('should render the cross icon', () => {
    render( /*#__PURE__*/React.createElement(SelectorBar, null, /*#__PURE__*/React.createElement(SelectorBarItem, {
      label: "label",
      value: "selected value",
      onClearSelectionClick: noop
    })));
    const clearIcon = screen.getByTestId('dhis2-ui-selectorbaritem-clear-icon');
    expect(clearIcon).not.toBeNull();
  });
});