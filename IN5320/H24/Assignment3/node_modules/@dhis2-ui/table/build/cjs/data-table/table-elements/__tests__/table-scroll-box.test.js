"use strict";

var _enzyme = require("enzyme");
var _react = _interopRequireDefault(require("react"));
var _tableScrollBox = require("../table-scroll-box.js");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
describe('<TableScrollBox>', () => {
  it('renders children', () => {
    const children = 'children';
    const wrapper = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_tableScrollBox.TableScrollBox, null, children));
    expect(wrapper.containsMatchingElement(children)).toBe(true);
  });
  it('accepts a ref', () => {
    const ref = /*#__PURE__*/_react.default.createRef();
    const wrapper = (0, _enzyme.mount)( /*#__PURE__*/_react.default.createElement(_tableScrollBox.TableScrollBox, {
      ref: ref
    }));
    expect(wrapper.find('div').getDOMNode()).toBe(ref.current);
  });
  it('accepts a className prop', () => {
    const className = 'test';
    const wrapper = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_tableScrollBox.TableScrollBox, {
      className: className
    }));
    expect(wrapper.find('div').hasClass(className)).toBe(true);
  });
  it('accepts a dataTest prop', () => {
    const dataTest = 'test';
    const wrapper = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_tableScrollBox.TableScrollBox, {
      dataTest: dataTest
    }));
    expect(wrapper.find('div').prop('data-test')).toBe(dataTest);
  });
  it('accepts a maxHeight prop', () => {
    const maxHeight = '200px';
    const wrapper = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_tableScrollBox.TableScrollBox, {
      maxHeight: maxHeight
    }));
    expect(wrapper.html()).toContain('max-height: 200px;');
  });
  it('accepts a maxWidth prop', () => {
    const maxWidth = '200px';
    const wrapper = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_tableScrollBox.TableScrollBox, {
      maxWidth: maxWidth
    }));
    expect(wrapper.html()).toContain('max-width: 200px;');
  });
});