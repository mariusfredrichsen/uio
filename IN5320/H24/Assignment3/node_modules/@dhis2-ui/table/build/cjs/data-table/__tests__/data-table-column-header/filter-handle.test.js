"use strict";

var _uiConstants = require("@dhis2/ui-constants");
var _uiIcons = require("@dhis2/ui-icons");
var _enzyme = require("enzyme");
var _react = _interopRequireDefault(require("react"));
var _filterHandle = require("../../data-table-column-header/filter-handle.js");
var _index = require("../../table-elements/index.js");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
describe('<FilterHandle>', () => {
  it('accepts an active prop', () => {
    const wrapper = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_filterHandle.FilterHandle, null));
    const wrapperActive = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_filterHandle.FilterHandle, {
      active: true
    }));
    expect(wrapper.find(_uiIcons.IconSearch16).prop('color')).toBe(_uiConstants.colors.grey600);
    expect(wrapperActive.find(_uiIcons.IconSearch16).prop('color')).toBe(_uiConstants.colors.blue700);
  });
  it('accepts a name and onClick prop', () => {
    const name = 'test';
    const fakeEvent = {
      target: 'test',
      value: 'test'
    };
    const onClick = jest.fn();
    const wrapper = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_filterHandle.FilterHandle, {
      onClick: onClick,
      name: name
    }));
    wrapper.find(_index.TableHeaderCellAction).dive().find('button').simulate('click', fakeEvent);
    expect(onClick).toHaveBeenCalledTimes(1);
    expect(onClick).toHaveBeenCalledWith({
      name,
      // toggled
      show: true
    }, fakeEvent);
  });
});