"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DataTable = void 0;
var _classnames = _interopRequireDefault(require("classnames"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _react = _interopRequireWildcard(require("react"));
var _index = require("./table-elements/index.js");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
const DataTable = exports.DataTable = /*#__PURE__*/(0, _react.forwardRef)((_ref, ref) => {
  let {
    children,
    className,
    dataTest = 'dhis2-uicore-datatable',
    layout = 'auto',
    role,
    scrollHeight,
    scrollWidth,
    width = '100%'
  } = _ref;
  const scrollable = !!(scrollHeight || scrollWidth);
  const table = /*#__PURE__*/_react.default.createElement(_index.Table, {
    borderless: scrollable,
    className: className,
    dataTest: dataTest,
    layout: layout,
    ref: ref,
    role: role,
    width: width
  }, children);
  return !scrollable ? table : /*#__PURE__*/_react.default.createElement(_index.TableScrollBox, {
    className: (0, _classnames.default)(className, 'tablescrollbox'),
    dataTest: `${dataTest}-scrollbox`,
    maxHeight: scrollHeight,
    maxWidth: scrollWidth
  }, table);
});
DataTable.displayName = 'DataTable';
DataTable.propTypes = {
  /**
   * Should be `<DataTableHead>`, `<DataTableBody>`, and `<DataTableFoot>` components
   */
  children: _propTypes.default.node,
  className: _propTypes.default.string,
  dataTest: _propTypes.default.string,
  /**
   * Sets the `datatable-layout` property. Switching to `fixed` can prevent style
   * issues when dealing with a datatable with multiple frozen columns or when dealing
   * with filter elements in the datatable headers.
   */
  layout: _propTypes.default.oneOf(['auto', 'fixed', 'initial', 'inherit']),
  role: _propTypes.default.string,
  /** Sets max-height of scrollbox */
  scrollHeight: _propTypes.default.string,
  /** Sets max-width of scrollbox */
  scrollWidth: _propTypes.default.string,
  /**
   * Sets the `width` property. Providing an explicit width can prevent style
   * issues when dealing with horizontally scrolling datatables with a fixed layout.
   */
  width: _propTypes.default.string
};