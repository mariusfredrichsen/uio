import _JSXStyle from "styled-jsx/style";
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
import cx from 'classnames';
import PropTypes from 'prop-types';
import React, { forwardRef } from 'react';
export const TableRow = /*#__PURE__*/forwardRef((_ref, ref) => {
  let {
    children,
    className,
    dataTest = 'dhis2-uicore-tablerow',
    draggable,
    role,
    selected,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement("tr", _extends({}, props, {
    ref: ref,
    "data-test": dataTest,
    role: role,
    className: "jsx-1820444258" + " " + (cx(className, {
      selected,
      draggable
    }) || "")
  }), children, /*#__PURE__*/React.createElement(_JSXStyle, {
    id: "1820444258"
  }, ["tbody>tr.draggable.jsx-1820444258,tfoot>tr.draggable.jsx-1820444258{cursor:move;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;}"]));
});
TableRow.displayName = 'TableRow';
TableRow.propTypes = {
  /** Should be `<TableDataCell>` or `<TableDataCellHead>` components */
  children: PropTypes.node,
  className: PropTypes.string,
  dataTest: PropTypes.string,
  /** Applies draggable cursor styles */
  draggable: PropTypes.bool,
  role: PropTypes.string,
  /** Sets a selected (teal) background color */
  selected: PropTypes.bool
};