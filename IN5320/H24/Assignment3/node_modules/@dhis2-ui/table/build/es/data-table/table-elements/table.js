import _JSXStyle from "styled-jsx/style";
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
import { colors } from '@dhis2/ui-constants';
import cx from 'classnames';
import PropTypes from 'prop-types';
import React, { forwardRef } from 'react';
export const Table = /*#__PURE__*/forwardRef((_ref, ref) => {
  let {
    children,
    className,
    dataTest = 'dhis2-uicore-table',
    layout = 'auto',
    role,
    borderless,
    width = '100%',
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement("table", _extends({}, props, {
    "data-test": dataTest,
    ref: ref,
    role: role,
    className: _JSXStyle.dynamic([["3140496910", [layout, width, colors.grey300]]]) + " " + (cx(className, {
      borderless
    }) || "")
  }), children, /*#__PURE__*/React.createElement(_JSXStyle, {
    id: "3140496910",
    dynamic: [layout, width, colors.grey300]
  }, [`table.__jsx-style-dynamic-selector{table-layout:${layout};border-collapse:separate;border-spacing:0;width:${width};box-sizing:border-box;border:1px solid ${colors.grey300};}`, "table.borderless.__jsx-style-dynamic-selector{border:none;}"]));
});
Table.displayName = 'Table';
Table.propTypes = {
  /**
   * Removes border from the table
   */
  borderless: PropTypes.bool,
  /**
   * Should be `<TableHead>`, `<TableBody>`, and `<TableFoot>` components
   */
  children: PropTypes.node,
  className: PropTypes.string,
  dataTest: PropTypes.string,
  /**
   * Sets the `table-layout` property. Switching to `fixed` can prevent style
   * issues when dealing with a table with multiple frozen columns or when dealing
   * with filter elements in the table headers.
   */
  layout: PropTypes.oneOf(['auto', 'fixed', 'initial', 'inherit']),
  role: PropTypes.string,
  /**
   * Sets the `width` property. Providing an explicit width can prevent style
   * issues when dealing with horizontally scrolling tables with a fixed layout.
   */
  width: PropTypes.string
};