import _JSXStyle from "styled-jsx/style";
import { colors } from '@dhis2/ui-constants';
import cx from 'classnames';
import PropTypes from 'prop-types';
import React from 'react';
import { TableRow, TableDataCell } from '../table-elements/index.js';
const {
  className: cellClassName,
  styles
} = {
  styles: /*#__PURE__*/React.createElement(_JSXStyle, {
    id: "626485122"
  }, [`tr.expanded:hover+tr>td.jsx-626485122{background-color:${colors.grey100};}`, `tr.expanded:active+tr>td.jsx-626485122{background-color:${colors.grey200};}`, "tr.selected.expanded:hover+tr.jsx-626485122>td.jsx-626485122{background-color:#cdeae8;}"]),
  className: "jsx-626485122"
};
export const ExpandedRow = _ref => {
  let {
    children,
    className,
    colSpan,
    dataTest,
    selected,
    setIsHoveringExpandedContent
  } = _ref;
  return /*#__PURE__*/React.createElement(TableRow, {
    onMouseOver: () => setIsHoveringExpandedContent(true),
    onMouseOut: () => setIsHoveringExpandedContent(false),
    className: cx({
      [`${className}-expandedrow`]: !!className
    }),
    selected: selected,
    dataTest: dataTest && `${dataTest}-expandedrow`
  }, /*#__PURE__*/React.createElement(TableDataCell, {
    className: cellClassName,
    colSpan: colSpan
  }, children, styles));
};
ExpandedRow.propTypes = {
  children: PropTypes.node,
  className: PropTypes.string,
  colSpan: PropTypes.string,
  dataTest: PropTypes.string,
  selected: PropTypes.bool,
  setIsHoveringExpandedContent: PropTypes.func
};