"use strict";

var _enzyme = require("enzyme");
var _react = _interopRequireDefault(require("react"));
var _textAvatar = require("./text-avatar.js");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
describe('TextAvatar', () => {
  describe('sizes', () => {
    const sizes = ['extrasmall', 'small', 'medium', 'large', 'extralarge'];
    for (const size of sizes) {
      it(`should accept size prop "${size}"`, () => {
        const props = {
          name: 'John Doe',
          [size]: true
        };
        const wrapper = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_textAvatar.TextAvatar, props));
        expect(wrapper.find('.text-avatar-initials').hasClass(size)).toBe(true);
      });
    }
  });
  describe('getInitials', () => {
    it('should return initials when given a name', () => {
      const actual = (0, _textAvatar.getInitials)('Some Name');
      const expected = 'SN';
      expect(actual).toBe(expected);
    });
    it('should handle single names', () => {
      const actual = (0, _textAvatar.getInitials)('Name');
      const expected = 'N';
      expect(actual).toBe(expected);
    });
    it('should return the first and last initials', () => {
      const actual = (0, _textAvatar.getInitials)('A Very Long Name');
      const expected = 'AN';
      expect(actual).toBe(expected);
    });
    it('should handle utf-8 multi byte characters', () => {
      const actual = (0, _textAvatar.getInitials)('恨恨 한한한');
      const expected = '恨한';
      expect(actual).toBe(expected);
    });
  });
});