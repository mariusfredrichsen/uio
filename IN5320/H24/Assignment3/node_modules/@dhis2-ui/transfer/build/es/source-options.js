import _JSXStyle from "styled-jsx/style";
import { spacers } from '@dhis2/ui-constants';
import PropTypes from 'prop-types';
import React from 'react';
import { EndIntersectionDetector } from './end-intersection-detector.js';
export const SourceOptions = _ref => {
  let {
    children,
    dataTest,
    sourceEmptyPlaceholder,
    sourceOptionsRef,
    onSourceEndReached
  } = _ref;
  return /*#__PURE__*/React.createElement("div", {
    "data-test": dataTest,
    ref: sourceOptionsRef,
    className: _JSXStyle.dynamic([["392419471", [spacers.dp4]]]) + " " + "container"
  }, /*#__PURE__*/React.createElement("div", {
    className: _JSXStyle.dynamic([["392419471", [spacers.dp4]]]) + " " + "content-container"
  }, children, !React.Children.count(children) && sourceEmptyPlaceholder, onSourceEndReached && /*#__PURE__*/React.createElement(EndIntersectionDetector, {
    rootRef: sourceOptionsRef,
    onEndReached: onSourceEndReached
  })), /*#__PURE__*/React.createElement(_JSXStyle, {
    id: "392419471",
    dynamic: [spacers.dp4]
  }, [`.container.__jsx-style-dynamic-selector{padding:${spacers.dp4} 0;-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;overflow-y:auto;}`, ".content-container.__jsx-style-dynamic-selector{position:relative;}"]));
};
SourceOptions.propTypes = {
  dataTest: PropTypes.string.isRequired,
  children: PropTypes.node,
  sourceEmptyPlaceholder: PropTypes.node,
  sourceOptionsRef: PropTypes.shape({
    current: PropTypes.instanceOf(HTMLElement)
  }),
  onSourceEndReached: PropTypes.func
};