/**
 * @param {Object} args
 * @param {number} args.maxSelections
 * @param {string[]} args.selected
 * @param {Function} args.onChange
 * @param {Function} args.setHighlightedSourceOptions
 * @param {Function} args.setHighlightedPickedOptions
 * @returns void
 */
export const createDoubleClickHandlers = _ref => {
  let {
    maxSelections,
    onChange,
    selected,
    setHighlightedPickedOptions,
    setHighlightedSourceOptions
  } = _ref;
  const selectSingleOption = _ref2 => {
    let {
      value
    } = _ref2;
    const newSelected = selected.includes(value) ? selected : [...selected, value];
    setHighlightedSourceOptions([]);
    onChange({
      selected: newSelected.slice(-1 * maxSelections)
    });
  };
  const deselectSingleOption = _ref3 => {
    let {
      value
    } = _ref3;
    const newSelected = selected.filter(curSelected => curSelected !== value);
    setHighlightedPickedOptions([]);
    onChange({
      selected: newSelected
    });
  };
  return {
    selectSingleOption,
    deselectSingleOption
  };
};