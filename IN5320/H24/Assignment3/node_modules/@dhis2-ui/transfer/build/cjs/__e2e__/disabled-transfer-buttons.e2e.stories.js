"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.SomeOptionsSelected = exports.OnlyDisabledSourceOptions = exports.NoOptions = exports.HasOptions = exports.AllOptionsSelected = void 0;
var _react = _interopRequireDefault(require("react"));
var _transfer = require("../transfer.js");
var _options = require("./common/options.js");
var _statefulDecorator = require("./common/stateful-decorator.js");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
var _default = exports.default = {
  title: 'Transfer Disabled Transfer Buttons',
  decorators: [(0, _statefulDecorator.statefulDecorator)()]
};
const NoOptions = (_, _ref) => {
  let {
    selected,
    onChange
  } = _ref;
  return /*#__PURE__*/_react.default.createElement(_transfer.Transfer, {
    selected: selected,
    onChange: onChange,
    options: []
  });
};
exports.NoOptions = NoOptions;
const HasOptions = (_, _ref2) => {
  let {
    selected,
    onChange
  } = _ref2;
  return /*#__PURE__*/_react.default.createElement(_transfer.Transfer, {
    selected: selected,
    onChange: onChange,
    options: _options.options
  });
};
exports.HasOptions = HasOptions;
const SomeOptionsSelected = (_, _ref3) => {
  let {
    selected,
    onChange
  } = _ref3;
  return /*#__PURE__*/_react.default.createElement(_transfer.Transfer, {
    selected: selected,
    onChange: onChange,
    options: _options.options
  });
};
exports.SomeOptionsSelected = SomeOptionsSelected;
const OnlyDisabledSourceOptions = (_, _ref4) => {
  let {
    selected,
    onChange
  } = _ref4;
  return /*#__PURE__*/_react.default.createElement(_transfer.Transfer, {
    selected: selected,
    onChange: onChange,
    options: [{
      ..._options.options[0],
      disabled: true
    }]
  });
};
exports.OnlyDisabledSourceOptions = OnlyDisabledSourceOptions;
SomeOptionsSelected.story = {
  decorators: [(0, _statefulDecorator.statefulDecorator)({
    initialState: _options.options.slice(0, 4).map(_ref5 => {
      let {
        value
      } = _ref5;
      return value;
    })
  })]
};
const AllOptionsSelected = (_, _ref6) => {
  let {
    selected,
    onChange
  } = _ref6;
  return /*#__PURE__*/_react.default.createElement(_transfer.Transfer, {
    selected: selected,
    onChange: onChange,
    options: _options.options
  });
};
exports.AllOptionsSelected = AllOptionsSelected;
AllOptionsSelected.story = {
  decorators: [(0, _statefulDecorator.statefulDecorator)({
    initialState: _options.options.map(_ref7 => {
      let {
        value
      } = _ref7;
      return value;
    })
  })]
};