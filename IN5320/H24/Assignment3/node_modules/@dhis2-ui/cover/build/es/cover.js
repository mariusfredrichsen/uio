import _JSXStyle from "styled-jsx/style";
import { layers } from '@dhis2/ui-constants';
import cx from 'classnames';
import PropTypes from 'prop-types';
import React from 'react';
const createClickHandler = onClick => event => {
  // don't respond to clicks that originated in the children
  if (onClick && event.target === event.currentTarget) {
    onClick({}, event);
  }
};
const Cover = _ref => {
  let {
    children,
    className,
    dataTest = 'dhis2-uicore-componentcover',
    onClick,
    translucent
  } = _ref;
  return /*#__PURE__*/React.createElement("div", {
    onClick: createClickHandler(onClick),
    "data-test": dataTest,
    className: _JSXStyle.dynamic([["3798453419", [layers.applicationTop]]]) + " " + (cx(className, {
      translucent
    }) || "")
  }, children, /*#__PURE__*/React.createElement(_JSXStyle, {
    id: "3798453419",
    dynamic: [layers.applicationTop]
  }, [`div.__jsx-style-dynamic-selector{position:absolute;top:0;right:0;bottom:0;left:0;z-index:${layers.applicationTop};}`, "div.translucent.__jsx-style-dynamic-selector{background:rgba(33,43,54,0.4);}"]));
};
Cover.propTypes = {
  children: PropTypes.node,
  className: PropTypes.string,
  dataTest: PropTypes.string,
  /** Adds a semi-transparent background to the cover */
  translucent: PropTypes.bool,
  onClick: PropTypes.func
};
export { Cover };