"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.NoVariables = exports.Elevations = exports.AllVariables = void 0;
var _react = _interopRequireDefault(require("react"));
var _index = require("./index.js");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
const description = `
A utility for adding DHIS2 theme variables to global CSS variables.

\`\`\`js
import { CssVariables } from '@dhis2/ui'
\`\`\`
`;
const App = _ref => {
  let {
    children
  } = _ref;
  return /*#__PURE__*/_react.default.createElement("div", null, children);
};
var _default = exports.default = {
  title: 'CSS Variables',
  component: _index.CssVariables,
  parameters: {
    docs: {
      description: {
        component: description
      }
    }
  }
};
const AllVariables = args => /*#__PURE__*/_react.default.createElement(App, null, /*#__PURE__*/_react.default.createElement(_index.CssVariables, args), /*#__PURE__*/_react.default.createElement("p", null, "The sections of the theme that should be inserted can be toggled with flags, which allows the theme variables to be used as regular CSS custom properties. So this", ' ', /*#__PURE__*/_react.default.createElement("span", {
  style: {
    color: 'var(--colors-red500)'
  }
}, "text"), " uses the vanilla CSS", ' ', /*#__PURE__*/_react.default.createElement("span", {
  style: {
    color: 'var(--colors-blue500)'
  }
}, "custom properties"), ' ', "set by the CssVariables component."));
exports.AllVariables = AllVariables;
AllVariables.args = {
  colors: true,
  theme: true,
  layers: true,
  spacers: true,
  elevations: true
};
const NoVariables = args => /*#__PURE__*/_react.default.createElement(App, null, /*#__PURE__*/_react.default.createElement(_index.CssVariables, args), /*#__PURE__*/_react.default.createElement("p", null, "By default no custom properties are inserted."));
exports.NoVariables = NoVariables;
const Elevations = args => /*#__PURE__*/_react.default.createElement(App, null, /*#__PURE__*/_react.default.createElement(_index.CssVariables, _extends({
  elevations: true
}, args)), /*#__PURE__*/_react.default.createElement("div", {
  style: {
    display: 'flex',
    gap: '8px'
  }
}, /*#__PURE__*/_react.default.createElement("div", {
  style: {
    background: 'white',
    boxShadow: 'var(--elevations-e100',
    display: 'inline-block',
    padding: '16px',
    marginRight: '16px',
    fontFamily: 'monospace'
  }
}, "e100"), /*#__PURE__*/_react.default.createElement("div", {
  style: {
    background: 'white',
    boxShadow: 'var(--elevations-e200',
    display: 'inline-block',
    padding: '16px',
    marginRight: '16px',
    fontFamily: 'monospace'
  }
}, "e200"), /*#__PURE__*/_react.default.createElement("div", {
  style: {
    background: 'white',
    boxShadow: 'var(--elevations-e300',
    display: 'inline-block',
    padding: '16px',
    marginRight: '16px',
    fontFamily: 'monospace'
  }
}, "e300"), /*#__PURE__*/_react.default.createElement("div", {
  style: {
    background: 'white',
    boxShadow: 'var(--elevations-e400',
    display: 'inline-block',
    padding: '16px',
    marginRight: '16px',
    fontFamily: 'monospace'
  }
}, "e400")));
exports.Elevations = Elevations;