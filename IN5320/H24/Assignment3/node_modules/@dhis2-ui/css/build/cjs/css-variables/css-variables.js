"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CssVariables = void 0;
var _style = _interopRequireDefault(require("styled-jsx/style"));
var theme = _interopRequireWildcard(require("@dhis2/ui-constants"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _react = _interopRequireDefault(require("react"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
const toPrefixedThemeSection = themeSectionKey =>
// eslint-disable-next-line import/namespace
Object.entries(theme[themeSectionKey]).reduce((prefixed, _ref) => {
  let [key, value] = _ref;
  prefixed[`${themeSectionKey}-${key}`] = value;
  return prefixed;
}, {});
const toCustomPropertyString = themeSection => Object.entries(themeSection).map(_ref2 => {
  let [key, value] = _ref2;
  return `--${key}: ${value};`;
}).join('\n');
const CssVariables = _ref3 => {
  let {
    colors = false,
    theme = false,
    layers = false,
    spacers = false,
    elevations = false
  } = _ref3;
  const allowedProps = {
    colors,
    theme,
    layers,
    spacers,
    elevations
  };
  const variables = Object.keys(allowedProps)
  // Filter all props that are false
  .filter(prop => allowedProps[prop])
  // Map props to corresponding theme section and prefixes keys with section name
  .map(toPrefixedThemeSection)
  // Map each section to a single string of css custom property declarations
  .map(toCustomPropertyString)
  // Join all the sections to a single string
  .join('\n');
  return /*#__PURE__*/_react.default.createElement(_style.default, {
    id: "3443925957",
    dynamic: [variables]
  }, [`html{${variables};}`]);
};
exports.CssVariables = CssVariables;
CssVariables.propTypes = {
  colors: _propTypes.default.bool,
  elevations: _propTypes.default.bool,
  layers: _propTypes.default.bool,
  spacers: _propTypes.default.bool,
  theme: _propTypes.default.bool
};