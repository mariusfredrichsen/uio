import _JSXStyle from "styled-jsx/style";
import { mutuallyExclusive } from '@dhis2/prop-types';
import { spacers, colors } from '@dhis2/ui-constants';
import { IconErrorFilled24, IconInfoFilled24, IconWarningFilled24, IconCheckmark24 } from '@dhis2/ui-icons';
import PropTypes from 'prop-types';
import React from 'react';
const StatusIcon = _ref => {
  let {
    error,
    warning,
    valid,
    info,
    defaultTo = null
  } = _ref;
  if (error) {
    return /*#__PURE__*/React.createElement(IconErrorFilled24, {
      color: colors.white
    });
  }
  if (warning) {
    return /*#__PURE__*/React.createElement(IconWarningFilled24, {
      color: colors.yellow900
    });
  }
  if (valid) {
    return /*#__PURE__*/React.createElement(IconCheckmark24, {
      color: colors.white
    });
  }
  if (info) {
    return /*#__PURE__*/React.createElement(IconInfoFilled24, {
      color: colors.white
    });
  }
  return defaultTo;
};
StatusIcon.propTypes = {
  defaultTo: PropTypes.element,
  error: PropTypes.bool,
  info: PropTypes.bool,
  valid: PropTypes.bool,
  warning: PropTypes.bool
};
const Icon = _ref2 => {
  let {
    icon,
    success,
    warning,
    critical,
    info,
    dataTest
  } = _ref2;
  if (icon === false) {
    return null;
  }
  return /*#__PURE__*/React.createElement("div", {
    "data-test": dataTest,
    className: _JSXStyle.dynamic([["719386130", [spacers.dp16]]])
  }, /*#__PURE__*/React.isValidElement(icon) ? icon : /*#__PURE__*/React.createElement(StatusIcon, {
    valid: success,
    error: critical,
    warning: warning,
    info: info
  }), /*#__PURE__*/React.createElement(_JSXStyle, {
    id: "719386130",
    dynamic: [spacers.dp16]
  }, [`div.__jsx-style-dynamic-selector{margin-inline-end:${spacers.dp16};}`]));
};
const iconPropType = PropTypes.oneOfType([PropTypes.bool, PropTypes.element]);
const alertStatePropType = mutuallyExclusive(['success', 'warning', 'critical', 'info'], PropTypes.bool);
Icon.propTypes = {
  dataTest: PropTypes.string.isRequired,
  critical: alertStatePropType,
  icon: iconPropType,
  info: alertStatePropType,
  success: alertStatePropType,
  warning: alertStatePropType
};
export { Icon, iconPropType };