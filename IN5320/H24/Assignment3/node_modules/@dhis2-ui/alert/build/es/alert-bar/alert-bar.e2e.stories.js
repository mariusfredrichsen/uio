import React, { useState } from 'react';
import { AlertBar } from './index.js';
window.onHidden = window.Cypress && window.Cypress.cy.stub();
export default {
  title: 'AlertBar'
};
export const Default = () => /*#__PURE__*/React.createElement(AlertBar, null, "Default");
export const CustomDuration = () => /*#__PURE__*/React.createElement(AlertBar, {
  duration: 2000
}, "Custom duration");
export const PermanentWithActions = () => /*#__PURE__*/React.createElement(AlertBar, {
  permanent: true,
  actions: [{
    label: 'Save',
    onClick: () => {}
  }, {
    label: 'Cancel',
    onClick: () => {}
  }]
}, "With Actions");
export const DisabledIcon = () => /*#__PURE__*/React.createElement(AlertBar, {
  icon: false
}, "Message");
export const CustomIcon = () => /*#__PURE__*/React.createElement(AlertBar, {
  icon: /*#__PURE__*/React.createElement("span", null, "Custom icon")
}, "Message");
export const WithMessage = () => /*#__PURE__*/React.createElement(AlertBar, null, "With a message");
export const WithOnHidden = () => /*#__PURE__*/React.createElement(AlertBar, {
  onHidden: window.onHidden
}, "Message");
export const Permanent = () => /*#__PURE__*/React.createElement(AlertBar, {
  permanent: true
}, "Message");
export const HiddenProp = () => {
  const [hidden, setHidden] = useState(true);
  const toggleVisibility = () => setHidden(prevHidden => !prevHidden);
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("button", {
    style: {
      display: 'block',
      position: 'fixed',
      bottom: 150,
      left: 10
    },
    onClick: toggleVisibility
  }, hidden ? 'Show' : 'Hide'), /*#__PURE__*/React.createElement(AlertBar, {
    permanent: true,
    hidden: hidden,
    onHidden: window.onHidden
  }, "Short text"));
};