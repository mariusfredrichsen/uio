"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Portal = void 0;
var _propTypes = _interopRequireDefault(require("prop-types"));
var _react = require("react");
var _reactDom = require("react-dom");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
/*
 * #dhis2-portal-root is provided by the App Platform and will be used by
 * default.
 *
 * For non-platform apps, the mount node can be added manually to the HTML
 * template.
 *
 * As a fallback, portals will be attached to the document body.
 *
 * This needs to be a function so that it works in tests as well.
 */
const getDefaultNode = () => document.getElementById('dhis2-portal-root') || document.body;
const Portal = _ref => {
  let {
    children,
    node,
    disable
  } = _ref;
  const [mountNode, setMountNode] = (0, _react.useState)(null);
  (0, _react.useEffect)(() => {
    setMountNode(node || getDefaultNode());
  }, [node]);
  if (disable) {
    return children;
  }
  return mountNode ? /*#__PURE__*/(0, _reactDom.createPortal)(children, mountNode) : mountNode;
};
exports.Portal = Portal;
Portal.propTypes = {
  children: _propTypes.default.node,
  disable: _propTypes.default.bool,
  node: _propTypes.default.node
};