"use strict";

var _cypressCucumberPreprocessor = require("@badeball/cypress-cucumber-preprocessor");
(0, _cypressCucumberPreprocessor.Given)('a Popper with placement bottom-start has a React Ref as its reference', () => {
  cy.visitStory('Popper', 'React Ref As Reference');
});
(0, _cypressCucumberPreprocessor.Given)('a Popper with placement bottom-start has a DOM node as its reference', () => {
  cy.visitStory('Popper', 'DOM Node As Reference');
});
(0, _cypressCucumberPreprocessor.Given)('a Popper with placement bottom-start has a virtual element as its reference', () => {
  cy.visitStory('Popper', 'Virtual Element As Reference');
});
(0, _cypressCucumberPreprocessor.Then)('the left of the popper is aligned with the left of the reference element', () => {
  cy.all(() => cy.get('button:contains("Reference")'), () => cy.get('[data-test="dhis2-uicore-popper"]')).should(_ref => {
    let [$reference, $popper] = _ref;
    const referenceRect = $reference.get(0).getBoundingClientRect();
    const popperRect = $popper.get(0).getBoundingClientRect();
    expect(referenceRect.left).to.be.closeTo(popperRect.left, 1);
  });
});
(0, _cypressCucumberPreprocessor.Then)('the top of the popper is adjacent to the bottom of the reference element', () => {
  cy.all(() => cy.get('button:contains("Reference")'), () => cy.get('[data-test="dhis2-uicore-popper"]')).should(_ref2 => {
    let [$button, $popper] = _ref2;
    const buttonRect = $button.get(0).getBoundingClientRect();
    const popperRect = $popper.get(0).getBoundingClientRect();
    expect(buttonRect.bottom).to.be.closeTo(popperRect.top, 1);
  });
});
(0, _cypressCucumberPreprocessor.Then)('the top and left of the popper correspond with the virtualElement', () => {
  cy.get('[data-test="dhis2-uicore-popper"]').should($popper => {
    const popperRect = $popper.get(0).getBoundingClientRect();
    expect(popperRect.top).to.be.closeTo(200, 1);
    expect(popperRect.left).to.be.closeTo(200, 1);
  });
});