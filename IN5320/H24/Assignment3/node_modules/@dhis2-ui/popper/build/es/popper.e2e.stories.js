import _JSXStyle from "styled-jsx/style";
import PropTypes from 'prop-types';
import React, { useRef, useState } from 'react';
import { Popper } from './popper.js';
const PopperPlacement = _ref => {
  let {
    placement
  } = _ref;
  const ref = useRef();
  return /*#__PURE__*/React.createElement("div", {
    className: "jsx-305551169" + " " + "box"
  }, /*#__PURE__*/React.createElement("div", {
    ref: ref,
    className: "jsx-305551169" + " " + "reference-element"
  }, "Reference element"), /*#__PURE__*/React.createElement(Popper, {
    reference: ref,
    placement: placement
  }, /*#__PURE__*/React.createElement("div", {
    className: "jsx-305551169" + " " + "popper-content"
  }, "Popper")), /*#__PURE__*/React.createElement(_JSXStyle, {
    id: "305551169"
  }, [".box.jsx-305551169{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;width:400px;height:400px;margin-bottom:1000px;background-color:aliceblue;}", ".reference-element.jsx-305551169{width:100px;height:50px;background-color:cadetblue;text-align:center;padding:6px;}", ".popper-content.jsx-305551169{width:80px;height:30px;background-color:lightblue;text-align:center;padding:6px;}"]));
};
PopperPlacement.propTypes = {
  placement: PropTypes.string
};
export default {
  title: 'Popper',
  component: Popper
};
export const Top = () => /*#__PURE__*/React.createElement(PopperPlacement, {
  placement: "top"
});
export const TopStart = () => /*#__PURE__*/React.createElement(PopperPlacement, {
  placement: "top-start"
});
export const TopEnd = () => /*#__PURE__*/React.createElement(PopperPlacement, {
  placement: "top-end"
});
export const Bottom = () => /*#__PURE__*/React.createElement(PopperPlacement, {
  placement: "bottom"
});
export const BottomStart = () => /*#__PURE__*/React.createElement(PopperPlacement, {
  placement: "bottom-start"
});
export const BottomEnd = () => /*#__PURE__*/React.createElement(PopperPlacement, {
  placement: "bottom-end"
});
export const Right = () => /*#__PURE__*/React.createElement(PopperPlacement, {
  placement: "right"
});
export const RightStart = () => /*#__PURE__*/React.createElement(PopperPlacement, {
  placement: "right-start"
});
export const RightEnd = () => /*#__PURE__*/React.createElement(PopperPlacement, {
  placement: "right-end"
});
export const Left = () => /*#__PURE__*/React.createElement(PopperPlacement, {
  placement: "left"
});
export const LeftStart = () => /*#__PURE__*/React.createElement(PopperPlacement, {
  placement: "left-start"
});
export const LeftEnd = () => /*#__PURE__*/React.createElement(PopperPlacement, {
  placement: "left-end"
});
export const ReactRefAsReference = () => {
  const ref = useRef();
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("button", {
    ref: ref
  }, "Reference"), /*#__PURE__*/React.createElement(Popper, {
    placement: "bottom-start",
    reference: ref
  }, "Popper"));
};
export const DOMNodeAsReference = () => {
  const [node, setNode] = useState(null);
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("button", {
    ref: setNode
  }, "Reference"), /*#__PURE__*/React.createElement(Popper, {
    placement: "bottom-start",
    reference: node
  }, "Popper"));
};
export const VirtualElementAsReference = () => {
  const virtualElement = {
    getBoundingClientRect: () => ({
      top: 200,
      left: 200,
      bottom: 'auto',
      right: 'auto',
      width: 0,
      height: 0
    })
  };
  return /*#__PURE__*/React.createElement(Popper, {
    placement: "bottom-start",
    reference: virtualElement
  }, "Popper");
};