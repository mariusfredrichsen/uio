import _JSXStyle from "styled-jsx/style";
import { colors, elevations, spacers } from '@dhis2/ui-constants';
import PropTypes from 'prop-types';
import React, { Children, cloneElement, isValidElement, useEffect, useRef, useState } from 'react';
import { Menu } from '../menu/index.js';
const FlyoutMenu = _ref => {
  let {
    children,
    className,
    dataTest = 'dhis2-uicore-menu',
    dense,
    maxHeight = 'auto',
    maxWidth = '380px',
    closeMenu
  } = _ref;
  const [openedSubMenu, setOpenedSubMenu] = useState(null);
  const toggleSubMenu = index => {
    const toggleValue = index === openedSubMenu ? null : index;
    setOpenedSubMenu(toggleValue);
  };
  const divRef = useRef(null);
  useEffect(() => {
    if (!divRef.current) {
      return;
    }
    const div = divRef.current;
    const handleFocus = event => {
      if (event.target === div) {
        if (div !== null && div !== void 0 && div.children && div.children.length > 0) {
          div.children[0].focus();
        }
      }
    };
    const handleKeyDown = event => {
      if (event.key === 'Escape') {
        event.preventDefault();
        closeMenu && closeMenu();
      }
    };
    div.addEventListener('focus', handleFocus);
    div.addEventListener('keydown', handleKeyDown);
    return () => {
      div.removeEventListener('focus', handleFocus);
      div.removeEventListener('keydown', handleKeyDown);
    };
  }, [closeMenu]);
  return /*#__PURE__*/React.createElement("div", {
    "data-test": dataTest,
    tabIndex: 0,
    ref: divRef,
    className: _JSXStyle.dynamic([["3833750986", [colors.white, colors.grey200, elevations.e300, dense ? '128' : '180', maxWidth, maxHeight, spacers.dp4]]]) + " " + (className || "")
  }, /*#__PURE__*/React.createElement(Menu, {
    dense: dense
  }, Children.map(children, (child, index) => /*#__PURE__*/isValidElement(child) ? /*#__PURE__*/cloneElement(child, {
    showSubMenu: openedSubMenu === index,
    toggleSubMenu: toggleSubMenu.bind(this, index)
  }) : child)), /*#__PURE__*/React.createElement(_JSXStyle, {
    id: "3833750986",
    dynamic: [colors.white, colors.grey200, elevations.e300, dense ? '128' : '180', maxWidth, maxHeight, spacers.dp4]
  }, [`div.__jsx-style-dynamic-selector{background:${colors.white};border:1px solid ${colors.grey200};border-radius:3px;box-shadow:${elevations.e300};display:inline-block;min-width:${dense ? '128' : '180'}px;max-width:${maxWidth};max-height:${maxHeight};padding:${spacers.dp4} 0;overflow:auto;}`]));
};
FlyoutMenu.propTypes = {
  /** Typically, but not limited to, `MenuItem` components */
  children: PropTypes.node,
  className: PropTypes.string,
  /** when Escape key is pressed, this function is called to close the flyout menu */
  closeMenu: PropTypes.func,
  dataTest: PropTypes.string,
  /** Menu uses smaller dimensions */
  dense: PropTypes.bool,
  maxHeight: PropTypes.string,
  maxWidth: PropTypes.string
};
export { FlyoutMenu };