"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FlyoutMenu = void 0;
var _style = _interopRequireDefault(require("styled-jsx/style"));
var _uiConstants = require("@dhis2/ui-constants");
var _propTypes = _interopRequireDefault(require("prop-types"));
var _react = _interopRequireWildcard(require("react"));
var _index = require("../menu/index.js");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
const FlyoutMenu = _ref => {
  let {
    children,
    className,
    dataTest = 'dhis2-uicore-menu',
    dense,
    maxHeight = 'auto',
    maxWidth = '380px',
    closeMenu
  } = _ref;
  const [openedSubMenu, setOpenedSubMenu] = (0, _react.useState)(null);
  const toggleSubMenu = index => {
    const toggleValue = index === openedSubMenu ? null : index;
    setOpenedSubMenu(toggleValue);
  };
  const divRef = (0, _react.useRef)(null);
  (0, _react.useEffect)(() => {
    if (!divRef.current) {
      return;
    }
    const div = divRef.current;
    const handleFocus = event => {
      if (event.target === div) {
        if (div !== null && div !== void 0 && div.children && div.children.length > 0) {
          div.children[0].focus();
        }
      }
    };
    const handleKeyDown = event => {
      if (event.key === 'Escape') {
        event.preventDefault();
        closeMenu && closeMenu();
      }
    };
    div.addEventListener('focus', handleFocus);
    div.addEventListener('keydown', handleKeyDown);
    return () => {
      div.removeEventListener('focus', handleFocus);
      div.removeEventListener('keydown', handleKeyDown);
    };
  }, [closeMenu]);
  return /*#__PURE__*/_react.default.createElement("div", {
    "data-test": dataTest,
    tabIndex: 0,
    ref: divRef,
    className: _style.default.dynamic([["3833750986", [_uiConstants.colors.white, _uiConstants.colors.grey200, _uiConstants.elevations.e300, dense ? '128' : '180', maxWidth, maxHeight, _uiConstants.spacers.dp4]]]) + " " + (className || "")
  }, /*#__PURE__*/_react.default.createElement(_index.Menu, {
    dense: dense
  }, _react.Children.map(children, (child, index) => /*#__PURE__*/(0, _react.isValidElement)(child) ? /*#__PURE__*/(0, _react.cloneElement)(child, {
    showSubMenu: openedSubMenu === index,
    toggleSubMenu: toggleSubMenu.bind(void 0, index)
  }) : child)), /*#__PURE__*/_react.default.createElement(_style.default, {
    id: "3833750986",
    dynamic: [_uiConstants.colors.white, _uiConstants.colors.grey200, _uiConstants.elevations.e300, dense ? '128' : '180', maxWidth, maxHeight, _uiConstants.spacers.dp4]
  }, [`div.__jsx-style-dynamic-selector{background:${_uiConstants.colors.white};border:1px solid ${_uiConstants.colors.grey200};border-radius:3px;box-shadow:${_uiConstants.elevations.e300};display:inline-block;min-width:${dense ? '128' : '180'}px;max-width:${maxWidth};max-height:${maxHeight};padding:${_uiConstants.spacers.dp4} 0;overflow:auto;}`]));
};
exports.FlyoutMenu = FlyoutMenu;
FlyoutMenu.propTypes = {
  /** Typically, but not limited to, `MenuItem` components */
  children: _propTypes.default.node,
  className: _propTypes.default.string,
  /** when Escape key is pressed, this function is called to close the flyout menu */
  closeMenu: _propTypes.default.func,
  dataTest: _propTypes.default.string,
  /** Menu uses smaller dimensions */
  dense: _propTypes.default.bool,
  maxHeight: _propTypes.default.string,
  maxWidth: _propTypes.default.string
};