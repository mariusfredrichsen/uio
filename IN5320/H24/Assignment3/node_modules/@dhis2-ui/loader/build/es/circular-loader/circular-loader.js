import _JSXStyle from "styled-jsx/style";
import { colors, sharedPropTypes } from '@dhis2/ui-constants';
import cx from 'classnames';
import PropTypes from 'prop-types';
import React from 'react';
const CircularLoader = _ref => {
  let {
    small,
    large,
    extrasmall,
    invert,
    className,
    dataTest = 'dhis2-uicore-circularloader',
    'aria-label': ariaLabel
  } = _ref;
  return /*#__PURE__*/React.createElement("div", {
    role: "progressbar",
    "data-test": dataTest,
    "aria-label": ariaLabel,
    className: _JSXStyle.dynamic([["3803726117", [colors.blue600, colors.white]]]) + " " + (cx(className, {
      small,
      large,
      extrasmall,
      invert
    }) || "")
  }, /*#__PURE__*/React.createElement(_JSXStyle, {
    id: "3803726117",
    dynamic: [colors.blue600, colors.white]
  }, [`div.__jsx-style-dynamic-selector{width:48px;height:48px;border:6px solid rgba(110,122,138,0.15);border-bottom-color:${colors.blue600};border-radius:50%;-webkit-animation:rotation-__jsx-style-dynamic-selector 1s linear infinite;animation:rotation-__jsx-style-dynamic-selector 1s linear infinite;}`, "@-webkit-keyframes rotation-__jsx-style-dynamic-selector{0%{-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);}100%{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}", "@keyframes rotation-__jsx-style-dynamic-selector{0%{-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);}100%{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}", ".small.__jsx-style-dynamic-selector{width:24px;height:24px;border-width:4px;}", ".large.__jsx-style-dynamic-selector{width:72px;height:72px;border-width:8px;}", ".extrasmall.__jsx-style-dynamic-selector{width:16px;height:16px;border-width:2px;}", `.invert.__jsx-style-dynamic-selector{border-color:rgba(33,41,52,0.5);border-bottom-color:${colors.white};}`]));
};
CircularLoader.propTypes = {
  'aria-label': PropTypes.string,
  className: PropTypes.string,
  dataTest: PropTypes.string,
  extrasmall: sharedPropTypes.sizePropType,
  invert: PropTypes.bool,
  large: sharedPropTypes.sizePropType,
  small: sharedPropTypes.sizePropType
};
export { CircularLoader };