"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LinearLoader = void 0;
var _style = _interopRequireDefault(require("styled-jsx/style"));
var _uiConstants = require("@dhis2/ui-constants");
var _classnames = _interopRequireDefault(require("classnames"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _react = _interopRequireDefault(require("react"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
const Progress = _ref => {
  let {
    amount,
    invert,
    className
  } = _ref;
  return /*#__PURE__*/_react.default.createElement("div", {
    className: _style.default.dynamic([["686723300", [amount]], ["3392977398", [_uiConstants.theme.primary600, _uiConstants.colors.white]]]) + " " + ((0, _classnames.default)(className, {
      invert
    }) || "")
  }, /*#__PURE__*/_react.default.createElement(_style.default, {
    id: "686723300",
    dynamic: [amount]
  }, [`div.__jsx-style-dynamic-selector{width:${amount}%;}`]), /*#__PURE__*/_react.default.createElement(_style.default, {
    id: "3392977398",
    dynamic: [_uiConstants.theme.primary600, _uiConstants.colors.white]
  }, [`div.__jsx-style-dynamic-selector{background-color:${_uiConstants.theme.primary600};-webkit-transition:width 0.3s linear;transition:width 0.3s linear;height:4px;}`, `.invert.__jsx-style-dynamic-selector{background-color:${_uiConstants.colors.white};}`]));
};
Progress.propTypes = {
  amount: _propTypes.default.number.isRequired,
  className: _propTypes.default.string,
  invert: _propTypes.default.bool
};
const LinearLoader = _ref2 => {
  let {
    amount,
    width = '300px',
    margin = _uiConstants.spacers.dp12,
    invert,
    className,
    dataTest = 'dhis2-uicore-linearloader',
    'aria-label': ariaLabel
  } = _ref2;
  return /*#__PURE__*/_react.default.createElement("div", {
    role: "progressbar",
    "aria-valuenow": amount,
    "aria-label": ariaLabel,
    "data-test": dataTest,
    className: "jsx-3127531794 " + _style.default.dynamic([["3224415970", [width, margin]]]) + " " + ((0, _classnames.default)(className, {
      invert
    }) || "")
  }, /*#__PURE__*/_react.default.createElement(Progress, {
    amount: amount,
    invert: invert
  }), /*#__PURE__*/_react.default.createElement(_style.default, {
    id: "3127531794"
  }, ["div.jsx-3127531794{display:block;overflow:hidden;overflow-x:hidden;overflow-y:hidden;background-color:rgba(110,122,138,0.15);}", ".invert.jsx-3127531794{background-color:rgba(33,41,52,0.5);}"]), /*#__PURE__*/_react.default.createElement(_style.default, {
    id: "3224415970",
    dynamic: [width, margin]
  }, [`div.__jsx-style-dynamic-selector{width:${width};margin:${margin};}`]));
};
exports.LinearLoader = LinearLoader;
LinearLoader.propTypes = {
  /** The progression in percent without the '%' sign */
  amount: _propTypes.default.number.isRequired,
  'aria-label': _propTypes.default.string,
  className: _propTypes.default.string,
  dataTest: _propTypes.default.string,
  /** Use inverted color scheme */
  invert: _propTypes.default.bool,
  /** The margin around the loader, can be a full shorthand */
  margin: _propTypes.default.string,
  /** The width of the entire indicator */
  width: _propTypes.default.string
};