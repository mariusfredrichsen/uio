import { layers } from '@dhis2/ui-constants';
import React from 'react';
import { Layer } from './layer.js';
window.onButtonClick = window.Cypress && window.Cypress.cy.stub();
window.onLayerClick = window.Cypress && window.Cypress.cy.stub();
const createNamedLayerClick = name => () => {
  window.onLayerClick(name);
};
export default {
  title: 'Layer',
  component: Layer
};
export const Default = () => /*#__PURE__*/React.createElement(Layer, null, /*#__PURE__*/React.createElement("p", null, "I am a child"));
export const Blocking = () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("button", {
  onClick: window.onButtonClick
}, "Test"), /*#__PURE__*/React.createElement(Layer, null));
export const WithClickHandler = () => /*#__PURE__*/React.createElement(Layer, {
  onBackdropClick: window.onLayerClick
}, /*#__PURE__*/React.createElement("button", {
  onClick: window.onButtonClick
}, "Test"));
export const EqualSiblings = () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Layer, {
  onBackdropClick: createNamedLayerClick('first')
}), /*#__PURE__*/React.createElement(Layer, {
  onBackdropClick: createNamedLayerClick('second')
}));
export const InequalSiblings = () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Layer, {
  level: layers.alert,
  onBackdropClick: createNamedLayerClick('alert')
}), /*#__PURE__*/React.createElement(Layer, {
  level: layers.blocking,
  onBackdropClick: createNamedLayerClick('blocking')
}), /*#__PURE__*/React.createElement(Layer, {
  level: layers.applicationTop,
  onBackdropClick: createNamedLayerClick('applicationTop')
}));
export const NestedLowerLevels = () => /*#__PURE__*/React.createElement(Layer, {
  level: layers.alert,
  dataTest: "alert",
  onBackdropClick: createNamedLayerClick('alert')
}, /*#__PURE__*/React.createElement(Layer, {
  level: layers.blocking,
  dataTest: "blocking",
  disablePortal: true,
  onBackdropClick: createNamedLayerClick('blocking')
}));
export const NestedHigherLevels = () => /*#__PURE__*/React.createElement(Layer, {
  level: layers.blocking,
  dataTest: "blocking",
  onBackdropClick: createNamedLayerClick('blocking')
}, /*#__PURE__*/React.createElement(Layer, {
  level: layers.alert,
  dataTest: "alert",
  onBackdropClick: createNamedLayerClick('alert')
}));
export const LevelsAreRespectedWhenNesting = () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Layer, {
  level: 1000
}, /*#__PURE__*/React.createElement(Layer, {
  level: 1000
}, /*#__PURE__*/React.createElement(Layer, {
  level: 1000,
  onBackdropClick: createNamedLayerClick('1000')
}))), /*#__PURE__*/React.createElement(Layer, {
  level: 1001,
  onBackdropClick: createNamedLayerClick('1001')
}));
export const NestedHigherLevelEndsOnTop = () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Layer, {
  level: layers.applicationTop
}, /*#__PURE__*/React.createElement(Layer, {
  level: layers.alert,
  onBackdropClick: createNamedLayerClick('alert')
})), /*#__PURE__*/React.createElement(Layer, {
  level: layers.blocking,
  onBackdropClick: createNamedLayerClick('blocking')
}));