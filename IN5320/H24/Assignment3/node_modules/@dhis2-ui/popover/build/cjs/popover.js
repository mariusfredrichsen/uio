"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Popover = void 0;
var _style = _interopRequireDefault(require("styled-jsx/style"));
var _uiConstants = require("@dhis2/ui-constants");
var _layer = require("@dhis2-ui/layer");
var _popper = require("@dhis2-ui/popper");
var _propTypes = _interopRequireDefault(require("prop-types"));
var _react = _interopRequireWildcard(require("react"));
var _arrow = require("./arrow.js");
var _modifiers = require("./modifiers.js");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
const Popover = _ref => {
  let {
    children,
    reference,
    arrow = true,
    className,
    dataTest = 'dhis2-uicore-popover',
    elevation = _uiConstants.elevations.e200,
    maxWidth = 360,
    observePopperResize,
    observeReferenceResize,
    placement = 'top',
    onClickOutside
  } = _ref;
  const referenceElement = (0, _popper.getReferenceElement)(reference);
  const [popperElement, setPopperElement] = (0, _react.useState)(null);
  const [arrowElement, setArrowElement] = (0, _react.useState)(null);
  const modifiers = (0, _react.useMemo)(() => (0, _modifiers.combineModifiers)(arrow, arrowElement, {
    observePopperResize,
    observeReferenceResize
  }), [arrow, arrowElement, observePopperResize, observeReferenceResize]);
  const {
    styles,
    attributes
  } = (0, _popper.usePopper)(referenceElement, popperElement, {
    placement,
    modifiers
  });
  return /*#__PURE__*/_react.default.createElement(_layer.Layer, {
    onBackdropClick: onClickOutside
  }, /*#__PURE__*/_react.default.createElement("div", _extends({
    "data-test": dataTest,
    ref: setPopperElement,
    style: styles.popper
  }, attributes.popper, {
    className: _style.default.dynamic([["632767479", [maxWidth, elevation, _uiConstants.colors.white]]]) + " " + (attributes.popper && attributes.popper.className != null && attributes.popper.className || className || "")
  }), children, arrow && /*#__PURE__*/_react.default.createElement(_arrow.Arrow, {
    hidden: attributes.arrow && attributes.arrow['data-arrow-hidden'],
    popperPlacement: attributes.popper && attributes.popper['data-popper-placement'],
    ref: setArrowElement,
    styles: styles.arrow
  }), /*#__PURE__*/_react.default.createElement(_style.default, {
    id: "632767479",
    dynamic: [maxWidth, elevation, _uiConstants.colors.white]
  }, [`div.__jsx-style-dynamic-selector{max-width:${maxWidth}px;box-shadow:${elevation};background-color:${_uiConstants.colors.white};border-radius:4px;}`])));
};
exports.Popover = Popover;
Popover.propTypes = {
  children: _propTypes.default.node.isRequired,
  /** Show or hide the arrow */
  arrow: _propTypes.default.bool,
  className: _propTypes.default.string,
  dataTest: _propTypes.default.string,
  /** Box-shadow to create appearance of elevation.  Use `elevations` constants from the UI library. */
  elevation: _propTypes.default.string,
  maxWidth: _propTypes.default.number,
  observePopperResize: _propTypes.default.bool,
  observeReferenceResize: _propTypes.default.bool,
  placement: _uiConstants.sharedPropTypes.popperPlacementPropType,
  /** A React ref that refers to the element the Popover should position against */
  reference: _uiConstants.sharedPropTypes.popperReferencePropType,
  onClickOutside: _propTypes.default.func
};