"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useRootOrgData = exports.createRootQuery = void 0;
var _appRuntime = require("@dhis2/app-runtime");
var _react = require("react");
var _patchMissingDisplayName = require("./patch-missing-display-name.js");
const createRootQuery = ids => ids.reduce((query, id) => ({
  ...query,
  [id]: {
    id,
    resource: `organisationUnits`,
    params: _ref => {
      let {
        isUserDataViewFallback
      } = _ref;
      return {
        isUserDataViewFallback,
        fields: ['displayName', 'path', 'id']
      };
    }
  }
}), {});

/**
 * @param {string[]} ids
 * @param {Object} [options]
 * @param {boolean} [options.withChildren]
 * @param {boolean} [options.isUserDataViewFallback]
 * @returns {Object}
 */
exports.createRootQuery = createRootQuery;
const useRootOrgData = function (ids) {
  let {
    isUserDataViewFallback
  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  const query = (0, _react.useMemo)(() => createRootQuery(ids), [ids]);
  const variables = {
    isUserDataViewFallback
  };
  const rootOrgUnits = (0, _appRuntime.useDataQuery)(query, {
    variables
  });
  const {
    called,
    loading,
    error,
    data,
    refetch
  } = rootOrgUnits;
  const patchedData = (0, _react.useMemo)(() => {
    return data ? (0, _patchMissingDisplayName.patchMissingDisplayName)(data) : data;
  }, [data]);
  return {
    called,
    loading,
    error: error || null,
    data: patchedData || null,
    refetch
  };
};
exports.useRootOrgData = useRootOrgData;