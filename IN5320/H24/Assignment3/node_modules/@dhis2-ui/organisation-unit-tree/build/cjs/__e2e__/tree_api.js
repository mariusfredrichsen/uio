"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Events = void 0;
var _appRuntime = require("@dhis2/app-runtime");
var _react = _interopRequireDefault(require("react"));
var _index = require("../index.js");
var _common = require("./common.js");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
const customizedDataProviderData = {
  organisationUnits: function () {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    const [, {
      id,
      params
    }] = args;
    const {
      fields
    } = params;
    if (id === 'A0000000000') {
      return _common.dataProviderData.organisationUnits(...args).then(data => {
        var _data$children;
        return {
          ...data,
          children: fields.includes('children::size') ? 1 : (_data$children = data.children) === null || _data$children === void 0 ? void 0 : _data$children.slice(0, 1)
        };
      });
    }
    if (id === 'A0000000001') {
      return _common.dataProviderData.organisationUnits(...args).then(data => ({
        ...data,
        path: '/A0000000001',
        children: fields.includes('children::size') ? 0 : []
      }));
    }
    return Promise.resolve({});
  }
};
window.onChange = window.Cypress && window.Cypress.cy.stub();
window.onCollapse = window.Cypress && window.Cypress.cy.stub();
window.onExpand = window.Cypress && window.Cypress.cy.stub();
window.onChildrenLoaded = window.Cypress && window.Cypress.cy.stub();
const Events = () => /*#__PURE__*/_react.default.createElement(_appRuntime.CustomDataProvider, {
  data: customizedDataProviderData
}, /*#__PURE__*/_react.default.createElement(_common.StatefulMultiSelectionWrapper, null, _ref => {
  let {
    selected,
    onChange
  } = _ref;
  return /*#__PURE__*/_react.default.createElement(_index.OrganisationUnitTree, {
    roots: "A0000000000",
    selected: selected,
    onChange: function () {
      onChange(...arguments);
      window.onChange(...arguments);
    },
    onExpand: window.onExpand,
    onCollapse: window.onCollapse,
    onChildrenLoaded: window.onChildrenLoaded
  });
}));
exports.Events = Events;