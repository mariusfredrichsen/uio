"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.OrganisationUnitNodeChildren = void 0;
var _propTypes = _interopRequireDefault(require("prop-types"));
var _react = _interopRequireDefault(require("react"));
var _index = require("../helpers/index.js");
var _index2 = _interopRequireDefault(require("../locales/index.js"));
var _propTypes2 = require("../prop-types.js");
var _loadingSpinner = require("./loading-spinner.js");
var _useOrgChildren = require("./use-org-children.js");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
const getFilteredChildren = _ref => {
  let {
    orgChildren,
    filter,
    node
  } = _ref;
  if (!(filter !== null && filter !== void 0 && filter.length)) {
    return orgChildren;
  }
  return orgChildren.filter(child => {
    return (0, _index.isPathIncluded)(filter, `${node.path}/${child.id}`);
  });
};
const OrganisationUnitNodeChildren = _ref2 => {
  let {
    node,
    autoExpandLoadingError,
    dataTest,
    disableSelection,
    expanded,
    filter,
    highlighted,
    isUserDataViewFallback,
    onChange,
    onChildrenLoaded,
    onCollapse,
    onExpand,
    parentPath,
    renderNodeLabel,
    rootId,
    selected,
    singleSelection,
    suppressAlphabeticalSorting,
    OrganisationUnitNode
  } = _ref2;
  const orgChildren = (0, _useOrgChildren.useOrgChildren)({
    node,
    isUserDataViewFallback,
    suppressAlphabeticalSorting,
    onComplete: onChildrenLoaded
  });
  const displayChildren = orgChildren.called && !orgChildren.loading && !orgChildren.error;
  const filteredChildren = displayChildren ? getFilteredChildren({
    orgChildren: orgChildren.data,
    filter,
    node
  }) : [];
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, orgChildren.loading && /*#__PURE__*/_react.default.createElement(_loadingSpinner.LoadingSpinner, null), orgChildren.error && `Error: ${orgChildren.error}`, displayChildren && !filteredChildren.length && _index2.default.t('No children match filter'), !!filteredChildren.length && filteredChildren.map(child => {
    const childPath = `${parentPath}/${child.id}`;
    return /*#__PURE__*/_react.default.createElement(OrganisationUnitNode, {
      autoExpandLoadingError: autoExpandLoadingError,
      dataTest: dataTest,
      disableSelection: disableSelection,
      displayName: child.displayName,
      expanded: expanded,
      filter: filter,
      highlighted: highlighted,
      id: child.id,
      isUserDataViewFallback: isUserDataViewFallback,
      key: childPath,
      onChange: onChange,
      onChildrenLoaded: onChildrenLoaded,
      onCollapse: onCollapse,
      onExpand: onExpand,
      path: childPath,
      renderNodeLabel: renderNodeLabel,
      rootId: rootId,
      selected: selected,
      singleSelection: singleSelection,
      suppressAlphabeticalSorting: suppressAlphabeticalSorting
    });
  }));
};
exports.OrganisationUnitNodeChildren = OrganisationUnitNodeChildren;
OrganisationUnitNodeChildren.propTypes = {
  // Prevent cirular imports
  OrganisationUnitNode: _propTypes.default.func.isRequired,
  dataTest: _propTypes.default.string.isRequired,
  node: _propTypes.default.object.isRequired,
  parentPath: _propTypes.default.string.isRequired,
  renderNodeLabel: _propTypes.default.func.isRequired,
  rootId: _propTypes.default.string.isRequired,
  onChange: _propTypes.default.func.isRequired,
  autoExpandLoadingError: _propTypes.default.bool,
  disableSelection: _propTypes.default.bool,
  expanded: _propTypes.default.arrayOf(_propTypes2.orgUnitPathPropType),
  filter: _propTypes.default.arrayOf(_propTypes2.orgUnitPathPropType),
  highlighted: _propTypes.default.arrayOf(_propTypes2.orgUnitPathPropType),
  isUserDataViewFallback: _propTypes.default.bool,
  selected: _propTypes.default.arrayOf(_propTypes2.orgUnitPathPropType),
  singleSelection: _propTypes.default.bool,
  suppressAlphabeticalSorting: _propTypes.default.bool,
  onChildrenLoaded: _propTypes.default.func,
  onCollapse: _propTypes.default.func,
  onExpand: _propTypes.default.func
};