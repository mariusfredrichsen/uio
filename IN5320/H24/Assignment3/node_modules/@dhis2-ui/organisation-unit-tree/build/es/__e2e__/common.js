/* eslint-disable react/display-name */
import { CustomDataProvider } from '@dhis2/app-runtime';
import PropTypes from 'prop-types';
import React, { useState } from 'react';
import { getOrganisationUnitData } from './get-organisation-unit-data.js';
export { getOrganisationUnitData } from './get-organisation-unit-data.js';
export { namespace } from './namespace.js';
export const delayResponse = (delay, response) => () => new Promise(resolve => setTimeout(() => resolve(response), delay));
export const dataProviderData = {
  organisationUnits: (_, _ref) => {
    let {
      id,
      params = {}
    } = _ref;
    console.log('id, params', id, params);
    const data = getOrganisationUnitData(id, params);
    if (!data) {
      return Promise.reject(new Error('404 - Org unit not found'));
    }
    return Promise.resolve(data);
  }
};
export const StatefulMultiSelectionWrapper = _ref2 => {
  let {
    children,
    onSelectionChange = () => null
  } = _ref2;
  const [selected, setSelected] = useState([]);
  return children({
    selected,
    onChange: _ref3 => {
      let {
        selected: newSelected
      } = _ref3;
      setSelected(newSelected);
      onSelectionChange(newSelected);
    }
  });
};
StatefulMultiSelectionWrapper.propTypes = {
  children: PropTypes.func.isRequired,
  onSelectionChange: PropTypes.func
};
export const createDecoratorStatefulMultiSelection = args => {
  return Story => /*#__PURE__*/React.createElement(StatefulMultiSelectionWrapper, {
    onSelectionChange: args === null || args === void 0 ? void 0 : args.onSelectionChange
  }, _ref4 => {
    let {
      selected,
      onChange
    } = _ref4;
    return /*#__PURE__*/React.createElement(Story, {
      selected: selected,
      onChange: onChange
    });
  });
};
export const createDecoratorCustomDataProvider = args => {
  const data = (args === null || args === void 0 ? void 0 : args.data) || dataProviderData;
  return Story => {
    window.dataProviderData = data;
    return /*#__PURE__*/React.createElement(CustomDataProvider, {
      data: data
    }, /*#__PURE__*/React.createElement(Story, null));
  };
};