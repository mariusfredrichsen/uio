import { CustomDataProvider } from '@dhis2/app-runtime';
import React, { useState } from 'react';
import { OrganisationUnitTree } from '../index.js';
import { StatefulMultiSelectionWrapper, dataProviderData, delayResponse, namespace } from './common.js';
const afterReloadData = {
  organisationUnits: function () {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    const [, {
      id
    }] = args;
    if (id === 'A0000000000') {
      return delayResponse(1000, dataProviderData.organisationUnits(...args))();
    }
    if (id === 'A0000000001') {
      return delayResponse(2200, dataProviderData.organisationUnits(...args))();
    }
    return dataProviderData.organisationUnits(...args);
  }
};
const ForceReloading_ = () => {
  const [forceReload, setForceReload] = useState(false);
  return /*#__PURE__*/React.createElement(CustomDataProvider, {
    data: afterReloadData
  }, /*#__PURE__*/React.createElement("button", {
    disabled: forceReload,
    "data-test": "reload-all",
    onClick: () => setForceReload(true)
  }, "Force reload tree"), /*#__PURE__*/React.createElement(StatefulMultiSelectionWrapper, null, _ref => {
    let {
      selected,
      onChange
    } = _ref;
    return /*#__PURE__*/React.createElement(OrganisationUnitTree, {
      roots: "A0000000000",
      onChange: onChange,
      selected: selected,
      forceReload: forceReload,
      onChildrenLoaded: data => {
        if (data.A0000000000) {
          setForceReload(false);
        }
      }
    });
  }));
};
export default {
  title: namespace
};
export const ForceReloading = () => /*#__PURE__*/React.createElement(ForceReloading_, null);