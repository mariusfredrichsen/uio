import _JSXStyle from "styled-jsx/style";
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
import { spacers } from '@dhis2/ui-constants';
import PropTypes from 'prop-types';
import React, { Component } from 'react';
class Action extends Component {
  constructor() {
    super(...arguments);
    _defineProperty(this, "onClick", event => {
      this.props.onClick(event);
      this.props.hide(event);
    });
  }
  render() {
    return /*#__PURE__*/React.createElement("span", {
      onClick: this.onClick,
      "data-test": this.props.dataTest,
      className: _JSXStyle.dynamic([["918162538", [spacers.dp12]]])
    }, this.props.label, /*#__PURE__*/React.createElement(_JSXStyle, {
      id: "918162538",
      dynamic: [spacers.dp12]
    }, [`span.__jsx-style-dynamic-selector{margin-inline-end:${spacers.dp12};-webkit-text-decoration:underline;text-decoration:underline;white-space:nowrap;}`, "span.__jsx-style-dynamic-selector:hover{cursor:pointer;}"]));
  }
}
Action.propTypes = {
  dataTest: PropTypes.string.isRequired,
  hide: PropTypes.func.isRequired,
  label: PropTypes.string.isRequired,
  onClick: PropTypes.func.isRequired
};
export { Action };