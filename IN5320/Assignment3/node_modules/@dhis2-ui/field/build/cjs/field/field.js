"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Field = void 0;
var _uiConstants = require("@dhis2/ui-constants");
var _box = require("@dhis2-ui/box");
var _help = require("@dhis2-ui/help");
var _label = require("@dhis2-ui/label");
var _propTypes = _interopRequireDefault(require("prop-types"));
var _react = _interopRequireDefault(require("react"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
const Field = _ref => {
  let {
    children,
    disabled,
    className,
    helpText,
    label,
    name,
    validationText,
    required,
    dataTest = 'dhis2-uicore-field',
    valid,
    error,
    warning
  } = _ref;
  return /*#__PURE__*/_react.default.createElement(_box.Box, {
    className: className,
    dataTest: dataTest
  }, label && /*#__PURE__*/_react.default.createElement(_label.Label, {
    dataTest: `${dataTest}-label`,
    required: required,
    disabled: disabled,
    htmlFor: name
  }, label), /*#__PURE__*/_react.default.createElement(_box.Box, {
    dataTest: `${dataTest}-content`,
    marginTop: label ? '2px' : '0'
  }, children), helpText && /*#__PURE__*/_react.default.createElement(_help.Help, {
    dataTest: `${dataTest}-help`
  }, helpText), validationText && /*#__PURE__*/_react.default.createElement(_help.Help, {
    error: error,
    warning: warning,
    valid: valid,
    dataTest: `${dataTest}-validation`
  }, validationText));
};
exports.Field = Field;
Field.propTypes = {
  children: _propTypes.default.node,
  className: _propTypes.default.string,
  dataTest: _propTypes.default.string,
  /** Disabled status, shown when mouse is over label */
  disabled: _propTypes.default.bool,
  /** Field status. Mutually exclusive with `valid` and `warning` props */
  error: _uiConstants.sharedPropTypes.statusPropType,
  /** Useful text within the field */
  helpText: _propTypes.default.string,
  /** Label at the top of the field */
  label: _propTypes.default.string,
  /** `name` will become the target of the `for`/`htmlFor` attribute on the `<label>` element */
  name: _propTypes.default.string,
  /** Inidcates this field is required */
  required: _propTypes.default.bool,
  /** Field status. Mutually exclusive with `error` and `warning` props */
  valid: _uiConstants.sharedPropTypes.statusPropType,
  /** Feedback given related to validation status of field */
  validationText: _propTypes.default.string,
  /** Field status. Mutually exclusive with `valid` and `error` props */
  warning: _uiConstants.sharedPropTypes.statusPropType
};