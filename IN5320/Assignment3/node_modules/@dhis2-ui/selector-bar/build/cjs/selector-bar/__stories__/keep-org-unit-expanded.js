"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.KeepOrgUnitExpanded = void 0;
var _organisationUnitTree = require("@dhis2-ui/organisation-unit-tree");
var _react = _interopRequireWildcard(require("react"));
var _index = require("../../index.js");
var _common = require("./common.js");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
const KeepOrgUnitExpanded = (_, _ref) => {
  let {
    orgUnit,
    setOrgUnit,
    orgUnitOpen,
    setOrgUnitOpen
  } = _ref;
  const [expanded, setExpanded] = (0, _react.useState)([]);
  const handleExpand = _ref2 => {
    let {
      path
    } = _ref2;
    return setExpanded([...expanded, path]);
  };
  const handleCollapse = _ref3 => {
    let {
      path
    } = _ref3;
    return setExpanded(expanded.filter(p => p !== path));
  };
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_index.SelectorBar, {
    disableClearSelections: !orgUnit,
    onClearSelectionClick: () => setOrgUnit(null)
  }, /*#__PURE__*/_react.default.createElement(_index.SelectorBarItem, {
    label: "Org unit",
    value: orgUnit === null || orgUnit === void 0 ? void 0 : orgUnit.displayName,
    noValueMessage: "Choose an organisation unit",
    open: orgUnitOpen,
    setOpen: setOrgUnitOpen,
    onClearSelectionClick: () => {
      setOrgUnit(null);
    }
  }, /*#__PURE__*/_react.default.createElement("div", {
    style: {
      width: 400,
      minHeight: 400,
      maxHeight: '70vh'
    }
  }, /*#__PURE__*/_react.default.createElement(_organisationUnitTree.OrganisationUnitTree, {
    singleSelection: true,
    roots: ['A0000000000'],
    selected: orgUnit ? [orgUnit.path] : [],
    onChange: (nextOrgUnit, evt) => {
      evt.stopPropagation();
      setOrgUnit(nextOrgUnit);
      setOrgUnitOpen(false);
    },
    expanded: expanded,
    handleExpand: handleExpand,
    handleCollapse: handleCollapse
  })))), /*#__PURE__*/_react.default.createElement("p", {
    style: {
      padding: '0 16px'
    }
  }, "This story illustrates how to keep states between mount/unmount cycles of the component rendered inside the selector bar icon"));
};
exports.KeepOrgUnitExpanded = KeepOrgUnitExpanded;
KeepOrgUnitExpanded.decorators = [_common.decoratorCommonStyles, (0, _common.createStatefulDecorator)(), (0, _common.createDecoratorCustomDataProvider)()];