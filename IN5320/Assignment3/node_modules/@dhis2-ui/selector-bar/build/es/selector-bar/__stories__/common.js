import _JSXStyle from "styled-jsx/style";
import { CustomDataProvider } from '@dhis2/app-runtime';
import { colors } from '@dhis2/ui-constants';
import { Menu, MenuItem } from '@dhis2-ui/menu';
import { OrganisationUnitTree } from '@dhis2-ui/organisation-unit-tree';
import React, { useState } from 'react';
export const decoratorCommonStyles = fn => /*#__PURE__*/React.createElement(React.Fragment, null, fn(), /*#__PURE__*/React.createElement(_JSXStyle, {
  id: "3746816729",
  dynamic: [colors.grey100]
}, [`body{background:${colors.grey100};padding:0 !important;}`, "div#root{padding:0;}"]));
export const getOrganisationUnitData = id => {
  let data;
  if (id === 'A0000000000') {
    data = {
      id: 'A0000000000',
      path: '/A0000000000',
      displayName: 'Org Unit 1',
      children: [{
        id: 'A0000000001',
        path: '/A0000000000/A0000000001',
        children: [{
          id: 'A0000000003'
        }, {
          id: 'A0000000004'
        }],
        displayName: 'Org Unit 2'
      }, {
        id: 'A0000000002',
        path: '/A0000000000/A0000000002',
        children: [],
        displayName: 'Org Unit 3'
      }, {
        id: 'A0000000006',
        path: '/A0000000000/A0000000006',
        children: [],
        displayName: 'Org Unit 7'
      }]
    };
  }
  if (id === 'A0000000001') {
    data = {
      id: 'A0000000001',
      path: '/A0000000000/A0000000001',
      displayName: 'Org Unit 2',
      children: [{
        id: 'A0000000003',
        path: '/A0000000000/A0000000001/A0000000003',
        children: [],
        displayName: 'Org Unit 4'
      }, {
        id: 'A0000000004',
        path: '/A0000000000/A0000000001/A0000000004',
        children: [],
        displayName: 'Org Unit 5'
      }]
    };
  }
  if (id === 'A0000000002') {
    data = {
      displayName: 'Org Unit 3',
      id: 'A0000000002',
      path: '/A0000000000/A0000000002',
      children: []
    };
  }
  if (id === 'A0000000003') {
    data = {
      displayName: 'Org Unit 4',
      id: 'A0000000003',
      path: '/A0000000000/A0000000001/A0000000003',
      children: [{
        id: 'A0000000007',
        path: '/A0000000000/A0000000001/A0000000003/A0000000007',
        children: [],
        displayName: 'Org Unit 8'
      }]
    };
  }
  if (id === 'A0000000004') {
    data = {
      displayName: 'Org Unit 5',
      id: 'A0000000004',
      path: '/A0000000000/A0000000001/A0000000004',
      children: []
    };
  }
  if (id === 'A0000000006') {
    data = {
      displayName: 'Org Unit 7',
      id: 'A0000000006',
      path: '/A0000000000/A0000000006',
      children: []
    };
  }
  if (id === 'A0000000007') {
    data = {
      displayName: 'Org Unit 8',
      id: 'A0000000007',
      path: '/A0000000000/A0000000001/A0000000003/A0000000007',
      children: []
    };
  }
  return data;
};
export const dataProviderData = {
  organisationUnits: (_, _ref) => {
    let {
      id
    } = _ref;
    const data = getOrganisationUnitData(id);
    if (!data) {
      return Promise.reject(new Error('404 - Org unit not found'));
    }
    return Promise.resolve(data);
  }
};
export const createDecoratorCustomDataProvider = args => {
  const data = (args === null || args === void 0 ? void 0 : args.data) || dataProviderData;
  return Story => {
    window.dataProviderData = data;
    return /*#__PURE__*/React.createElement(CustomDataProvider, {
      data: data
    }, /*#__PURE__*/React.createElement(Story, null));
  };
};
export const createStatefulDecorator = args => {
  return fn => {
    const [workflow, setWorkflow] = useState((args === null || args === void 0 ? void 0 : args.workflow) || null);
    const [workflowOpen, setWorkflowOpen] = useState((args === null || args === void 0 ? void 0 : args.workflowOpen) || false);
    const [dataSet, setDataSet] = useState((args === null || args === void 0 ? void 0 : args.dataSet) || null);
    const [dataSetOpen, setDataSetOpen] = useState((args === null || args === void 0 ? void 0 : args.dataSetOpen) || false);
    const [orgUnit, setOrgUnit] = useState((args === null || args === void 0 ? void 0 : args.orgUnit) || null);
    const [orgUnitOpen, setOrgUnitOpen] = useState((args === null || args === void 0 ? void 0 : args.orgUnitOpen) || false);
    return /*#__PURE__*/React.createElement(React.Fragment, null, fn({
      workflow,
      setWorkflow,
      workflowOpen,
      setWorkflowOpen,
      dataSet,
      setDataSet,
      dataSetOpen,
      setDataSetOpen,
      orgUnit,
      setOrgUnit,
      orgUnitOpen,
      setOrgUnitOpen
    }));
  };
};
export const workflows = [{
  value: 'm<4y',
  label: 'Mortality < 4 years'
}, {
  value: 'm<5y',
  label: 'Mortality < 5 years'
}];
export const dataSets = [{
  value: 'data-set-1',
  label: 'Data set 1'
}, {
  value: 'data-set-2',
  label: 'Data set 2'
}, {
  value: 'data-set-3',
  label: 'Data set 3'
}];
export const MenuSelect = _ref2 => {
  let {
    values,
    selected,
    onChange
  } = _ref2;
  return /*#__PURE__*/React.createElement("div", {
    style: {
      width: 400
    }
  }, /*#__PURE__*/React.createElement(Menu, null, values.map(_ref3 => {
    let {
      value,
      label
    } = _ref3;
    return /*#__PURE__*/React.createElement(MenuItem, {
      key: value,
      label: label,
      active: selected === value,
      onClick: () => onChange({
        selected: value
      })
    });
  })));
};
export const OrgUnitSelect = _ref4 => {
  let {
    onChange,
    selected
  } = _ref4;
  return /*#__PURE__*/React.createElement("div", {
    style: {
      width: 400,
      minHeight: 400,
      maxHeight: '70vh'
    }
  }, /*#__PURE__*/React.createElement(OrganisationUnitTree, {
    singleSelection: true,
    onChange: onChange,
    roots: ['A0000000000'],
    selected: selected
  }));
};