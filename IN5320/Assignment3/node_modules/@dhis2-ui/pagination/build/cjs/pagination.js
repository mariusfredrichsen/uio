"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Pagination = void 0;
var _style = _interopRequireDefault(require("styled-jsx/style"));
var _propTypes = require("@dhis2/prop-types");
var _uiConstants = require("@dhis2/ui-constants");
var _classnames = _interopRequireDefault(require("classnames"));
var _propTypes2 = _interopRequireDefault(require("prop-types"));
var _react = _interopRequireDefault(require("react"));
var _getDefaultPageSummaryText = require("./get-default-page-summary-text.js");
var _getItemRange = require("./get-item-range.js");
var _index = _interopRequireDefault(require("./locales/index.js"));
var _pageControls = require("./page-controls.js");
var _pageSelect = require("./page-select.js");
var _pageSizeSelect = require("./page-size-select.js");
var _pageSummary = require("./page-summary.js");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
const MAX_PAGE_COUNT = 2000;
const defaultProps = {
  dataTest: 'dhis2-uiwidgets-pagination',
  nextPageText: () => _index.default.t('Next'),
  pageSelectText: () => _index.default.t('Page'),
  pageSizes: ['5', '10', '20', '30', '40', '50', '75', '100'],
  pageSizeSelectText: () => _index.default.t('Items per page'),
  pageSummaryText: _getDefaultPageSummaryText.getDefaultPageSummaryText,
  previousPageText: () => _index.default.t('Previous')
};
const Pagination = _ref => {
  let {
    className,
    dataTest = defaultProps.dataTest,
    disabled,
    hidePageSelect,
    hidePageSizeSelect,
    hidePageSummary,
    isLastPage,
    nextPageText = defaultProps.nextPageText,
    onPageChange,
    onPageSizeChange,
    page,
    pageCount,
    pageLength,
    pageSelectText = defaultProps.pageSelectText,
    pageSize,
    pageSizes = defaultProps.pageSizes,
    pageSizeSelectText = defaultProps.pageSizeSelectText,
    pageSummaryText = defaultProps.pageSummaryText,
    previousPageText = defaultProps.previousPageText,
    total
  } = _ref;
  const {
    firstItem,
    lastItem
  } = (0, _getItemRange.getItemRange)({
    isLastPage,
    page,
    pageLength,
    pageSize,
    total
  });
  const showPageSelect = !hidePageSelect && typeof pageCount === 'number' && pageCount > 1 && pageCount <= MAX_PAGE_COUNT;
  return /*#__PURE__*/_react.default.createElement("div", {
    "data-test": dataTest,
    className: _style.default.dynamic([["3796520840", [_uiConstants.spacers.dp4]]]) + " " + ((0, _classnames.default)('container', className) || "")
  }, hidePageSizeSelect ? /*#__PURE__*/_react.default.createElement("div", {
    className: _style.default.dynamic([["3796520840", [_uiConstants.spacers.dp4]]]) + " " + "spacer"
  }) : /*#__PURE__*/_react.default.createElement(_pageSizeSelect.PageSizeSelect, {
    dataTest: dataTest,
    disabled: disabled,
    pageSize: pageSize,
    pageSizes: pageSizes,
    onChange: onPageSizeChange,
    pageSizeSelectText: pageSizeSelectText
  }), !hidePageSummary && /*#__PURE__*/_react.default.createElement(_pageSummary.PageSummary, {
    dataTest: dataTest,
    inactive: disabled,
    firstItem: firstItem,
    lastItem: lastItem,
    page: page,
    pageCount: pageCount,
    pageSummaryText: pageSummaryText,
    total: total
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: _style.default.dynamic([["3796520840", [_uiConstants.spacers.dp4]]]) + " " + "page-navigation"
  }, showPageSelect && /*#__PURE__*/_react.default.createElement(_pageSelect.PageSelect, {
    dataTest: dataTest,
    disabled: disabled,
    pageSelectText: pageSelectText,
    page: page,
    pageCount: pageCount,
    onChange: onPageChange
  }), /*#__PURE__*/_react.default.createElement(_pageControls.PageControls, {
    dataTest: dataTest,
    nextPageText: nextPageText,
    page: page,
    previousPageText: previousPageText,
    onClick: onPageChange,
    isNextDisabled: disabled || isLastPage || page === pageCount,
    isPreviousDisabled: disabled || page === 1
  })), /*#__PURE__*/_react.default.createElement(_style.default, {
    id: "3796520840",
    dynamic: [_uiConstants.spacers.dp4]
  }, [`.container.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;row-gap:${_uiConstants.spacers.dp4};}`, ".spacer.__jsx-style-dynamic-selector{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}", ".page-navigation.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;min-height:32px;}"]));
};
exports.Pagination = Pagination;
Pagination.propTypes = {
  page: _propTypes2.default.number.isRequired,
  pageSize: _propTypes2.default.number.isRequired,
  className: _propTypes2.default.string,
  dataTest: _propTypes2.default.string,
  disabled: _propTypes2.default.bool,
  hidePageSelect: _propTypes2.default.bool,
  hidePageSizeSelect: _propTypes2.default.bool,
  hidePageSummary: _propTypes2.default.bool,
  isLastPage: _propTypes2.default.bool,
  nextPageText: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
  pageCount: _propTypes2.default.number,
  pageLength: (0, _propTypes.requiredIf)(props => props.isLastPage, _propTypes2.default.number),
  pageSelectText: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
  pageSizeSelectText: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
  pageSizes: _propTypes2.default.arrayOf(_propTypes2.default.string),
  pageSummaryText: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
  previousPageText: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
  total: _propTypes2.default.number,
  onPageChange: _propTypes2.default.func,
  onPageSizeChange: _propTypes2.default.func
};