import { useAlert } from '@dhis2/app-runtime';
import { Button, ButtonStrip } from '@dhis2-ui/button';
import { Modal, ModalActions, ModalContent, ModalTitle } from '@dhis2-ui/modal';
import PropTypes from 'prop-types';
import React from 'react';
import i18n from '../locales/index.js';
import { DebugInfoTable } from './debug-info-table.js';
import { useFormattedDebugInfo } from './use-debug-info.js';
export function DebugInfoModal(_ref) {
  let {
    onClose
  } = _ref;
  const debugInfo = useFormattedDebugInfo();
  const {
    show: showClipboardAlert
  } = useAlert('Debug information copied to clipboard', {
    duration: 3000
  });
  const copyDebugInfo = () => {
    navigator.clipboard.writeText(debugInfo);
    onClose();
    showClipboardAlert();
  };
  return /*#__PURE__*/React.createElement(Modal, {
    position: "middle",
    dataTest: "dhis2-ui-headerbar-debuginfomodal"
  }, /*#__PURE__*/React.createElement(ModalTitle, null, i18n.t('Debug info')), /*#__PURE__*/React.createElement(ModalContent, null, /*#__PURE__*/React.createElement(DebugInfoTable, null)), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(ButtonStrip, {
    end: true
  }, /*#__PURE__*/React.createElement(Button, {
    onClick: () => onClose()
  }, i18n.t('Close')), /*#__PURE__*/React.createElement(Button, {
    primary: true,
    onClick: copyDebugInfo,
    dataTest: "dhis2-ui-headerbar-debuginfomodal-copybutton"
  }, i18n.t('Copy debug info')))));
}
DebugInfoModal.propTypes = {
  onClose: PropTypes.func.isRequired
};