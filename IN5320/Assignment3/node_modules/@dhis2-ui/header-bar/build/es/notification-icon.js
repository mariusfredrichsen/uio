import _JSXStyle from "styled-jsx/style";
import { colors, theme, spacers } from '@dhis2/ui-constants';
import { IconMessages24, IconMail24 } from '@dhis2/ui-icons';
import PropTypes from 'prop-types';
import React from 'react';
import i18n from './locales/index.js';
function icon(kind) {
  if (kind === 'message') {
    return /*#__PURE__*/React.createElement(IconMessages24, {
      color: colors.white
    });
  } else {
    return /*#__PURE__*/React.createElement(IconMail24, {
      color: colors.white
    });
  }
}
export const NotificationIcon = _ref => {
  let {
    count = 0,
    href,
    kind,
    dataTestId,
    title,
    'aria-label': ariaLabel
  } = _ref;
  return /*#__PURE__*/React.createElement("a", {
    dir: "ltr",
    href: href,
    "data-test": dataTestId,
    title: i18n.t(title),
    "aria-label": i18n.t(ariaLabel),
    className: _JSXStyle.dynamic([["995028205", [spacers.dp12, spacers.dp12, theme.secondary500, colors.white, spacers.dp4]]]) + " " + (kind || "")
  }, icon(kind), count > 0 && /*#__PURE__*/React.createElement("span", {
    "data-test": `${dataTestId}-count`,
    className: _JSXStyle.dynamic([["995028205", [spacers.dp12, spacers.dp12, theme.secondary500, colors.white, spacers.dp4]]])
  }, count), /*#__PURE__*/React.createElement(_JSXStyle, {
    id: "995028205",
    dynamic: [spacers.dp12, spacers.dp12, theme.secondary500, colors.white, spacers.dp4]
  }, [`a.__jsx-style-dynamic-selector{position:relative;margin:0;cursor:pointer;padding:0 ${spacers.dp12};height:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}`, "a.__jsx-style-dynamic-selector:focus{outline:2px solid white;outline-offset:-2px;}", "a.__jsx-style-dynamic-selector:focus.__jsx-style-dynamic-selector:not(:focus-visible){outline:none;}", "a.__jsx-style-dynamic-selector:hover{background:#1a557f;}", "a.__jsx-style-dynamic-selector:active{background:#104067;}", `span.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;z-index:1;position:absolute;top:3px;inset-inline-end:2px;min-width:18px;min-height:18px;border-radius:${spacers.dp12};box-shadow:0 1px 3px 0 rgba(0,0,0,0.1), 0 1px 2px 0 rgba(0,0,0,0.06);background-color:${theme.secondary500};color:${colors.white};font-size:13px;font-weight:600;line-height:15px;text-align:center;cursor:inherit;padding:0 ${spacers.dp4};}`]));
};
NotificationIcon.propTypes = {
  'aria-label': PropTypes.string.isRequired,
  href: PropTypes.string.isRequired,
  title: PropTypes.string.isRequired,
  count: PropTypes.number,
  dataTestId: PropTypes.string,
  kind: PropTypes.oneOf(['interpretation', 'message'])
};