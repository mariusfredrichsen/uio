"use strict";

var _react = require("@testing-library/react");
var _enzyme = require("enzyme");
var _react2 = _interopRequireDefault(require("react"));
var _input = require("../input.js");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
describe('<Input>', () => {
  it('passes min, max, and step props as attributes to the native <input> element', () => {
    const testProps = {
      min: '0',
      max: '10',
      step: '0.5'
    };
    const wrapper = (0, _enzyme.shallow)( /*#__PURE__*/_react2.default.createElement(_input.Input, _extends({
      type: "number"
    }, testProps)));
    const inputEl = wrapper.find('input');
    expect(inputEl.props()).toMatchObject(testProps);
  });
  it('should call the onKeyDown callback when provided', () => {
    const onKeyDown = jest.fn();
    (0, _react.render)( /*#__PURE__*/_react2.default.createElement(_input.Input, {
      name: "foo",
      value: "bar",
      onKeyDown: onKeyDown
    }));
    _react.fireEvent.keyDown(_react.screen.getByRole('textbox'), {});
    expect(onKeyDown).toHaveBeenCalledWith({
      name: 'foo',
      value: 'bar'
    }, expect.objectContaining({}));
    expect(onKeyDown).toHaveBeenCalledTimes(1);
  });
});