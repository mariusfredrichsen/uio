"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.UppercaseSearch = exports.SomeResults = exports.LowercaseSearch = exports.EmptyResult = exports.ControlledFilter = exports.AncCustomFilter = void 0;
var _react = _interopRequireDefault(require("react"));
var _transfer = require("../transfer.js");
var _options = require("./common/options.js");
var _statefulDecorator = require("./common/stateful-decorator.js");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
var _default = exports.default = {
  title: 'Transfer filtering',
  decorators: [(0, _statefulDecorator.statefulDecorator)()]
};
const EmptyResult = (_, _ref) => {
  let {
    selected,
    onChange
  } = _ref;
  return /*#__PURE__*/_react.default.createElement(_transfer.Transfer, {
    filterable: true,
    initialSearchTerm: "Foobarbaz",
    selected: selected,
    onChange: onChange,
    sourceEmptyPlaceholder: /*#__PURE__*/_react.default.createElement("span", {
      "data-test": "no-results"
    }, "No results"),
    options: _options.options
  });
};
exports.EmptyResult = EmptyResult;
const SomeResults = (_, _ref2) => {
  let {
    selected,
    onChange
  } = _ref2;
  return /*#__PURE__*/_react.default.createElement(_transfer.Transfer, {
    selected: selected,
    filterable: true,
    initialSearchTerm: "ANC",
    onChange: onChange,
    options: _options.options
  });
};
exports.SomeResults = SomeResults;
const UppercaseSearch = (_, _ref3) => {
  let {
    selected,
    onChange
  } = _ref3;
  return /*#__PURE__*/_react.default.createElement(_transfer.Transfer, {
    selected: selected,
    filterable: true,
    initialSearchTerm: "ANC",
    onChange: onChange,
    options: _options.options
  });
};
exports.UppercaseSearch = UppercaseSearch;
const LowercaseSearch = (_, _ref4) => {
  let {
    selected,
    onChange
  } = _ref4;
  return /*#__PURE__*/_react.default.createElement(_transfer.Transfer, {
    filterable: true,
    initialSearchTerm: "anc",
    selected: selected,
    onChange: onChange,
    options: _options.options
  });
};
exports.LowercaseSearch = LowercaseSearch;
const AncCustomFilter = (_, _ref5) => {
  let {
    selected,
    onChange
  } = _ref5;
  return /*#__PURE__*/_react.default.createElement(_transfer.Transfer, {
    filterable: true,
    selected: selected,
    onChange: onChange,
    filterCallback: (options, filter) => options.filter(_ref6 => {
      let {
        label
      } = _ref6;
      return label.match(`(^| )ANC .*${filter}`);
    }),
    options: _options.options
  });
};
exports.AncCustomFilter = AncCustomFilter;
window.customFilterCallback = (options, filter) => {
  return options.filter(_ref7 => {
    let {
      label
    } = _ref7;
    return label.indexOf(filter) !== -1;
  });
};
window.Cypress && window.Cypress.cy.spy(window, 'customFilterCallback');
const ControlledFilter = (_, _ref8) => {
  let {
    filter,
    onChange,
    onFilterChange,
    selected
  } = _ref8;
  return /*#__PURE__*/_react.default.createElement(_transfer.Transfer, {
    selected: selected,
    onChange: onChange,
    filterable: true,
    filterCallback: window.customFilterCallback,
    searchTerm: filter,
    onFilterChange: onFilterChange,
    options: _options.options
  });
};
exports.ControlledFilter = ControlledFilter;
ControlledFilter.story = {
  decorators: [(0, _statefulDecorator.statefulDecorator)()]
};