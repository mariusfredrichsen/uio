"use strict";

var _createToggleHighlightedOption = require("../../transfer/use-highlighted-options/create-toggle-highlighted-option.js");
var _useHighlightedOptions = require("../../transfer/use-highlighted-options.js");
jest.mock('../../transfer/use-highlighted-options/create-toggle-highlighted-option.js', () => ({
  createToggleHighlightedOption: jest.fn()
}));
jest.mock('react', () => ({
  useState: jest.fn(initialValue => [initialValue, jest.fn()])
}));
describe('Transfer - useHighlightedOptions', () => {
  it('should use null as the default value of lastClicked', () => {
    (0, _useHighlightedOptions.useHighlightedOptions)({});
    expect(_createToggleHighlightedOption.createToggleHighlightedOption).toHaveBeenCalledWith(expect.objectContaining({
      lastClicked: null
    }));
  });
  it('should use an empty array as default value of highlightedOptions', () => {
    const {
      highlightedOptions
    } = (0, _useHighlightedOptions.useHighlightedOptions)({});
    expect(highlightedOptions).toEqual([]);
  });
  it('should use the createToggleHighlightedOption factory to create the toggleHighlightedOption function', () => {
    const createToggleHighlightedOptionReturnValue = jest.fn();
    _createToggleHighlightedOption.createToggleHighlightedOption.mockImplementationOnce(() => createToggleHighlightedOptionReturnValue);
    const {
      toggleHighlightedOption
    } = (0, _useHighlightedOptions.useHighlightedOptions)({});
    expect(toggleHighlightedOption).toBe(createToggleHighlightedOptionReturnValue);
  });
});