"use strict";

var _cypressCucumberPreprocessor = require("@badeball/cypress-cucumber-preprocessor");
(0, _cypressCucumberPreprocessor.Given)('the source list is loading', () => {
  cy.visitStory('Transfer Loading Lists', 'Loading Source');
  cy.wrap('source').as('listType');
});
(0, _cypressCucumberPreprocessor.Given)('the picked list is loading', () => {
  cy.visitStory('Transfer Loading Lists', 'Loading Picked');
  cy.wrap('picked').as('listType');
});
(0, _cypressCucumberPreprocessor.Given)('the source list is not loading', () => {
  cy.visitStory('Transfer Loading Lists', 'Not Loading Source');
  cy.wrap('source').as('listType');
});
(0, _cypressCucumberPreprocessor.Given)('the picked list is not loading', () => {
  cy.visitStory('Transfer Loading Lists', 'Not Loading Picked');
  cy.wrap('picked').as('listType');
});
(0, _cypressCucumberPreprocessor.Then)('the loading indicator should be shown', () => {
  cy.get('@listType').then(listType => {
    const listSelector = listType === 'source' ? '{transfer-leftside}' : '{transfer-rightside}';
    cy.get(`${listSelector} .loading`).should('exist');
  });
});
(0, _cypressCucumberPreprocessor.Then)('the loading indicator should not be shown', () => {
  cy.get('@listType').then(listType => {
    const listSelector = listType === 'source' ? '{transfer-leftside}' : '{transfer-rightside}';
    cy.get(`${listSelector} .loading`).should('not.exist');
  });
});