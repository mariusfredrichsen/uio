"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Switch = void 0;
var _style = _interopRequireDefault(require("styled-jsx/style"));
var _uiConstants = require("@dhis2/ui-constants");
var _classnames = _interopRequireDefault(require("classnames"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _react = _interopRequireWildcard(require("react"));
var _switchIcons = require("./switch-icons.js");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
class Switch extends _react.Component {
  constructor() {
    super(...arguments);
    _defineProperty(this, "ref", /*#__PURE__*/(0, _react.createRef)());
    _defineProperty(this, "handleChange", e => {
      if (this.props.onChange) {
        this.props.onChange(this.createHandlerPayload(), e);
      }
    });
    _defineProperty(this, "handleBlur", e => {
      if (this.props.onBlur) {
        this.props.onBlur(this.createHandlerPayload(), e);
      }
    });
    _defineProperty(this, "handleFocus", e => {
      if (this.props.onFocus) {
        this.props.onFocus(this.createHandlerPayload(), e);
      }
    });
    _defineProperty(this, "handleKeyDown", e => {
      if (this.props.onKeyDown) {
        this.props.onKeyDown(this.createHandlerPayload(), e);
      }
    });
  }
  componentDidMount() {
    if (this.props.initialFocus) {
      this.ref.current.focus();
    }
  }
  createHandlerPayload() {
    return {
      value: this.props.value,
      name: this.props.name,
      checked: !this.props.checked
    };
  }
  render() {
    const {
      'aria-label': ariaLabel,
      checked = false,
      className,
      disabled,
      error,
      label,
      name,
      tabIndex,
      valid,
      value,
      warning,
      dense,
      dataTest = 'dhis2-uicore-switch',
      role = 'switch'
    } = this.props;
    const classes = (0, _classnames.default)({
      checked,
      disabled,
      valid,
      error,
      warning,
      dense
    });
    return /*#__PURE__*/_react.default.createElement("label", {
      "data-test": dataTest,
      className: _style.default.dynamic([["3097670863", [_uiConstants.colors.grey900, _uiConstants.theme.disabled, _uiConstants.theme.focus]]]) + " " + ((0, _classnames.default)(className, {
        disabled,
        dense
      }) || "")
    }, /*#__PURE__*/_react.default.createElement("input", {
      "aria-label": ariaLabel,
      type: "checkbox",
      role: role,
      ref: this.ref,
      name: name,
      value: value,
      checked: checked,
      disabled: disabled,
      tabIndex: tabIndex,
      onChange: this.handleChange,
      onFocus: this.handleFocus,
      onKeyDown: this.handleKeyDown,
      onBlur: this.handleBlur,
      className: _style.default.dynamic([["3097670863", [_uiConstants.colors.grey900, _uiConstants.theme.disabled, _uiConstants.theme.focus]]])
    }), /*#__PURE__*/_react.default.createElement("div", {
      className: _style.default.dynamic([["3097670863", [_uiConstants.colors.grey900, _uiConstants.theme.disabled, _uiConstants.theme.focus]]]) + " " + ((0, _classnames.default)('icon', {
        dense
      }) || "")
    }, /*#__PURE__*/_react.default.createElement(_switchIcons.SwitchRegular, {
      className: classes
    })), label, /*#__PURE__*/_react.default.createElement(_style.default, {
      id: "3097670863",
      dynamic: [_uiConstants.colors.grey900, _uiConstants.theme.disabled, _uiConstants.theme.focus]
    }, [`label.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;color:${_uiConstants.colors.grey900};font-size:14px;line-height:19px;}`, "label.dense.__jsx-style-dynamic-selector{font-size:14px;line-height:16px;}", `label.disabled.__jsx-style-dynamic-selector{cursor:not-allowed;color:${_uiConstants.theme.disabled};}`, "input.__jsx-style-dynamic-selector{opacity:0;position:absolute;height:18px;width:35px;margin-left:3px;}", "label.dense.__jsx-style-dynamic-selector input.__jsx-style-dynamic-selector{height:14px;width:27px;}", ".icon.__jsx-style-dynamic-selector{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;margin-right:5px;border:2px solid transparent;padding:1px;border-radius:14px;}", "label.dense.__jsx-style-dynamic-selector .icon.__jsx-style-dynamic-selector{margin-right:3px;border-radius:12px;}", `input.__jsx-style-dynamic-selector:focus+.icon.__jsx-style-dynamic-selector{outline:3px solid ${_uiConstants.theme.focus};outline-offset:-3px;}`]));
  }
}
exports.Switch = Switch;
_defineProperty(Switch, "defaultProps", {
  checked: false,
  dataTest: 'dhis2-uicore-switch',
  role: 'switch'
});
Switch.propTypes = {
  /** Sets an aria-label attribute on the input */
  'aria-label': _propTypes.default.string,
  checked: _propTypes.default.bool,
  className: _propTypes.default.string,
  dataTest: _propTypes.default.string,
  /** Makes the switch smaller for information-dense layouts */
  dense: _propTypes.default.bool,
  /** Disables the switch */
  disabled: _propTypes.default.bool,
  /** Applies 'error' styles for validation feedback. Mutually exclusive with `valid` and `warning` prop types */
  error: _uiConstants.sharedPropTypes.statusPropType,
  /** Grab initial focus on the page */
  initialFocus: _propTypes.default.bool,
  /** Label for the switch. Can be a string or an element, for example an image */
  label: _propTypes.default.node,
  /** Name associated with the switch. Passed to event handlers in object */
  name: _propTypes.default.string,
  /** Sets a role attribute on the input */
  role: _propTypes.default.string,
  tabIndex: _propTypes.default.string,
  /** Applies 'valid' styles for validation feedback. Mutually exclusive with `error` and `warning` prop types */
  valid: _uiConstants.sharedPropTypes.statusPropType,
  /** Value associated with the switch. Passed to event handlers in object */
  value: _propTypes.default.string,
  /** Applies 'warning' styles for validation feedback. Mutually exclusive with `valid` and `error` prop types */
  warning: _uiConstants.sharedPropTypes.statusPropType,
  /** Called with signature `({ name: string, value: string, checked: bool }, event)` */
  onBlur: _propTypes.default.func,
  /** Called with signature `({ name: string, value: string, checked: bool }, event)` */
  onChange: _propTypes.default.func,
  /** Called with signature `({ name: string, value: string, checked: bool }, event)` */
  onFocus: _propTypes.default.func,
  /** Called with signature `({ name: string, value: string, checked: bool }, event)` */
  onKeyDown: _propTypes.default.func
};