"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StackedTable = void 0;
var _propTypes = _interopRequireDefault(require("prop-types"));
var _react = _interopRequireDefault(require("react"));
var _extractHeaderLabels = require("./extract-header-labels.js");
var _tableContext = require("./table-context.js");
var _table = require("./table.js");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
const StackedTable = _ref => {
  let {
    children,
    className,
    dataTest = 'dhis2-uicore-stackedtable',
    headerLabels
  } = _ref;
  const contextHeaderLabels = (0, _extractHeaderLabels.extractHeaderLabels)(children);
  const context = {
    headerLabels: headerLabels || contextHeaderLabels
  };
  return /*#__PURE__*/_react.default.createElement(_tableContext.Provider, {
    value: context
  }, /*#__PURE__*/_react.default.createElement(_table.Table, {
    className: className,
    dataTest: dataTest
  }, children));
};
exports.StackedTable = StackedTable;
StackedTable.propTypes = {
  children: _propTypes.default.node,
  className: _propTypes.default.string,
  dataTest: _propTypes.default.string,
  /** Labels for columns. Use an empty string for a column without a header. */
  headerLabels: _propTypes.default.arrayOf(_propTypes.default.string)
};