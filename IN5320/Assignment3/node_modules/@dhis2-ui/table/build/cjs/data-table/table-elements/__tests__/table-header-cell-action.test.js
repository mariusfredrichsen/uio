"use strict";

var _enzyme = require("enzyme");
var _react = _interopRequireDefault(require("react"));
var _tableHeaderCellAction = require("../table-header-cell-action.js");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
describe('<TableHeaderCellAction>', () => {
  it('renders children', () => {
    const children = 'children';
    const wrapper = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_tableHeaderCellAction.TableHeaderCellAction, null, children));
    expect(wrapper.containsMatchingElement(children)).toBe(true);
  });
  it('accepts a ref', () => {
    const ref = /*#__PURE__*/_react.default.createRef();
    const wrapper = (0, _enzyme.mount)( /*#__PURE__*/_react.default.createElement(_tableHeaderCellAction.TableHeaderCellAction, {
      ref: ref
    }));
    expect(wrapper.find('button').getDOMNode()).toBe(ref.current);
  });
  it('accepts a className prop', () => {
    const className = 'test';
    const wrapper = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_tableHeaderCellAction.TableHeaderCellAction, {
      className: className
    }));
    expect(wrapper.find('button').hasClass(className)).toBe(true);
  });
  it('accepts a dataTest prop', () => {
    const dataTest = 'test';
    const wrapper = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_tableHeaderCellAction.TableHeaderCellAction, {
      dataTest: dataTest
    }));
    expect(wrapper.find('button').prop('data-test')).toBe(dataTest);
  });
  it('accepts a title prop', () => {
    const title = 'test';
    const wrapper = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_tableHeaderCellAction.TableHeaderCellAction, {
      title: title
    }));
    expect(wrapper.find('button').prop('title')).toBe(title);
  });
  it('accepts an onClick prop', () => {
    const onClick = jest.fn();
    const wrapper = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_tableHeaderCellAction.TableHeaderCellAction, {
      onClick: onClick
    }));
    wrapper.simulate('click');
    expect(onClick).toHaveBeenCalledTimes(1);
  });
});