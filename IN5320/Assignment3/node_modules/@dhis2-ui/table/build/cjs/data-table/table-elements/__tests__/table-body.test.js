"use strict";

var _enzyme = require("enzyme");
var _react = _interopRequireDefault(require("react"));
var _tableBody = require("../table-body.js");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
describe('<TableBody>', () => {
  it('renders children', () => {
    const children = 'children';
    const wrapper = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_tableBody.TableBody, null, children));
    expect(wrapper.containsMatchingElement(children)).toBe(true);
  });
  it('accepts a ref', () => {
    const ref = /*#__PURE__*/_react.default.createRef();
    const wrapper = (0, _enzyme.mount)( /*#__PURE__*/_react.default.createElement("table", null, /*#__PURE__*/_react.default.createElement(_tableBody.TableBody, {
      ref: ref
    })));
    expect(wrapper.find('tbody').getDOMNode()).toBe(ref.current);
  });
  it('accepts a className prop', () => {
    const className = 'test';
    const wrapper = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_tableBody.TableBody, {
      className: className
    }));
    expect(wrapper.find('tbody').hasClass(className)).toBe(true);
  });
  it('accepts a dataTest prop', () => {
    const dataTest = 'test';
    const wrapper = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_tableBody.TableBody, {
      dataTest: dataTest
    }));
    expect(wrapper.find('tbody').prop('data-test')).toBe(dataTest);
  });
  it('accepts a role prop', () => {
    const role = 'test';
    const wrapper = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_tableBody.TableBody, {
      role: role
    }));
    expect(wrapper.find('tbody').prop('role')).toBe(role);
  });
});