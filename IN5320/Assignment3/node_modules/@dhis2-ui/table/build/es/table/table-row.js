import _JSXStyle from "styled-jsx/style";
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
import cx from 'classnames';
import PropTypes from 'prop-types';
import React, { useContext } from 'react';
import { TableContext } from './table-context.js';
const tableRowStyles = [".zebraStriping.jsx-3124144591:nth-child(even){background:#fbfcfd;}"];
tableRowStyles.__hash = "3124144591";
export const TableRow = _ref => {
  let {
    role,
    children,
    className,
    dataTest = 'dhis2-uicore-tablerow',
    suppressZebraStriping,
    ...rest
  } = _ref;
  const {
    suppressZebraStriping: suppressZebraStripingFromContext
  } = useContext(TableContext);
  const zebraStriping = typeof suppressZebraStriping !== 'undefined' ? !suppressZebraStriping : !suppressZebraStripingFromContext;
  return /*#__PURE__*/React.createElement("tr", _extends({
    "data-test": dataTest,
    role: role
  }, rest, {
    className: `jsx-${tableRowStyles.__hash}` + " " + (rest && rest.className != null && rest.className || cx(className, {
      zebraStriping
    }) || "")
  }), children, /*#__PURE__*/React.createElement(_JSXStyle, {
    id: tableRowStyles.__hash
  }, tableRowStyles));
};
TableRow.propTypes = {
  /** Should be `<TableCell>` or `<TableCellHead>` components */
  children: PropTypes.node,
  className: PropTypes.string,
  dataTest: PropTypes.string,
  role: PropTypes.string,
  /** Disables the default row striping for this row */
  suppressZebraStriping: PropTypes.bool
};