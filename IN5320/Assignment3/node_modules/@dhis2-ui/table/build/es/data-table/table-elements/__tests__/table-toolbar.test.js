import { shallow, mount } from 'enzyme';
import React from 'react';
import { TableToolbar } from '../table-toolbar.js';
describe('<TableToolbar>', () => {
  it('renders children', () => {
    const children = 'children';
    const wrapper = shallow( /*#__PURE__*/React.createElement(TableToolbar, null, children));
    expect(wrapper.containsMatchingElement(children)).toBe(true);
  });
  it('accepts a ref', () => {
    const ref = /*#__PURE__*/React.createRef();
    const wrapper = mount( /*#__PURE__*/React.createElement(TableToolbar, {
      ref: ref
    }));
    expect(wrapper.find('div').getDOMNode()).toBe(ref.current);
  });
  it('accepts a className prop', () => {
    const className = 'test';
    const wrapper = shallow( /*#__PURE__*/React.createElement(TableToolbar, {
      className: className
    }));
    expect(wrapper.find('div').hasClass(className)).toBe(true);
  });
  it('accepts a dataTest prop', () => {
    const dataTest = 'test';
    const wrapper = shallow( /*#__PURE__*/React.createElement(TableToolbar, {
      dataTest: dataTest
    }));
    expect(wrapper.find('div').prop('data-test')).toBe(dataTest);
  });
  it('accepts a position prop', () => {
    const wrapperDefault = shallow( /*#__PURE__*/React.createElement(TableToolbar, null));
    const wrapperTop = shallow( /*#__PURE__*/React.createElement(TableToolbar, {
      position: "top"
    }));
    const wrapperBottom = shallow( /*#__PURE__*/React.createElement(TableToolbar, {
      position: "bottom"
    }));
    expect(wrapperDefault.find('div').hasClass('top')).toBe(true);
    expect(wrapperDefault.find('div').hasClass('bottom')).toBe(false);
    expect(wrapperTop.find('div').hasClass('top')).toBe(true);
    expect(wrapperTop.find('div').hasClass('bottom')).toBe(false);
    expect(wrapperBottom.find('div').hasClass('top')).toBe(false);
    expect(wrapperBottom.find('div').hasClass('bottom')).toBe(true);
  });
});