import { shallow, mount } from 'enzyme';
import React from 'react';
import { TableRow } from '../table-row.js';
describe('<TableRow>', () => {
  it('renders children', () => {
    const children = 'children';
    const wrapper = shallow( /*#__PURE__*/React.createElement(TableRow, null, children));
    expect(wrapper.containsMatchingElement(children)).toBe(true);
  });
  it('accepts a ref', () => {
    const ref = /*#__PURE__*/React.createRef();
    const wrapper = mount( /*#__PURE__*/React.createElement("table", null, /*#__PURE__*/React.createElement("thead", null, /*#__PURE__*/React.createElement(TableRow, {
      ref: ref
    }))));
    expect(wrapper.find('tr').getDOMNode()).toBe(ref.current);
  });
  it('accepts a className prop', () => {
    const className = 'test';
    const wrapper = shallow( /*#__PURE__*/React.createElement(TableRow, {
      className: className
    }));
    expect(wrapper.find('tr').hasClass(className)).toBe(true);
  });
  it('accepts a dataTest prop', () => {
    const dataTest = 'test';
    const wrapper = shallow( /*#__PURE__*/React.createElement(TableRow, {
      dataTest: dataTest
    }));
    expect(wrapper.find('tr').prop('data-test')).toBe(dataTest);
  });
  it('accepts a draggable prop', () => {
    const wrapper = shallow( /*#__PURE__*/React.createElement(TableRow, {
      draggable: true
    }));
    expect(wrapper.find('tr').hasClass('draggable')).toBe(true);
  });
  it('accepts a role prop', () => {
    const role = 'test';
    const wrapper = shallow( /*#__PURE__*/React.createElement(TableRow, {
      role: role
    }));
    expect(wrapper.find('tr').prop('role')).toBe(role);
  });
  it('accepts a selected prop', () => {
    const wrapper = shallow( /*#__PURE__*/React.createElement(TableRow, {
      selected: true
    }));
    expect(wrapper.find('tr').hasClass('selected')).toBe(true);
  });
});