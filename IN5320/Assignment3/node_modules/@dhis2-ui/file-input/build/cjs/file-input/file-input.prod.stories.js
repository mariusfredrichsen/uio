"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Statuses = exports.Sizes = exports.RTL = exports.Multiple = exports.Disabled = exports.Default = void 0;
var _uiConstants = require("@dhis2/ui-constants");
var _react = _interopRequireDefault(require("react"));
var _index = require("./index.js");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
const subtitle = `The file input component allows users to select and upload files from their local machine.`;
const description = `
Use a file input component in forms and interfaces wherever a user needs to be able to select and upload a file from their local machine.

\`\`\`js
import { FileInput } from '@dhis2/ui'
\`\`\`
`;
const onChange = (payload, event) => {
  console.log('onChange payload', payload);
  console.log('onChange event', event);

  // NOTE: if files is not transformed into an array,
  // cypress will get an empty file list!
  window.onChange && window.onChange({
    ...payload,
    files: [...payload.files]
  }, event);
};
const {
  sizeArgType,
  statusArgType
} = _uiConstants.sharedPropTypes;
var _default = exports.default = {
  title: 'File Input',
  component: _index.FileInput,
  // Default args for each story unless overridden
  args: {
    buttonLabel: 'Upload file',
    name: 'upload',
    onChange
  },
  argTypes: {
    valid: {
      ...statusArgType
    },
    warning: {
      ...statusArgType
    },
    error: {
      ...statusArgType
    },
    small: {
      ...sizeArgType
    },
    large: {
      ...sizeArgType
    }
  },
  parameters: {
    componentSubtitle: subtitle,
    docs: {
      description: {
        component: description
      }
    }
  }
};
const Template = args => /*#__PURE__*/_react.default.createElement(_index.FileInput, args);
const Default = exports.Default = Template.bind({});
const Multiple = exports.Multiple = Template.bind({});
Multiple.args = {
  multiple: true,
  buttonLabel: 'Upload files'
};
const Disabled = exports.Disabled = Template.bind({});
Disabled.args = {
  disabled: true
};
const Sizes = args => /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_index.FileInput, _extends({}, args, {
  buttonLabel: "Default size",
  name: "default"
})), /*#__PURE__*/_react.default.createElement(_index.FileInput, _extends({}, args, {
  small: true,
  buttonLabel: "Small",
  name: "small"
})), /*#__PURE__*/_react.default.createElement(_index.FileInput, _extends({}, args, {
  large: true,
  buttonLabel: "Large",
  name: "large"
})));
exports.Sizes = Sizes;
const Statuses = args => /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_index.FileInput, _extends({}, args, {
  buttonLabel: "Default",
  name: "default"
})), /*#__PURE__*/_react.default.createElement(_index.FileInput, _extends({}, args, {
  buttonLabel: "Valid",
  name: "valid",
  valid: true
})), /*#__PURE__*/_react.default.createElement(_index.FileInput, _extends({}, args, {
  buttonLabel: "Warning",
  name: "warning",
  warning: true
})), /*#__PURE__*/_react.default.createElement(_index.FileInput, _extends({}, args, {
  buttonLabel: "Error",
  name: "error",
  error: true
})));
exports.Statuses = Statuses;
const RTL = args => /*#__PURE__*/_react.default.createElement("div", {
  dir: "rtl"
}, /*#__PURE__*/_react.default.createElement(_index.FileInput, _extends({}, args, {
  buttonLabel: "Default",
  name: "default"
})));
exports.RTL = RTL;