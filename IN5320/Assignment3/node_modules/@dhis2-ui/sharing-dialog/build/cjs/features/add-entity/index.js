"use strict";

var _cypressCucumberPreprocessor = require("@badeball/cypress-cucumber-preprocessor");
var _index = require("../fixtures/index.js");
/**
 * a sharing dialog that allows adding entities is visible
 */

(0, _cypressCucumberPreprocessor.Given)('a sharing dialog that allows adding user entities is visible', () => {
  cy.intercept('GET', '/api/38/sharing?type=visualization&id=id', {
    body: _index.noAccess
  });
  cy.visitStory('sharing-dialog', 'visualization');
  cy.contains('Give access to a user or group').should('be.visible');
});
(0, _cypressCucumberPreprocessor.Given)('a sharing dialog that allows adding group entities is visible', () => {
  cy.intercept('GET', '/api/38/sharing?type=visualization&id=id', {
    body: _index.noAccess
  });
  cy.visitStory('sharing-dialog', 'visualization');
  cy.contains('Give access to a user or group').should('be.visible');
});

/**
 * the user gives <target> <level> access
 */

(0, _cypressCucumberPreprocessor.When)('the user gives user view only access', () => {
  cy.intercept('GET', '/api/38/sharing/search?key=A%20user', {
    body: _index.searchUser
  });
  cy.get('[placeholder="Search"]').type('A user');
  cy.contains('[data-test="dhis2-uicore-menuitem"]', 'A user').click();
  cy.contains('Select a level').click();
  cy.contains('[data-test="dhis2-uicore-singleselectoption"]', 'View only').click();
  cy.intercept('PUT', '/api/38/sharing?type=visualization&id=id', req => {
    const expected = {
      object: _index.userViewAccess.object
    };
    expect(req.body).to.deep.equal(expected);
    req.reply({
      statusCode: 200
    });
  });
  cy.intercept('GET', '/api/38/sharing?type=visualization&id=id', {
    body: _index.userViewAccess
  });
  cy.contains('button', 'Give access').click();
});
(0, _cypressCucumberPreprocessor.When)('the user gives user view and edit access', () => {
  cy.intercept('GET', '/api/38/sharing/search?key=A%20user', {
    body: _index.searchUser
  });
  cy.get('[placeholder="Search"]').type('A user');
  cy.contains('[data-test="dhis2-uicore-menuitem"]', 'A user').click();
  cy.contains('Select a level').click();
  cy.contains('[data-test="dhis2-uicore-singleselectoption"]', 'View and edit').click();
  cy.intercept('PUT', '/api/38/sharing?type=visualization&id=id', req => {
    const expected = {
      object: _index.userViewEditAccess.object
    };
    expect(req.body).to.deep.equal(expected);
    req.reply({
      statusCode: 200
    });
  });
  cy.intercept('GET', '/api/38/sharing?type=visualization&id=id', {
    body: _index.userViewEditAccess
  });
  cy.contains('button', 'Give access').click();
});
(0, _cypressCucumberPreprocessor.When)('the user gives group view only access', () => {
  cy.intercept('GET', '/api/38/sharing/search?key=A%20group', {
    body: _index.searchGroup
  });
  cy.get('[placeholder="Search"]').type('A group');
  cy.contains('[data-test="dhis2-uicore-menuitem"]', 'A group').click();
  cy.contains('Select a level').click();
  cy.contains('[data-test="dhis2-uicore-singleselectoption"]', 'View only').click();
  cy.intercept('PUT', '/api/38/sharing?type=visualization&id=id', req => {
    const expected = {
      object: _index.groupViewAccess.object
    };
    expect(req.body).to.deep.equal(expected);
    req.reply({
      statusCode: 200
    });
  });
  cy.intercept('GET', '/api/38/sharing?type=visualization&id=id', {
    body: _index.groupViewAccess
  });
  cy.contains('button', 'Give access').click();
});
(0, _cypressCucumberPreprocessor.When)('the user gives group view and edit access', () => {
  cy.intercept('GET', '/api/38/sharing/search?key=A%20group', {
    body: _index.searchGroup
  });
  cy.get('[placeholder="Search"]').type('A group');
  cy.contains('[data-test="dhis2-uicore-menuitem"]', 'A group').click();
  cy.contains('Select a level').click();
  cy.contains('[data-test="dhis2-uicore-singleselectoption"]', 'View and edit').click();
  cy.intercept('PUT', '/api/38/sharing?type=visualization&id=id', req => {
    const expected = {
      object: _index.groupViewEditAccess.object
    };
    expect(req.body).to.deep.equal(expected);
    req.reply({
      statusCode: 200
    });
  });
  cy.intercept('GET', '/api/38/sharing?type=visualization&id=id', {
    body: _index.groupViewEditAccess
  });
  cy.contains('button', 'Give access').click();
});

/**
 * the <target> should be added to the access list with <level> access
 */

(0, _cypressCucumberPreprocessor.Then)('the user should be added to the access list with view only access', () => {
  cy.contains('.wrapper', 'A user').should('be.visible').as('user-item');
  cy.get('@user-item').contains('Can view').should('be.visible');
  cy.get('@user-item').contains('View only').should('be.visible');
});
(0, _cypressCucumberPreprocessor.Then)('the user should be added to the access list with view and edit access', () => {
  cy.contains('.wrapper', 'A user').should('be.visible').as('user-item');
  cy.get('@user-item').contains('Can view and edit').should('be.visible');
  cy.get('@user-item').contains('View and edit').should('be.visible');
});
(0, _cypressCucumberPreprocessor.Then)('the group should be added to the access list with view only access', () => {
  cy.contains('.wrapper', 'A group').should('be.visible').as('group-item');
  cy.get('@group-item').contains('Can view').should('be.visible');
  cy.get('@group-item').contains('View only').should('be.visible');
});
(0, _cypressCucumberPreprocessor.Then)('the group should be added to the access list with view and edit access', () => {
  cy.contains('.wrapper', 'A group').should('be.visible').as('group-item');
  cy.get('@group-item').contains('Can view and edit').should('be.visible');
  cy.get('@group-item').contains('View and edit').should('be.visible');
});
(0, _cypressCucumberPreprocessor.Then)('the autocomplete input should be cleared', () => {
  cy.get('form input').invoke('val').should('be.empty');
});