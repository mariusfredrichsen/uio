"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.IconizedCheckbox = void 0;
var _style = _interopRequireDefault(require("styled-jsx/style"));
var _checkbox = require("@dhis2-ui/checkbox");
var _propTypes = _interopRequireDefault(require("prop-types"));
var _react = _interopRequireDefault(require("react"));
var _icon = require("./icon.js");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
const IconizedCheckbox = _ref => {
  let {
    checked,
    dataTest,
    hasChildren,
    indeterminate,
    children,
    loading,
    name,
    open,
    value,
    onChange
  } = _ref;
  const icon = /*#__PURE__*/_react.default.createElement(_icon.Icon, {
    loading: loading,
    open: open,
    hasChildren: hasChildren,
    dataTest: dataTest
  });
  const checkboxLabel = /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("span", {
    className: "jsx-1000763175"
  }, icon), children, /*#__PURE__*/_react.default.createElement(_style.default, {
    id: "1000763175"
  }, ["span.jsx-1000763175{display:inline-block;margin-inline-end:4px;}"]));
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_checkbox.Checkbox, {
    dense: true,
    checked: checked,
    name: name,
    value: value,
    label: checkboxLabel,
    indeterminate: indeterminate,
    onChange: onChange
  }));
};
exports.IconizedCheckbox = IconizedCheckbox;
IconizedCheckbox.propTypes = {
  checked: _propTypes.default.bool.isRequired,
  children: _propTypes.default.any.isRequired,
  dataTest: _propTypes.default.string.isRequired,
  hasChildren: _propTypes.default.bool.isRequired,
  indeterminate: _propTypes.default.bool.isRequired,
  loading: _propTypes.default.bool.isRequired,
  name: _propTypes.default.string.isRequired,
  open: _propTypes.default.bool.isRequired,
  value: _propTypes.default.string.isRequired,
  onChange: _propTypes.default.func.isRequired
};