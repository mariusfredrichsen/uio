import _JSXStyle from "styled-jsx/style";
import { colors } from '@dhis2/ui-constants';
import { Required } from '@dhis2-ui/required';
import cx from 'classnames';
import PropTypes from 'prop-types';
import React from 'react';
const styles = [`label.jsx-2904627559{display:block;box-sizing:border-box;font-size:14px;line-height:19px;color:${colors.grey900};padding:0;}`, ".disabled.jsx-2904627559{cursor:not-allowed;}"];
styles.__hash = "2904627559";
const constructClassName = _ref => {
  let {
    disabled,
    className
  } = _ref;
  return cx(className, {
    disabled: disabled
  });
};
export const Label = _ref2 => {
  let {
    htmlFor,
    children,
    required,
    disabled,
    className,
    dataTest = 'dhis2-uicore-label'
  } = _ref2;
  return /*#__PURE__*/React.createElement("label", {
    htmlFor: htmlFor,
    "data-test": dataTest,
    className: `jsx-${styles.__hash}` + " " + (constructClassName({
      className,
      disabled
    }) || "")
  }, /*#__PURE__*/React.createElement("span", {
    className: `jsx-${styles.__hash}`
  }, children), required && /*#__PURE__*/React.createElement(Required, {
    dataTest: `${dataTest}-required`
  }), /*#__PURE__*/React.createElement(_JSXStyle, {
    id: styles.__hash
  }, styles));
};
Label.propTypes = {
  children: PropTypes.string,
  className: PropTypes.string,
  dataTest: PropTypes.string,
  disabled: PropTypes.bool,
  htmlFor: PropTypes.string,
  required: PropTypes.bool
};