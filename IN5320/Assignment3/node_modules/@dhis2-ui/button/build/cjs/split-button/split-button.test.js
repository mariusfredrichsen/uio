"use strict";

var _react = require("@testing-library/react");
var _react2 = _interopRequireDefault(require("react"));
require("@testing-library/jest-dom/extend-expect");
var _splitButton = require("./split-button.js");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
describe('SplitButton', () => {
  afterEach(_react.cleanup);
  it('renders button with children', () => {
    const {
      getByText
    } = (0, _react.render)( /*#__PURE__*/_react2.default.createElement(_splitButton.SplitButton, null, "Click me"));
    expect(getByText('Click me')).toBeInTheDocument();
  });
  it('toggles dropdown when left button is clicked', () => {
    const {
      getByTestId,
      queryByTestId
    } = (0, _react.render)( /*#__PURE__*/_react2.default.createElement(_splitButton.SplitButton, null));
    const toggleButton = getByTestId('dhis2-uicore-splitbutton-toggle');
    _react.fireEvent.click(toggleButton);
    expect(queryByTestId('dhis2-uicore-splitbutton-menu')).toBeInTheDocument();
    _react.fireEvent.click(toggleButton);
    expect(queryByTestId('dhis2-uicore-splitbutton-menu')).not.toBeInTheDocument();
  });
  it('renders dropdown content when open is true', () => {
    const {
      getByTestId
    } = (0, _react.render)( /*#__PURE__*/_react2.default.createElement(_splitButton.SplitButton, {
      component: /*#__PURE__*/_react2.default.createElement("div", null, "Dropdown Content")
    }));
    const toggleButton = getByTestId('dhis2-uicore-splitbutton-toggle');
    _react.fireEvent.click(toggleButton);
    expect(getByTestId('dhis2-uicore-splitbutton-menu')).toBeInTheDocument();
  });
  it("does not close dropdown 'Enter' key is pressed", async () => {
    const {
      getByTestId
    } = (0, _react.render)( /*#__PURE__*/_react2.default.createElement(_splitButton.SplitButton, {
      component: /*#__PURE__*/_react2.default.createElement("div", null, "Dropdown Content")
    }));
    const toggleButton = getByTestId('dhis2-uicore-splitbutton-toggle');
    _react.fireEvent.click(toggleButton);
    expect(getByTestId('dhis2-uicore-splitbutton-menu')).toBeInTheDocument();
    _react.fireEvent.keyDown(document, {
      key: 'Enter'
    });

    // Use waitFor to wait for the DOM to update
    await (0, _react.waitFor)(() => {
      expect(getByTestId('dhis2-uicore-splitbutton-menu')).toBeInTheDocument();
    });
  });
  it('closes dropdown when escape key is pressed', async () => {
    const {
      getByTestId,
      queryByTestId
    } = (0, _react.render)( /*#__PURE__*/_react2.default.createElement(_splitButton.SplitButton, {
      component: /*#__PURE__*/_react2.default.createElement("div", null, "Dropdown Content")
    }));
    const toggleButton = getByTestId('dhis2-uicore-splitbutton-toggle');
    _react.fireEvent.click(toggleButton);
    expect(getByTestId('dhis2-uicore-splitbutton-menu')).toBeInTheDocument();
    _react.fireEvent.keyDown(document, {
      key: 'Escape'
    });

    // Use waitFor to wait for the DOM to update
    await (0, _react.waitFor)(() => {
      expect(queryByTestId('dhis2-uicore-splitbutton-menu')).not.toBeInTheDocument();
    });
  });
  it('adds title and aria-label attributes to the right button', () => {
    const {
      getByTestId
    } = (0, _react.render)( /*#__PURE__*/_react2.default.createElement(_splitButton.SplitButton, null));
    const toggleButton = getByTestId('dhis2-uicore-splitbutton-toggle');
    expect(toggleButton).toHaveAttribute('title', 'Toggle dropdown');
    expect(toggleButton).toHaveAttribute('aria-label', 'Toggle dropdown');
  });
});