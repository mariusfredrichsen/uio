"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.WithMenu = exports.WithClick = exports.Small = exports.Secondary = exports.RTL = exports.Primary = exports.Open = exports.ManualControl = exports.Large = exports.InitialFocus = exports.Disabled = exports.Destructive = exports.Default = void 0;
var _uiConstants = require("@dhis2/ui-constants");
var _menu = require("@dhis2-ui/menu");
var _react = _interopRequireWildcard(require("react"));
var _index = require("./index.js");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
const description = `
Presents several actions to a user in a small space. Can replace single, individual buttons. Should only be used for actions that are related to one another. Ensure the button has a useful level that communicates that actions are contained within. Dropdown buttons do not have an explicit action, only expanding the list of contained actions.

\`\`\`js
import { DropdownButton } from '@dhis2/ui'
\`\`\`
`;
const Simple = /*#__PURE__*/_react.default.createElement("span", null, "Simplest thing");
const {
  sizeArgType,
  buttonVariantArgType
} = _uiConstants.sharedPropTypes;
var _default = exports.default = {
  title: 'Dropdown Button',
  component: _index.DropdownButton,
  parameters: {
    docs: {
      description: {
        component: description
      }
    }
  },
  argTypes: {
    primary: {
      ...buttonVariantArgType
    },
    secondary: {
      ...buttonVariantArgType
    },
    destructive: {
      ...buttonVariantArgType
    },
    small: {
      ...sizeArgType
    },
    large: {
      ...sizeArgType
    }
  },
  // Default args for all stories (can be overridden)
  args: {
    name: 'buttonName',
    value: 'buttonValue',
    component: Simple,
    children: 'Label me!'
  }
};
const Template = args => /*#__PURE__*/_react.default.createElement(_index.DropdownButton, args);
const Default = exports.Default = Template.bind({});
const WithClick = exports.WithClick = Template.bind({});
WithClick.args = {
  onClick: _ref => {
    let {
      open
    } = _ref;
    return console.log('onClick: the dropdown is open: ', open);
  }
};
const Primary = exports.Primary = Template.bind({});
Primary.args = {
  primary: true
};
const Secondary = exports.Secondary = Template.bind({});
Secondary.args = {
  secondary: true
};
const Destructive = exports.Destructive = Template.bind({});
Destructive.args = {
  destructive: true
};
const Disabled = exports.Disabled = Template.bind({});
Disabled.args = {
  disabled: true
};
const Small = exports.Small = Template.bind({});
Small.args = {
  small: true
};
const Large = exports.Large = Template.bind({});
Large.args = {
  large: true
};
const WithMenu = exports.WithMenu = Template.bind({});
WithMenu.args = {
  component: /*#__PURE__*/_react.default.createElement(_menu.FlyoutMenu, null, /*#__PURE__*/_react.default.createElement(_menu.MenuItem, {
    label: "Item 1"
  }), /*#__PURE__*/_react.default.createElement(_menu.MenuItem, {
    label: "Item 2"
  }), /*#__PURE__*/_react.default.createElement(_menu.MenuItem, {
    label: "Item 3"
  }))
};
// FlyoutMenu needs iframe
// But docs page down too much with iframe, so disabled
WithMenu.parameters = {
  docs: {
    disable: true
  }
};
const InitialFocus = exports.InitialFocus = Template.bind({});
InitialFocus.args = {
  initialFocus: true
};
/**
 * 'Initial focus' stories cause the docs page to scroll away each time
 * a control is changed, therefore it is omitted from the docs page (but
 * not the normal 'canvas' story viewer)
 */
InitialFocus.parameters = {
  docs: {
    disable: true
  }
};
const OpenTemplate = args => {
  return /*#__PURE__*/_react.default.createElement(_index.DropdownButton, args);
};
const Open = exports.Open = OpenTemplate.bind({});
Open.args = {
  open: true,
  component: Simple,
  onClick: () => {}
};
const ManualControlTemplate = args => {
  const [isOpen, setIsOpen] = (0, _react.useState)(true);
  const handleOpen = () => setIsOpen(false);
  const Menu = /*#__PURE__*/_react.default.createElement("ul", null, /*#__PURE__*/_react.default.createElement("li", null, "First option does nothing"), /*#__PURE__*/_react.default.createElement("li", {
    onClick: handleOpen
  }, "Close the dropdown"));
  return /*#__PURE__*/_react.default.createElement(_index.DropdownButton, _extends({}, args, {
    onClick: () => setIsOpen(!isOpen),
    open: isOpen,
    component: Menu
  }));
};
const ManualControl = exports.ManualControl = ManualControlTemplate.bind({});
ManualControl.args = {};
const RTL = args => /*#__PURE__*/_react.default.createElement("div", {
  dir: "rtl"
}, /*#__PURE__*/_react.default.createElement(_index.DropdownButton, args));
exports.RTL = RTL;
RTL.args = {
  children: 'RTL text'
};