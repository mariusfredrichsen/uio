"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CheckboxField = void 0;
var _uiConstants = require("@dhis2/ui-constants");
var _field = require("@dhis2-ui/field");
var _required = require("@dhis2-ui/required");
var _propTypes = _interopRequireDefault(require("prop-types"));
var _react = _interopRequireDefault(require("react"));
var _index = require("../checkbox/index.js");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
const AddRequired = _ref => {
  let {
    label,
    required,
    dataTest
  } = _ref;
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, label, required && /*#__PURE__*/_react.default.createElement(_required.Required, {
    dataTest: `${dataTest}-required`
  }));
};
AddRequired.propTypes = {
  dataTest: _propTypes.default.string,
  label: _propTypes.default.node,
  required: _propTypes.default.bool
};
const CheckboxField = _ref2 => {
  let {
    value,
    label,
    name,
    className,
    tabIndex,
    onChange,
    onFocus,
    onKeyDown,
    onBlur,
    checked,
    disabled,
    valid,
    warning,
    error,
    dense,
    initialFocus,
    required,
    helpText,
    validationText,
    dataTest = 'dhis2-uiwidgets-checkboxfield'
  } = _ref2;
  return /*#__PURE__*/_react.default.createElement(_field.Field, {
    className: className,
    dataTest: dataTest,
    helpText: helpText,
    validationText: validationText,
    error: error,
    warning: warning,
    valid: valid,
    disabled: disabled
  }, /*#__PURE__*/_react.default.createElement(_index.Checkbox, {
    value: value,
    label: /*#__PURE__*/_react.default.createElement(AddRequired, {
      label: label,
      required: required,
      dataTest: dataTest
    }),
    name: name,
    tabIndex: tabIndex,
    onChange: onChange,
    onFocus: onFocus,
    onKeyDown: onKeyDown,
    onBlur: onBlur,
    checked: checked,
    disabled: disabled,
    valid: valid,
    warning: warning,
    error: error,
    dense: dense,
    initialFocus: initialFocus
  }));
};
exports.CheckboxField = CheckboxField;
CheckboxField.propTypes = {
  checked: _propTypes.default.bool,
  className: _propTypes.default.string,
  dataTest: _propTypes.default.string,
  /** Smaller dimensions for information-dense layouts */
  dense: _propTypes.default.bool,
  /** Disables the checkbox */
  disabled: _propTypes.default.bool,
  /** Applies 'error' styling to checkbox and validation text for feedback. Mutually exclusive with `warning` and `valid` props */
  error: _uiConstants.sharedPropTypes.statusPropType,
  /** Useful instructions for the user */
  helpText: _propTypes.default.string,
  initialFocus: _propTypes.default.bool,
  /** Labels the checkbox */
  label: _propTypes.default.node,
  /** Name associate with the checkbox. Passed in object as argument to event handlers */
  name: _propTypes.default.string,
  /** Adds an asterisk to indicate this field is required */
  required: _propTypes.default.bool,
  tabIndex: _propTypes.default.string,
  /** Applies 'valid' styling to checkbox and validation text for feedback. Mutually exclusive with `warning` and `error` props */
  valid: _uiConstants.sharedPropTypes.statusPropType,
  /** Adds text below the checkbox to provide validation feedback. Acquires styles from `valid`, `warning` and `error` statuses */
  validationText: _propTypes.default.string,
  /** Value associated with the checkbox. Passed in object as argument to event handlers */
  value: _propTypes.default.string,
  /** Applies 'warning' styling to checkbox and validation text for feedback. Mutually exclusive with `valid` and `error` props */
  warning: _uiConstants.sharedPropTypes.statusPropType,
  /** Called with signature `({ name: string, value: string, checked: bool }, event)` */
  onBlur: _propTypes.default.func,
  /** Called with signature `({ name: string, value: string, checked: bool }, event)` */
  onChange: _propTypes.default.func,
  /** Called with signature `({ name: string, value: string, checked: bool }, event)` */
  onFocus: _propTypes.default.func,
  /** Called with signature `({ name: string, value: string, checked: bool }, event)` */
  onKeyDown: _propTypes.default.func
};