"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.removeOption = exports.findOptionChild = exports.findOption = exports.filterIgnored = exports.checkIfValidOption = void 0;
var _react = _interopRequireDefault(require("react"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
// Check whether an option is valid
const checkIfValidOption = option => option && 'props' in option && 'value' in option.props && 'label' in option.props;

// Filters all children that won't be rendered from an array of react children
exports.checkIfValidOption = checkIfValidOption;
const filterIgnored = children => _react.default.Children.toArray(children).filter(child => child !== null && child !== false && child !== undefined);

// Find an option in an array of react children
exports.filterIgnored = filterIgnored;
const findOptionChild = (value, optionChildren) => _react.default.Children.toArray(optionChildren).find(currentOption => {
  if (!currentOption.props) {
    return false;
  }
  return value === currentOption.props.value;
});

// Find an option in an array of option objects
exports.findOptionChild = findOptionChild;
const findOption = (value, optionArray) => optionArray.find(optionValue => value === optionValue);

// Remove a specific option from an array of options
exports.findOption = findOption;
const removeOption = (value, optionArray) => optionArray.filter(optionValue => {
  return optionValue !== value;
});
exports.removeOption = removeOption;