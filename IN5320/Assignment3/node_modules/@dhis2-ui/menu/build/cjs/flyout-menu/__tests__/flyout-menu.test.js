"use strict";

var _react = require("@testing-library/react");
var _userEvent = _interopRequireDefault(require("@testing-library/user-event"));
var _react2 = _interopRequireDefault(require("react"));
var _menuItem = require("../../menu-item/menu-item.js");
var _flyoutMenu = require("../flyout-menu.js");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
describe('Flyout Menu Component', () => {
  it('can handle navigation of submenus', () => {
    const {
      getByText,
      queryByText,
      getAllByRole
    } = (0, _react.render)( /*#__PURE__*/_react2.default.createElement(_flyoutMenu.FlyoutMenu, null, /*#__PURE__*/_react2.default.createElement(_menuItem.MenuItem, {
      label: "Item 1"
    }), /*#__PURE__*/_react2.default.createElement(_menuItem.MenuItem, {
      label: "Item 2"
    }, /*#__PURE__*/_react2.default.createElement(_menuItem.MenuItem, {
      label: "Item 2 a"
    }))));
    const itemOne = getByText(/Item 1/i);
    const itemTwo = getByText(/Item 2/i);
    let submenuChild = queryByText(/Item 2 a/i);
    const menuItems = getAllByRole('menuitem');
    expect(menuItems.length).toBe(2);
    expect(menuItems[0]).toBe(itemOne.parentNode);
    expect(menuItems[1]).toBe(itemTwo.parentNode);
    expect(submenuChild).not.toBeInTheDocument();
    _userEvent.default.tab();
    expect(menuItems[0].parentNode).toHaveFocus();
    expect(menuItems[1].parentNode).not.toHaveFocus();
    _userEvent.default.keyboard('{ArrowDown}');
    expect(menuItems[0].parentNode).not.toHaveFocus();
    expect(menuItems[1].parentNode).toHaveFocus();
    _userEvent.default.keyboard('{ArrowRight}');
    submenuChild = getByText(/Item 2 a/i);
    expect(submenuChild).toBeInTheDocument();
    expect(submenuChild.parentElement.parentElement).toHaveFocus();
    _userEvent.default.keyboard('{ArrowLeft}');
    expect(queryByText(/Item 2 a/i)).not.toBeInTheDocument();
    expect(menuItems[1].parentNode).toHaveFocus();
  });
});