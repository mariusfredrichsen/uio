"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.WithoutDivider = exports.TopOfList = exports.Dense = exports.Default = void 0;
var _propTypes = _interopRequireDefault(require("prop-types"));
var _react = _interopRequireDefault(require("react"));
var _index = require("../index.js");
var _menuSectionHeader = require("./menu-section-header.js");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
const description = `
Items in a menu can be split into separate sections by using Dividers. Group relevant menu items together to help the user understand the options quickly. A Divider can be used alone. If using a Menu Section Header, a divider will be automatically included. Try not to group single menu items together. An exception to this is a critical destructive menu item, like 'Delete', which can be separated from other menu items.

\`\`\`js
import { MenuSectionHeader } from '@dhis2/ui'
\`\`\`
`;
var _default = exports.default = {
  title: 'Menu Section Header',
  component: _menuSectionHeader.MenuSectionHeader,
  args: {
    label: 'Section header'
  },
  parameters: {
    docs: {
      description: {
        component: description
      }
    }
  }
};
const Template = _ref => {
  let {
    menuArgs,
    ...args
  } = _ref;
  return /*#__PURE__*/_react.default.createElement(_index.Menu, menuArgs, /*#__PURE__*/_react.default.createElement(_index.MenuItem, {
    label: "Menu item above"
  }), /*#__PURE__*/_react.default.createElement(_menuSectionHeader.MenuSectionHeader, args), /*#__PURE__*/_react.default.createElement(_index.MenuItem, {
    label: "Menu item below"
  }));
};
Template.propTypes = {
  menuArgs: _propTypes.default.shape()
};
const Default = exports.Default = Template.bind({});
const Dense = exports.Dense = Template.bind({});
Dense.args = {
  menuArgs: {
    dense: true
  },
  dense: true
};
const WithoutDivider = exports.WithoutDivider = Template.bind({});
WithoutDivider.args = {
  hideDivider: true
};
const TopOfList = args => /*#__PURE__*/_react.default.createElement(_index.Menu, null, /*#__PURE__*/_react.default.createElement(_menuSectionHeader.MenuSectionHeader, args), /*#__PURE__*/_react.default.createElement(_index.MenuItem, {
  label: "Item 1"
}), /*#__PURE__*/_react.default.createElement(_index.MenuItem, {
  label: "Item 2"
}));
exports.TopOfList = TopOfList;
TopOfList.args = {
  label: 'Top of list (so <Menu> hides divider)'
};
TopOfList.parameters = {
  docs: {
    description: {
      story: 'When the Section Header is the first child of a `<Menu>`, the Menu parent automatically applies the `hideDivider` prop.'
    }
  }
};