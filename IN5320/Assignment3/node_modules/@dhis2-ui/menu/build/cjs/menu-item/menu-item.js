"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MenuItem = void 0;
var _style = _interopRequireDefault(require("styled-jsx/style"));
var _uiIcons = require("@dhis2/ui-icons");
var _popper = require("@dhis2-ui/popper");
var _portal = require("@dhis2-ui/portal");
var _classnames = _interopRequireDefault(require("classnames"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _react = _interopRequireWildcard(require("react"));
var _index = require("../flyout-menu/index.js");
var _menuItemStyles = _interopRequireDefault(require("./menu-item.styles.js"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
const isModifiedEvent = evt => evt.metaKey || evt.altKey || evt.ctrlKey || evt.shiftKey;
const createOnClickHandler = _ref => {
  let {
    onClick,
    toggleSubMenu,
    isLink,
    value
  } = _ref;
  return evt => {
    if (isLink && isModifiedEvent(evt) || !(onClick || toggleSubMenu)) {
      return;
    }
    evt.preventDefault();
    evt.stopPropagation();
    onClick && onClick({
      value
    }, evt);
    toggleSubMenu && toggleSubMenu();
  };
};
const MenuItem = _ref2 => {
  let {
    href,
    onClick,
    children,
    target,
    icon,
    className,
    destructive,
    disabled,
    dense,
    active,
    dataTest = 'dhis2-uicore-menuitem',
    chevron,
    value,
    label,
    showSubMenu,
    toggleSubMenu,
    suffix,
    checkbox,
    checked,
    tabIndex
  } = _ref2;
  const menuItemRef = (0, _react.useRef)();
  const [openSubMenus, setOpenSubMenus] = (0, _react.useState)([]);
  (0, _react.useEffect)(() => {
    // track open submenus
    setOpenSubMenus(document.querySelectorAll('[data-submenu-open=true]'));
  }, []);
  (0, _react.useEffect)(() => {
    if (!menuItemRef.current) {
      return;
    }
    const menuItem = menuItemRef.current;
    const handleKeyDown = event => {
      var _openSubMenus, _openSubMenus2;
      const firstChild = event.target.children[0];
      const hasSubMenu = firstChild === null || firstChild === void 0 ? void 0 : firstChild.getAttribute('aria-haspopup');
      switch (event.key) {
        // for submenus
        case 'ArrowRight':
          event.preventDefault();
          if (hasSubMenu) {
            firstChild.click();
          }
          break;
        case 'ArrowLeft':
        case 'Escape':
          // close flyout menu
          event.preventDefault();
          (_openSubMenus = openSubMenus[openSubMenus.length - 1]) === null || _openSubMenus === void 0 ? void 0 : _openSubMenus.focus();
          (_openSubMenus2 = openSubMenus[openSubMenus.length - 1]) === null || _openSubMenus2 === void 0 ? void 0 : _openSubMenus2.children[0].click();
          break;
      }
    };
    menuItem.addEventListener('keydown', handleKeyDown);
    return () => {
      menuItem.removeEventListener('keydown', handleKeyDown);
    };
  }, [openSubMenus]);
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("li", {
    ref: menuItemRef,
    "data-test": dataTest,
    role: "presentation",
    tabIndex: tabIndex,
    "data-submenu-open": children && showSubMenu,
    className: `jsx-${_menuItemStyles.default.__hash}` + " " + ((0, _classnames.default)(className, {
      destructive,
      disabled,
      dense,
      active: active || showSubMenu || tabIndex === 0,
      'with-chevron': children || chevron
    }) || "")
  }, /*#__PURE__*/_react.default.createElement("a", {
    target: target,
    href: !disabled && href ? href : undefined,
    onClick: !disabled ? createOnClickHandler({
      onClick,
      toggleSubMenu,
      isLink: !!href,
      value
    }) : undefined,
    role: checkbox ? 'menuitemcheckbox' : 'menuitem',
    "aria-checked": checkbox ? checked : null,
    "aria-disabled": disabled,
    "aria-haspopup": children && 'menu',
    "aria-expanded": showSubMenu,
    "aria-label": label,
    className: `jsx-${_menuItemStyles.default.__hash}`
  }, icon && /*#__PURE__*/_react.default.createElement("span", {
    className: `jsx-${_menuItemStyles.default.__hash}` + " " + "icon"
  }, icon), /*#__PURE__*/_react.default.createElement("span", {
    className: `jsx-${_menuItemStyles.default.__hash}` + " " + "label"
  }, label), suffix && /*#__PURE__*/_react.default.createElement("span", {
    className: `jsx-${_menuItemStyles.default.__hash}` + " " + "suffix"
  }, suffix), (chevron || children) && /*#__PURE__*/_react.default.createElement("span", {
    className: `jsx-${_menuItemStyles.default.__hash}` + " " + "chevron"
  }, /*#__PURE__*/_react.default.createElement(_uiIcons.IconChevronRight24, null))), /*#__PURE__*/_react.default.createElement(_style.default, {
    id: _menuItemStyles.default.__hash
  }, _menuItemStyles.default)), children && showSubMenu && /*#__PURE__*/_react.default.createElement(_portal.Portal, null, /*#__PURE__*/_react.default.createElement(_popper.Popper, {
    placement: "right-start",
    reference: menuItemRef
  }, /*#__PURE__*/_react.default.createElement(_index.FlyoutMenu, {
    dense: dense
  }, children))));
};
exports.MenuItem = MenuItem;
MenuItem.propTypes = {
  active: _propTypes.default.bool,
  checkbox: _propTypes.default.bool,
  checked: _propTypes.default.bool,
  chevron: _propTypes.default.bool,
  /**
   * Nested menu items can become submenus.
   * See `showSubMenu` and `toggleSubMenu` props, and 'Children' demo
   */
  children: _propTypes.default.node,
  className: _propTypes.default.string,
  dataTest: _propTypes.default.string,
  dense: _propTypes.default.bool,
  destructive: _propTypes.default.bool,
  disabled: _propTypes.default.bool,
  /** For using menu item as a link */
  href: _propTypes.default.string,
  /** An icon for the left side of the menu item */
  icon: _propTypes.default.node,
  /** Text in the menu item */
  label: _propTypes.default.node,
  /** When true, nested menu items are shown in a Popper */
  showSubMenu: _propTypes.default.bool,
  /** A supporting element shown at the end of the menu item */
  suffix: _propTypes.default.node,
  tabIndex: _propTypes.default.number,
  /** For using menu item as a link */
  target: _propTypes.default.string,
  /** On click, this function is called (without args) */
  toggleSubMenu: _propTypes.default.func,
  /** Value associated with item. Passed as an argument to onClick handler. */
  value: _propTypes.default.string,
  /** Click handler called with signature `({ value: string }, event)` */
  onClick: _propTypes.default.func
};