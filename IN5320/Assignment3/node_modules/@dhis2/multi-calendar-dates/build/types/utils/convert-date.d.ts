import { Temporal } from '@js-temporal/polyfill';
import { SupportedCalendar } from '../types';
declare type PlainDate = {
    year: number;
    month: number;
    day: number;
    eraYear?: number;
};
declare type ConvertDateFn = (date: string | Temporal.PlainDateLike, calendar: SupportedCalendar) => PlainDate;
/**
 * converts from an iso8601 (gregorian) date to a specific calendar
 *
 * @param date string in the format yyyy-MM-dd
 * @param userCalendar the calendar to covert to
 * @returns an object representing the date
 *
 * NOTE: the returned object contains two properties year and eraYear
 * to be consistent with the default behaviour of Temporal. This only affects
 * ethiopic calendar in practice. When accessing year, consumers should be defensive
 * and do: `const yearToUse = result.eraYear ?? result.year` for example.
 *
 * @see https://github.com/tc39/ecma402/issues/534 for more details
 */
export declare const convertFromIso8601: ConvertDateFn;
/**
 * converts from a specific calendar (i.e. ethiopic or nepali) to iso8601 (gregorian)
 *
 * @param date calendar date in the format yyyy-MM-dd
 * @param userCalendar the calendar to convert from
 * @returns an object representing the iso8601 date
 */
export declare const convertToIso8601: ConvertDateFn;
export {};
