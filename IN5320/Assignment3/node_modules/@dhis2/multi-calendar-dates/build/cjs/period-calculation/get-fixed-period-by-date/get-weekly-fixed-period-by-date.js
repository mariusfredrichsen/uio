"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _index = require("../generate-fixed-periods/index");
const getWeeklyFixedPeriodByDate = _ref => {
  let {
    periodType,
    date,
    calendar
  } = _ref;
  const year = parseInt(date.substring(0, 4), 10);
  const weeklyPeriods = (0, _index.generateFixedPeriodsWeekly)({
    year,
    calendar,
    periodType,
    startingDay: 1
  });

  // if start date of first period of year is after current date get last
  // period of last year
  if (date < weeklyPeriods[0].startDate) {
    return (0, _index.generateFixedPeriodsWeekly)({
      year: year - 1,
      calendar,
      periodType,
      startingDay: 1
    }).slice(-1)[0];
  }
  const fixedPeriod = weeklyPeriods.find(currentPeriod => {
    return (
      // On or after start date of current period
      date >= currentPeriod.startDate &&
      // On or before end date of current period
      date <= currentPeriod.endDate
    );
  });
  if (fixedPeriod) {
    return fixedPeriod;
  }
  throw new Error(`Something went wrong retrieving the fixed period of type "${periodType}" for date "${date}"`);
};
var _default = getWeeklyFixedPeriodByDate;
exports.default = _default;