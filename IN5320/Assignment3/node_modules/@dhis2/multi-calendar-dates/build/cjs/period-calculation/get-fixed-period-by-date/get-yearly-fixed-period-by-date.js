"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _index = require("../generate-fixed-periods/index");
const getYearlyFixedPeriodByDate = _ref => {
  let {
    date,
    calendar,
    locale,
    periodType
  } = _ref;
  const year = parseInt(date.substring(0, 4), 10);
  const yearlyPeriods = (0, _index.generateFixedPeriodsYearly)({
    year,
    calendar,
    periodType,
    yearsCount: 1,
    locale
  });

  // For a particular year, there is only one period with `yearsCount: 1`,
  // so we can extract that particular period right away
  const [yearlyPeriod] = yearlyPeriods;
  const isCurrentDateBeforePeriodStartDate = date < yearlyPeriod.startDate;

  // In case the yearly period does not start on January 1, like financial years
  if (isCurrentDateBeforePeriodStartDate) {
    const yearlyPeriodsPrevYear = (0, _index.generateFixedPeriodsYearly)({
      year: year - 1,
      calendar,
      periodType,
      yearsCount: 1,
      locale
    });
    const [yearlyPeriodPrevYear] = yearlyPeriodsPrevYear;
    return yearlyPeriodPrevYear;
  }
  return yearlyPeriod;
};
var _default = getYearlyFixedPeriodByDate;
exports.default = _default;